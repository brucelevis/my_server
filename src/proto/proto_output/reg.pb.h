// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reg.proto

#ifndef PROTOBUF_reg_2eproto__INCLUDED
#define PROTOBUF_reg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MSG {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_reg_2eproto();
void protobuf_AssignDesc_reg_2eproto();
void protobuf_ShutdownFile_reg_2eproto();

class reg;

// ===================================================================

class reg : public ::google::protobuf::Message {
 public:
  reg();
  virtual ~reg();

  reg(const reg& from);

  inline reg& operator=(const reg& from) {
	CopyFrom(from);
	return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
	return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
	return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const reg& default_instance();

  void Swap(reg* other);

  // implements Message ----------------------------------------------

  inline reg* New() const { return New(NULL); }

  reg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const reg& from);
  void MergeFrom(const reg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
	  ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
	  ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(reg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
	return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
	return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 career = 1;
  bool has_career() const;
  void clear_career();
  static const int kCareerFieldNumber = 1;
  ::google::protobuf::int32 career() const;
  void set_career(::google::protobuf::int32 value);

  // required int32 sex = 2;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 2;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required string account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // @@protoc_insertion_point(class_scope:MSG.reg)
 private:
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_account();
  inline void clear_has_account();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 career_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  friend void  protobuf_AddDesc_reg_2eproto();
  friend void protobuf_AssignDesc_reg_2eproto();
  friend void protobuf_ShutdownFile_reg_2eproto();

  void InitAsDefaultInstance();
  static reg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// reg

// required int32 career = 1;
inline bool reg::has_career() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void reg::set_has_career() {
  _has_bits_[0] |= 0x00000001u;
}
inline void reg::clear_has_career() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void reg::clear_career() {
  career_ = 0;
  clear_has_career();
}
inline ::google::protobuf::int32 reg::career() const {
  // @@protoc_insertion_point(field_get:MSG.reg.career)
  return career_;
}
inline void reg::set_career(::google::protobuf::int32 value) {
  set_has_career();
  career_ = value;
  // @@protoc_insertion_point(field_set:MSG.reg.career)
}

// required int32 sex = 2;
inline bool reg::has_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void reg::set_has_sex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void reg::clear_has_sex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void reg::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 reg::sex() const {
  // @@protoc_insertion_point(field_get:MSG.reg.sex)
  return sex_;
}
inline void reg::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:MSG.reg.sex)
}

// required string account = 3;
inline bool reg::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void reg::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void reg::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void reg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& reg::account() const {
  // @@protoc_insertion_point(field_get:MSG.reg.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void reg::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MSG.reg.account)
}
inline void reg::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.reg.account)
}
inline void reg::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.reg.account)
}
inline ::std::string* reg::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:MSG.reg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* reg::release_account() {
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void reg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
	set_has_account();
  } else {
	clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:MSG.reg.account)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MSG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_reg_2eproto__INCLUDED
