// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google_size.proto

#ifndef PROTOBUF_google_5fsize_2eproto__INCLUDED
#define PROTOBUF_google_5fsize_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace benchmarks {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_5fsize_2eproto();
void protobuf_AssignDesc_google_5fsize_2eproto();
void protobuf_ShutdownFile_google_5fsize_2eproto();

class SizeMessage1;
class SizeMessage1SubMessage;
class SizeMessage2;
class SizeMessage2_Group1;
class SizeMessage2GroupedMessage;

// ===================================================================

class SizeMessage1 : public ::google::protobuf::Message {
 public:
  SizeMessage1();
  virtual ~SizeMessage1();

  SizeMessage1(const SizeMessage1& from);

  inline SizeMessage1& operator=(const SizeMessage1& from) {
	CopyFrom(from);
	return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
	return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
	return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SizeMessage1& default_instance();

  void Swap(SizeMessage1* other);

  // implements Message ----------------------------------------------

  inline SizeMessage1* New() const { return New(NULL); }

  SizeMessage1* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SizeMessage1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
	return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
	return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string field1 = 1;
  bool has_field1() const;
  void clear_field1();
  static const int kField1FieldNumber = 1;
  const ::std::string& field1() const;
  void set_field1(const ::std::string& value);
  void set_field1(const char* value);
  void set_field1(const char* value, size_t size);
  ::std::string* mutable_field1();
  ::std::string* release_field1();
  void set_allocated_field1(::std::string* field1);

  // optional string field9 = 9;
  bool has_field9() const;
  void clear_field9();
  static const int kField9FieldNumber = 9;
  const ::std::string& field9() const;
  void set_field9(const ::std::string& value);
  void set_field9(const char* value);
  void set_field9(const char* value, size_t size);
  ::std::string* mutable_field9();
  ::std::string* release_field9();
  void set_allocated_field9(::std::string* field9);

  // optional string field18 = 18;
  bool has_field18() const;
  void clear_field18();
  static const int kField18FieldNumber = 18;
  const ::std::string& field18() const;
  void set_field18(const ::std::string& value);
  void set_field18(const char* value);
  void set_field18(const char* value, size_t size);
  ::std::string* mutable_field18();
  ::std::string* release_field18();
  void set_allocated_field18(::std::string* field18);

  // optional bool field80 = 80 [default = false];
  bool has_field80() const;
  void clear_field80();
  static const int kField80FieldNumber = 80;
  bool field80() const;
  void set_field80(bool value);

  // optional bool field81 = 81 [default = true];
  bool has_field81() const;
  void clear_field81();
  static const int kField81FieldNumber = 81;
  bool field81() const;
  void set_field81(bool value);

  // required int32 field2 = 2;
  bool has_field2() const;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::int32 field2() const;
  void set_field2(::google::protobuf::int32 value);

  // required int32 field3 = 3;
  bool has_field3() const;
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::int32 field3() const;
  void set_field3(::google::protobuf::int32 value);

  // optional int32 field280 = 280;
  bool has_field280() const;
  void clear_field280();
  static const int kField280FieldNumber = 280;
  ::google::protobuf::int32 field280() const;
  void set_field280(::google::protobuf::int32 value);

  // optional int32 field6 = 6 [default = 0];
  bool has_field6() const;
  void clear_field6();
  static const int kField6FieldNumber = 6;
  ::google::protobuf::int32 field6() const;
  void set_field6(::google::protobuf::int32 value);

  // optional int64 field22 = 22;
  bool has_field22() const;
  void clear_field22();
  static const int kField22FieldNumber = 22;
  ::google::protobuf::int64 field22() const;
  void set_field22(::google::protobuf::int64 value);

  // optional string field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::std::string& field4() const;
  void set_field4(const ::std::string& value);
  void set_field4(const char* value);
  void set_field4(const char* value, size_t size);
  ::std::string* mutable_field4();
  ::std::string* release_field4();
  void set_allocated_field4(::std::string* field4);

  // repeated fixed64 field5 = 5;
  int field5_size() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  ::google::protobuf::uint64 field5(int index) const;
  void set_field5(int index, ::google::protobuf::uint64 value);
  void add_field5(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
	  field5() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
	  mutable_field5();

  // optional bool field59 = 59 [default = false];
  bool has_field59() const;
  void clear_field59();
  static const int kField59FieldNumber = 59;
  bool field59() const;
  void set_field59(bool value);

  // optional string field7 = 7;
  bool has_field7() const;
  void clear_field7();
  static const int kField7FieldNumber = 7;
  const ::std::string& field7() const;
  void set_field7(const ::std::string& value);
  void set_field7(const char* value);
  void set_field7(const char* value, size_t size);
  ::std::string* mutable_field7();
  ::std::string* release_field7();
  void set_allocated_field7(::std::string* field7);

  // optional int32 field16 = 16;
  bool has_field16() const;
  void clear_field16();
  static const int kField16FieldNumber = 16;
  ::google::protobuf::int32 field16() const;
  void set_field16(::google::protobuf::int32 value);

  // optional int32 field130 = 130 [default = 0];
  bool has_field130() const;
  void clear_field130();
  static const int kField130FieldNumber = 130;
  ::google::protobuf::int32 field130() const;
  void set_field130(::google::protobuf::int32 value);

  // optional bool field12 = 12 [default = true];
  bool has_field12() const;
  void clear_field12();
  static const int kField12FieldNumber = 12;
  bool field12() const;
  void set_field12(bool value);

  // optional bool field17 = 17 [default = true];
  bool has_field17() const;
  void clear_field17();
  static const int kField17FieldNumber = 17;
  bool field17() const;
  void set_field17(bool value);

  // optional bool field13 = 13 [default = true];
  bool has_field13() const;
  void clear_field13();
  static const int kField13FieldNumber = 13;
  bool field13() const;
  void set_field13(bool value);

  // optional bool field14 = 14 [default = true];
  bool has_field14() const;
  void clear_field14();
  static const int kField14FieldNumber = 14;
  bool field14() const;
  void set_field14(bool value);

  // optional int32 field104 = 104 [default = 0];
  bool has_field104() const;
  void clear_field104();
  static const int kField104FieldNumber = 104;
  ::google::protobuf::int32 field104() const;
  void set_field104(::google::protobuf::int32 value);

  // optional int32 field100 = 100 [default = 0];
  bool has_field100() const;
  void clear_field100();
  static const int kField100FieldNumber = 100;
  ::google::protobuf::int32 field100() const;
  void set_field100(::google::protobuf::int32 value);

  // optional int32 field101 = 101 [default = 0];
  bool has_field101() const;
  void clear_field101();
  static const int kField101FieldNumber = 101;
  ::google::protobuf::int32 field101() const;
  void set_field101(::google::protobuf::int32 value);

  // optional string field102 = 102;
  bool has_field102() const;
  void clear_field102();
  static const int kField102FieldNumber = 102;
  const ::std::string& field102() const;
  void set_field102(const ::std::string& value);
  void set_field102(const char* value);
  void set_field102(const char* value, size_t size);
  ::std::string* mutable_field102();
  ::std::string* release_field102();
  void set_allocated_field102(::std::string* field102);

  // optional string field103 = 103;
  bool has_field103() const;
  void clear_field103();
  static const int kField103FieldNumber = 103;
  const ::std::string& field103() const;
  void set_field103(const ::std::string& value);
  void set_field103(const char* value);
  void set_field103(const char* value, size_t size);
  ::std::string* mutable_field103();
  ::std::string* release_field103();
  void set_allocated_field103(::std::string* field103);

  // optional int32 field29 = 29 [default = 0];
  bool has_field29() const;
  void clear_field29();
  static const int kField29FieldNumber = 29;
  ::google::protobuf::int32 field29() const;
  void set_field29(::google::protobuf::int32 value);

  // optional bool field30 = 30 [default = false];
  bool has_field30() const;
  void clear_field30();
  static const int kField30FieldNumber = 30;
  bool field30() const;
  void set_field30(bool value);

  // optional int32 field60 = 60 [default = -1];
  bool has_field60() const;
  void clear_field60();
  static const int kField60FieldNumber = 60;
  ::google::protobuf::int32 field60() const;
  void set_field60(::google::protobuf::int32 value);

  // optional int32 field271 = 271 [default = -1];
  bool has_field271() const;
  void clear_field271();
  static const int kField271FieldNumber = 271;
  ::google::protobuf::int32 field271() const;
  void set_field271(::google::protobuf::int32 value);

  // optional int32 field272 = 272 [default = -1];
  bool has_field272() const;
  void clear_field272();
  static const int kField272FieldNumber = 272;
  ::google::protobuf::int32 field272() const;
  void set_field272(::google::protobuf::int32 value);

  // optional int32 field150 = 150;
  bool has_field150() const;
  void clear_field150();
  static const int kField150FieldNumber = 150;
  ::google::protobuf::int32 field150() const;
  void set_field150(::google::protobuf::int32 value);

  // optional int32 field23 = 23 [default = 0];
  bool has_field23() const;
  void clear_field23();
  static const int kField23FieldNumber = 23;
  ::google::protobuf::int32 field23() const;
  void set_field23(::google::protobuf::int32 value);

  // optional bool field24 = 24 [default = false];
  bool has_field24() const;
  void clear_field24();
  static const int kField24FieldNumber = 24;
  bool field24() const;
  void set_field24(bool value);

  // optional int32 field25 = 25 [default = 0];
  bool has_field25() const;
  void clear_field25();
  static const int kField25FieldNumber = 25;
  ::google::protobuf::int32 field25() const;
  void set_field25(::google::protobuf::int32 value);

  // optional .benchmarks.SizeMessage1SubMessage field15 = 15;
  bool has_field15() const;
  void clear_field15();
  static const int kField15FieldNumber = 15;
  const ::benchmarks::SizeMessage1SubMessage& field15() const;
  ::benchmarks::SizeMessage1SubMessage* mutable_field15();
  ::benchmarks::SizeMessage1SubMessage* release_field15();
  void set_allocated_field15(::benchmarks::SizeMessage1SubMessage* field15);

  // optional bool field78 = 78;
  bool has_field78() const;
  void clear_field78();
  static const int kField78FieldNumber = 78;
  bool field78() const;
  void set_field78(bool value);

  // optional int32 field67 = 67 [default = 0];
  bool has_field67() const;
  void clear_field67();
  static const int kField67FieldNumber = 67;
  ::google::protobuf::int32 field67() const;
  void set_field67(::google::protobuf::int32 value);

  // optional int32 field68 = 68;
  bool has_field68() const;
  void clear_field68();
  static const int kField68FieldNumber = 68;
  ::google::protobuf::int32 field68() const;
  void set_field68(::google::protobuf::int32 value);

  // optional int32 field128 = 128 [default = 0];
  bool has_field128() const;
  void clear_field128();
  static const int kField128FieldNumber = 128;
  ::google::protobuf::int32 field128() const;
  void set_field128(::google::protobuf::int32 value);

  // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
  bool has_field129() const;
  void clear_field129();
  static const int kField129FieldNumber = 129;
  const ::std::string& field129() const;
  void set_field129(const ::std::string& value);
  void set_field129(const char* value);
  void set_field129(const char* value, size_t size);
  ::std::string* mutable_field129();
  ::std::string* release_field129();
  void set_allocated_field129(::std::string* field129);

  // optional int32 field131 = 131 [default = 0];
  bool has_field131() const;
  void clear_field131();
  static const int kField131FieldNumber = 131;
  ::google::protobuf::int32 field131() const;
  void set_field131(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:benchmarks.SizeMessage1)
 private:
  inline void set_has_field1();
  inline void clear_has_field1();
  inline void set_has_field9();
  inline void clear_has_field9();
  inline void set_has_field18();
  inline void clear_has_field18();
  inline void set_has_field80();
  inline void clear_has_field80();
  inline void set_has_field81();
  inline void clear_has_field81();
  inline void set_has_field2();
  inline void clear_has_field2();
  inline void set_has_field3();
  inline void clear_has_field3();
  inline void set_has_field280();
  inline void clear_has_field280();
  inline void set_has_field6();
  inline void clear_has_field6();
  inline void set_has_field22();
  inline void clear_has_field22();
  inline void set_has_field4();
  inline void clear_has_field4();
  inline void set_has_field59();
  inline void clear_has_field59();
  inline void set_has_field7();
  inline void clear_has_field7();
  inline void set_has_field16();
  inline void clear_has_field16();
  inline void set_has_field130();
  inline void clear_has_field130();
  inline void set_has_field12();
  inline void clear_has_field12();
  inline void set_has_field17();
  inline void clear_has_field17();
  inline void set_has_field13();
  inline void clear_has_field13();
  inline void set_has_field14();
  inline void clear_has_field14();
  inline void set_has_field104();
  inline void clear_has_field104();
  inline void set_has_field100();
  inline void clear_has_field100();
  inline void set_has_field101();
  inline void clear_has_field101();
  inline void set_has_field102();
  inline void clear_has_field102();
  inline void set_has_field103();
  inline void clear_has_field103();
  inline void set_has_field29();
  inline void clear_has_field29();
  inline void set_has_field30();
  inline void clear_has_field30();
  inline void set_has_field60();
  inline void clear_has_field60();
  inline void set_has_field271();
  inline void clear_has_field271();
  inline void set_has_field272();
  inline void clear_has_field272();
  inline void set_has_field150();
  inline void clear_has_field150();
  inline void set_has_field23();
  inline void clear_has_field23();
  inline void set_has_field24();
  inline void clear_has_field24();
  inline void set_has_field25();
  inline void clear_has_field25();
  inline void set_has_field15();
  inline void clear_has_field15();
  inline void set_has_field78();
  inline void clear_has_field78();
  inline void set_has_field67();
  inline void clear_has_field67();
  inline void set_has_field68();
  inline void clear_has_field68();
  inline void set_has_field128();
  inline void clear_has_field128();
  inline void set_has_field129();
  inline void clear_has_field129();
  inline void set_has_field131();
  inline void clear_has_field131();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr field1_;
  ::google::protobuf::internal::ArenaStringPtr field9_;
  ::google::protobuf::internal::ArenaStringPtr field18_;
  ::google::protobuf::int32 field2_;
  ::google::protobuf::int32 field3_;
  ::google::protobuf::int32 field280_;
  ::google::protobuf::int32 field6_;
  ::google::protobuf::int64 field22_;
  bool field80_;
  bool field81_;
  bool field59_;
  bool field12_;
  ::google::protobuf::int32 field16_;
  ::google::protobuf::internal::ArenaStringPtr field4_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > field5_;
  ::google::protobuf::internal::ArenaStringPtr field7_;
  ::google::protobuf::int32 field130_;
  ::google::protobuf::int32 field104_;
  bool field17_;
  bool field13_;
  bool field14_;
  bool field30_;
  ::google::protobuf::int32 field100_;
  ::google::protobuf::internal::ArenaStringPtr field102_;
  ::google::protobuf::int32 field101_;
  ::google::protobuf::int32 field29_;
  ::google::protobuf::internal::ArenaStringPtr field103_;
  ::google::protobuf::int32 field60_;
  ::google::protobuf::int32 field271_;
  ::google::protobuf::int32 field272_;
  ::google::protobuf::int32 field150_;
  ::google::protobuf::int32 field23_;
  ::google::protobuf::int32 field25_;
  ::benchmarks::SizeMessage1SubMessage* field15_;
  bool field24_;
  bool field78_;
  ::google::protobuf::int32 field67_;
  ::google::protobuf::int32 field68_;
  ::google::protobuf::int32 field128_;
  static ::std::string* _default_field129_;
  ::google::protobuf::internal::ArenaStringPtr field129_;
  ::google::protobuf::int32 field131_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_google_5fsize_2eproto();
  friend void protobuf_AssignDesc_google_5fsize_2eproto();
  friend void protobuf_ShutdownFile_google_5fsize_2eproto();

  void InitAsDefaultInstance();
  static SizeMessage1* default_instance_;
};
// -------------------------------------------------------------------

class SizeMessage1SubMessage : public ::google::protobuf::Message {
 public:
  SizeMessage1SubMessage();
  virtual ~SizeMessage1SubMessage();

  SizeMessage1SubMessage(const SizeMessage1SubMessage& from);

  inline SizeMessage1SubMessage& operator=(const SizeMessage1SubMessage& from) {
	CopyFrom(from);
	return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
	return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
	return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SizeMessage1SubMessage& default_instance();

  void Swap(SizeMessage1SubMessage* other);

  // implements Message ----------------------------------------------

  inline SizeMessage1SubMessage* New() const { return New(NULL); }

  SizeMessage1SubMessage* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SizeMessage1SubMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
	return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
	return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 field1 = 1 [default = 0];
  bool has_field1() const;
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::int32 field1() const;
  void set_field1(::google::protobuf::int32 value);

  // optional int32 field2 = 2 [default = 0];
  bool has_field2() const;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::int32 field2() const;
  void set_field2(::google::protobuf::int32 value);

  // optional int32 field3 = 3 [default = 0];
  bool has_field3() const;
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::int32 field3() const;
  void set_field3(::google::protobuf::int32 value);

  // optional string field15 = 15;
  bool has_field15() const;
  void clear_field15();
  static const int kField15FieldNumber = 15;
  const ::std::string& field15() const;
  void set_field15(const ::std::string& value);
  void set_field15(const char* value);
  void set_field15(const char* value, size_t size);
  ::std::string* mutable_field15();
  ::std::string* release_field15();
  void set_allocated_field15(::std::string* field15);

  // optional bool field12 = 12 [default = true];
  bool has_field12() const;
  void clear_field12();
  static const int kField12FieldNumber = 12;
  bool field12() const;
  void set_field12(bool value);

  // optional int64 field13 = 13;
  bool has_field13() const;
  void clear_field13();
  static const int kField13FieldNumber = 13;
  ::google::protobuf::int64 field13() const;
  void set_field13(::google::protobuf::int64 value);

  // optional int64 field14 = 14;
  bool has_field14() const;
  void clear_field14();
  static const int kField14FieldNumber = 14;
  ::google::protobuf::int64 field14() const;
  void set_field14(::google::protobuf::int64 value);

  // optional int32 field16 = 16;
  bool has_field16() const;
  void clear_field16();
  static const int kField16FieldNumber = 16;
  ::google::protobuf::int32 field16() const;
  void set_field16(::google::protobuf::int32 value);

  // optional int32 field19 = 19 [default = 2];
  bool has_field19() const;
  void clear_field19();
  static const int kField19FieldNumber = 19;
  ::google::protobuf::int32 field19() const;
  void set_field19(::google::protobuf::int32 value);

  // optional bool field20 = 20 [default = true];
  bool has_field20() const;
  void clear_field20();
  static const int kField20FieldNumber = 20;
  bool field20() const;
  void set_field20(bool value);

  // optional bool field28 = 28 [default = true];
  bool has_field28() const;
  void clear_field28();
  static const int kField28FieldNumber = 28;
  bool field28() const;
  void set_field28(bool value);

  // optional fixed64 field21 = 21;
  bool has_field21() const;
  void clear_field21();
  static const int kField21FieldNumber = 21;
  ::google::protobuf::uint64 field21() const;
  void set_field21(::google::protobuf::uint64 value);

  // optional int32 field22 = 22;
  bool has_field22() const;
  void clear_field22();
  static const int kField22FieldNumber = 22;
  ::google::protobuf::int32 field22() const;
  void set_field22(::google::protobuf::int32 value);

  // optional bool field23 = 23 [default = false];
  bool has_field23() const;
  void clear_field23();
  static const int kField23FieldNumber = 23;
  bool field23() const;
  void set_field23(bool value);

  // optional bool field206 = 206 [default = false];
  bool has_field206() const;
  void clear_field206();
  static const int kField206FieldNumber = 206;
  bool field206() const;
  void set_field206(bool value);

  // optional fixed32 field203 = 203;
  bool has_field203() const;
  void clear_field203();
  static const int kField203FieldNumber = 203;
  ::google::protobuf::uint32 field203() const;
  void set_field203(::google::protobuf::uint32 value);

  // optional int32 field204 = 204;
  bool has_field204() const;
  void clear_field204();
  static const int kField204FieldNumber = 204;
  ::google::protobuf::int32 field204() const;
  void set_field204(::google::protobuf::int32 value);

  // optional string field205 = 205;
  bool has_field205() const;
  void clear_field205();
  static const int kField205FieldNumber = 205;
  const ::std::string& field205() const;
  void set_field205(const ::std::string& value);
  void set_field205(const char* value);
  void set_field205(const char* value, size_t size);
  ::std::string* mutable_field205();
  ::std::string* release_field205();
  void set_allocated_field205(::std::string* field205);

  // optional uint64 field207 = 207;
  bool has_field207() const;
  void clear_field207();
  static const int kField207FieldNumber = 207;
  ::google::protobuf::uint64 field207() const;
  void set_field207(::google::protobuf::uint64 value);

  // optional uint64 field300 = 300;
  bool has_field300() const;
  void clear_field300();
  static const int kField300FieldNumber = 300;
  ::google::protobuf::uint64 field300() const;
  void set_field300(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:benchmarks.SizeMessage1SubMessage)
 private:
  inline void set_has_field1();
  inline void clear_has_field1();
  inline void set_has_field2();
  inline void clear_has_field2();
  inline void set_has_field3();
  inline void clear_has_field3();
  inline void set_has_field15();
  inline void clear_has_field15();
  inline void set_has_field12();
  inline void clear_has_field12();
  inline void set_has_field13();
  inline void clear_has_field13();
  inline void set_has_field14();
  inline void clear_has_field14();
  inline void set_has_field16();
  inline void clear_has_field16();
  inline void set_has_field19();
  inline void clear_has_field19();
  inline void set_has_field20();
  inline void clear_has_field20();
  inline void set_has_field28();
  inline void clear_has_field28();
  inline void set_has_field21();
  inline void clear_has_field21();
  inline void set_has_field22();
  inline void clear_has_field22();
  inline void set_has_field23();
  inline void clear_has_field23();
  inline void set_has_field206();
  inline void clear_has_field206();
  inline void set_has_field203();
  inline void clear_has_field203();
  inline void set_has_field204();
  inline void clear_has_field204();
  inline void set_has_field205();
  inline void clear_has_field205();
  inline void set_has_field207();
  inline void clear_has_field207();
  inline void set_has_field300();
  inline void clear_has_field300();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 field1_;
  ::google::protobuf::int32 field2_;
  ::google::protobuf::internal::ArenaStringPtr field15_;
  ::google::protobuf::int32 field3_;
  ::google::protobuf::int32 field16_;
  ::google::protobuf::int64 field13_;
  ::google::protobuf::int64 field14_;
  ::google::protobuf::int32 field19_;
  bool field12_;
  bool field20_;
  bool field28_;
  bool field23_;
  ::google::protobuf::uint64 field21_;
  ::google::protobuf::int32 field22_;
  bool field206_;
  ::google::protobuf::uint32 field203_;
  ::google::protobuf::int32 field204_;
  ::google::protobuf::internal::ArenaStringPtr field205_;
  ::google::protobuf::uint64 field207_;
  ::google::protobuf::uint64 field300_;
  friend void  protobuf_AddDesc_google_5fsize_2eproto();
  friend void protobuf_AssignDesc_google_5fsize_2eproto();
  friend void protobuf_ShutdownFile_google_5fsize_2eproto();

  void InitAsDefaultInstance();
  static SizeMessage1SubMessage* default_instance_;
};
// -------------------------------------------------------------------

class SizeMessage2_Group1 : public ::google::protobuf::Message {
 public:
  SizeMessage2_Group1();
  virtual ~SizeMessage2_Group1();

  SizeMessage2_Group1(const SizeMessage2_Group1& from);

  inline SizeMessage2_Group1& operator=(const SizeMessage2_Group1& from) {
	CopyFrom(from);
	return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
	return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
	return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SizeMessage2_Group1& default_instance();

  void Swap(SizeMessage2_Group1* other);

  // implements Message ----------------------------------------------

  inline SizeMessage2_Group1* New() const { return New(NULL); }

  SizeMessage2_Group1* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SizeMessage2_Group1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
	return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
	return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float field11 = 11;
  bool has_field11() const;
  void clear_field11();
  static const int kField11FieldNumber = 11;
  float field11() const;
  void set_field11(float value);

  // optional float field26 = 26;
  bool has_field26() const;
  void clear_field26();
  static const int kField26FieldNumber = 26;
  float field26() const;
  void set_field26(float value);

  // optional string field12 = 12;
  bool has_field12() const;
  void clear_field12();
  static const int kField12FieldNumber = 12;
  const ::std::string& field12() const;
  void set_field12(const ::std::string& value);
  void set_field12(const char* value);
  void set_field12(const char* value, size_t size);
  ::std::string* mutable_field12();
  ::std::string* release_field12();
  void set_allocated_field12(::std::string* field12);

  // optional string field13 = 13;
  bool has_field13() const;
  void clear_field13();
  static const int kField13FieldNumber = 13;
  const ::std::string& field13() const;
  void set_field13(const ::std::string& value);
  void set_field13(const char* value);
  void set_field13(const char* value, size_t size);
  ::std::string* mutable_field13();
  ::std::string* release_field13();
  void set_allocated_field13(::std::string* field13);

  // repeated string field14 = 14;
  int field14_size() const;
  void clear_field14();
  static const int kField14FieldNumber = 14;
  const ::std::string& field14(int index) const;
  ::std::string* mutable_field14(int index);
  void set_field14(int index, const ::std::string& value);
  void set_field14(int index, const char* value);
  void set_field14(int index, const char* value, size_t size);
  ::std::string* add_field14();
  void add_field14(const ::std::string& value);
  void add_field14(const char* value);
  void add_field14(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& field14() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_field14();

  // required uint64 field15 = 15;
  bool has_field15() const;
  void clear_field15();
  static const int kField15FieldNumber = 15;
  ::google::protobuf::uint64 field15() const;
  void set_field15(::google::protobuf::uint64 value);

  // optional int32 field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  ::google::protobuf::int32 field5() const;
  void set_field5(::google::protobuf::int32 value);

  // optional string field27 = 27;
  bool has_field27() const;
  void clear_field27();
  static const int kField27FieldNumber = 27;
  const ::std::string& field27() const;
  void set_field27(const ::std::string& value);
  void set_field27(const char* value);
  void set_field27(const char* value, size_t size);
  ::std::string* mutable_field27();
  ::std::string* release_field27();
  void set_allocated_field27(::std::string* field27);

  // optional int32 field28 = 28;
  bool has_field28() const;
  void clear_field28();
  static const int kField28FieldNumber = 28;
  ::google::protobuf::int32 field28() const;
  void set_field28(::google::protobuf::int32 value);

  // optional string field29 = 29;
  bool has_field29() const;
  void clear_field29();
  static const int kField29FieldNumber = 29;
  const ::std::string& field29() const;
  void set_field29(const ::std::string& value);
  void set_field29(const char* value);
  void set_field29(const char* value, size_t size);
  ::std::string* mutable_field29();
  ::std::string* release_field29();
  void set_allocated_field29(::std::string* field29);

  // optional string field16 = 16;
  bool has_field16() const;
  void clear_field16();
  static const int kField16FieldNumber = 16;
  const ::std::string& field16() const;
  void set_field16(const ::std::string& value);
  void set_field16(const char* value);
  void set_field16(const char* value, size_t size);
  ::std::string* mutable_field16();
  ::std::string* release_field16();
  void set_allocated_field16(::std::string* field16);

  // repeated string field22 = 22;
  int field22_size() const;
  void clear_field22();
  static const int kField22FieldNumber = 22;
  const ::std::string& field22(int index) const;
  ::std::string* mutable_field22(int index);
  void set_field22(int index, const ::std::string& value);
  void set_field22(int index, const char* value);
  void set_field22(int index, const char* value, size_t size);
  ::std::string* add_field22();
  void add_field22(const ::std::string& value);
  void add_field22(const char* value);
  void add_field22(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& field22() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_field22();

  // repeated int32 field73 = 73;
  int field73_size() const;
  void clear_field73();
  static const int kField73FieldNumber = 73;
  ::google::protobuf::int32 field73(int index) const;
  void set_field73(int index, ::google::protobuf::int32 value);
  void add_field73(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
	  field73() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
	  mutable_field73();

  // optional int32 field20 = 20 [default = 0];
  bool has_field20() const;
  void clear_field20();
  static const int kField20FieldNumber = 20;
  ::google::protobuf::int32 field20() const;
  void set_field20(::google::protobuf::int32 value);

  // optional string field24 = 24;
  bool has_field24() const;
  void clear_field24();
  static const int kField24FieldNumber = 24;
  const ::std::string& field24() const;
  void set_field24(const ::std::string& value);
  void set_field24(const char* value);
  void set_field24(const char* value, size_t size);
  ::std::string* mutable_field24();
  ::std::string* release_field24();
  void set_allocated_field24(::std::string* field24);

  // optional .benchmarks.SizeMessage2GroupedMessage field31 = 31;
  bool has_field31() const;
  void clear_field31();
  static const int kField31FieldNumber = 31;
  const ::benchmarks::SizeMessage2GroupedMessage& field31() const;
  ::benchmarks::SizeMessage2GroupedMessage* mutable_field31();
  ::benchmarks::SizeMessage2GroupedMessage* release_field31();
  void set_allocated_field31(::benchmarks::SizeMessage2GroupedMessage* field31);

  // @@protoc_insertion_point(class_scope:benchmarks.SizeMessage2.Group1)
 private:
  inline void set_has_field11();
  inline void clear_has_field11();
  inline void set_has_field26();
  inline void clear_has_field26();
  inline void set_has_field12();
  inline void clear_has_field12();
  inline void set_has_field13();
  inline void clear_has_field13();
  inline void set_has_field15();
  inline void clear_has_field15();
  inline void set_has_field5();
  inline void clear_has_field5();
  inline void set_has_field27();
  inline void clear_has_field27();
  inline void set_has_field28();
  inline void clear_has_field28();
  inline void set_has_field29();
  inline void clear_has_field29();
  inline void set_has_field16();
  inline void clear_has_field16();
  inline void set_has_field20();
  inline void clear_has_field20();
  inline void set_has_field24();
  inline void clear_has_field24();
  inline void set_has_field31();
  inline void clear_has_field31();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float field11_;
  float field26_;
  ::google::protobuf::internal::ArenaStringPtr field12_;
  ::google::protobuf::internal::ArenaStringPtr field13_;
  ::google::protobuf::RepeatedPtrField< ::std::string> field14_;
  ::google::protobuf::uint64 field15_;
  ::google::protobuf::internal::ArenaStringPtr field27_;
  ::google::protobuf::int32 field5_;
  ::google::protobuf::int32 field28_;
  ::google::protobuf::internal::ArenaStringPtr field29_;
  ::google::protobuf::internal::ArenaStringPtr field16_;
  ::google::protobuf::RepeatedPtrField< ::std::string> field22_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > field73_;
  ::google::protobuf::internal::ArenaStringPtr field24_;
  ::benchmarks::SizeMessage2GroupedMessage* field31_;
  ::google::protobuf::int32 field20_;
  friend void  protobuf_AddDesc_google_5fsize_2eproto();
  friend void protobuf_AssignDesc_google_5fsize_2eproto();
  friend void protobuf_ShutdownFile_google_5fsize_2eproto();

  void InitAsDefaultInstance();
  static SizeMessage2_Group1* default_instance_;
};
// -------------------------------------------------------------------

class SizeMessage2 : public ::google::protobuf::Message {
 public:
  SizeMessage2();
  virtual ~SizeMessage2();

  SizeMessage2(const SizeMessage2& from);

  inline SizeMessage2& operator=(const SizeMessage2& from) {
	CopyFrom(from);
	return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
	return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
	return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SizeMessage2& default_instance();

  void Swap(SizeMessage2* other);

  // implements Message ----------------------------------------------

  inline SizeMessage2* New() const { return New(NULL); }

  SizeMessage2* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SizeMessage2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
	return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
	return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SizeMessage2_Group1 Group1;

  // accessors -------------------------------------------------------

  // optional string field1 = 1;
  bool has_field1() const;
  void clear_field1();
  static const int kField1FieldNumber = 1;
  const ::std::string& field1() const;
  void set_field1(const ::std::string& value);
  void set_field1(const char* value);
  void set_field1(const char* value, size_t size);
  ::std::string* mutable_field1();
  ::std::string* release_field1();
  void set_allocated_field1(::std::string* field1);

  // optional int64 field3 = 3;
  bool has_field3() const;
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::int64 field3() const;
  void set_field3(::google::protobuf::int64 value);

  // optional int64 field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  ::google::protobuf::int64 field4() const;
  void set_field4(::google::protobuf::int64 value);

  // optional int64 field30 = 30;
  bool has_field30() const;
  void clear_field30();
  static const int kField30FieldNumber = 30;
  ::google::protobuf::int64 field30() const;
  void set_field30(::google::protobuf::int64 value);

  // optional bool field75 = 75 [default = false];
  bool has_field75() const;
  void clear_field75();
  static const int kField75FieldNumber = 75;
  bool field75() const;
  void set_field75(bool value);

  // optional string field6 = 6;
  bool has_field6() const;
  void clear_field6();
  static const int kField6FieldNumber = 6;
  const ::std::string& field6() const;
  void set_field6(const ::std::string& value);
  void set_field6(const char* value);
  void set_field6(const char* value, size_t size);
  ::std::string* mutable_field6();
  ::std::string* release_field6();
  void set_allocated_field6(::std::string* field6);

  // optional bytes field2 = 2;
  bool has_field2() const;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  const ::std::string& field2() const;
  void set_field2(const ::std::string& value);
  void set_field2(const char* value);
  void set_field2(const void* value, size_t size);
  ::std::string* mutable_field2();
  ::std::string* release_field2();
  void set_allocated_field2(::std::string* field2);

  // optional int32 field21 = 21 [default = 0];
  bool has_field21() const;
  void clear_field21();
  static const int kField21FieldNumber = 21;
  ::google::protobuf::int32 field21() const;
  void set_field21(::google::protobuf::int32 value);

  // optional int32 field71 = 71;
  bool has_field71() const;
  void clear_field71();
  static const int kField71FieldNumber = 71;
  ::google::protobuf::int32 field71() const;
  void set_field71(::google::protobuf::int32 value);

  // optional float field25 = 25;
  bool has_field25() const;
  void clear_field25();
  static const int kField25FieldNumber = 25;
  float field25() const;
  void set_field25(float value);

  // optional int32 field109 = 109 [default = 0];
  bool has_field109() const;
  void clear_field109();
  static const int kField109FieldNumber = 109;
  ::google::protobuf::int32 field109() const;
  void set_field109(::google::protobuf::int32 value);

  // optional int32 field210 = 210 [default = 0];
  bool has_field210() const;
  void clear_field210();
  static const int kField210FieldNumber = 210;
  ::google::protobuf::int32 field210() const;
  void set_field210(::google::protobuf::int32 value);

  // optional int32 field211 = 211 [default = 0];
  bool has_field211() const;
  void clear_field211();
  static const int kField211FieldNumber = 211;
  ::google::protobuf::int32 field211() const;
  void set_field211(::google::protobuf::int32 value);

  // optional int32 field212 = 212 [default = 0];
  bool has_field212() const;
  void clear_field212();
  static const int kField212FieldNumber = 212;
  ::google::protobuf::int32 field212() const;
  void set_field212(::google::protobuf::int32 value);

  // optional int32 field213 = 213 [default = 0];
  bool has_field213() const;
  void clear_field213();
  static const int kField213FieldNumber = 213;
  ::google::protobuf::int32 field213() const;
  void set_field213(::google::protobuf::int32 value);

  // optional int32 field216 = 216 [default = 0];
  bool has_field216() const;
  void clear_field216();
  static const int kField216FieldNumber = 216;
  ::google::protobuf::int32 field216() const;
  void set_field216(::google::protobuf::int32 value);

  // optional int32 field217 = 217 [default = 0];
  bool has_field217() const;
  void clear_field217();
  static const int kField217FieldNumber = 217;
  ::google::protobuf::int32 field217() const;
  void set_field217(::google::protobuf::int32 value);

  // optional int32 field218 = 218 [default = 0];
  bool has_field218() const;
  void clear_field218();
  static const int kField218FieldNumber = 218;
  ::google::protobuf::int32 field218() const;
  void set_field218(::google::protobuf::int32 value);

  // optional int32 field220 = 220 [default = 0];
  bool has_field220() const;
  void clear_field220();
  static const int kField220FieldNumber = 220;
  ::google::protobuf::int32 field220() const;
  void set_field220(::google::protobuf::int32 value);

  // optional int32 field221 = 221 [default = 0];
  bool has_field221() const;
  void clear_field221();
  static const int kField221FieldNumber = 221;
  ::google::protobuf::int32 field221() const;
  void set_field221(::google::protobuf::int32 value);

  // optional float field222 = 222 [default = 0];
  bool has_field222() const;
  void clear_field222();
  static const int kField222FieldNumber = 222;
  float field222() const;
  void set_field222(float value);

  // optional int32 field63 = 63;
  bool has_field63() const;
  void clear_field63();
  static const int kField63FieldNumber = 63;
  ::google::protobuf::int32 field63() const;
  void set_field63(::google::protobuf::int32 value);

  // repeated group Group1 = 10 {
  int group1_size() const;
  void clear_group1();
  static const int kGroup1FieldNumber = 10;
  const ::benchmarks::SizeMessage2_Group1& group1(int index) const;
  ::benchmarks::SizeMessage2_Group1* mutable_group1(int index);
  ::benchmarks::SizeMessage2_Group1* add_group1();
  const ::google::protobuf::RepeatedPtrField< ::benchmarks::SizeMessage2_Group1 >&
	  group1() const;
  ::google::protobuf::RepeatedPtrField< ::benchmarks::SizeMessage2_Group1 >*
	  mutable_group1();

  // repeated string field128 = 128;
  int field128_size() const;
  void clear_field128();
  static const int kField128FieldNumber = 128;
  const ::std::string& field128(int index) const;
  ::std::string* mutable_field128(int index);
  void set_field128(int index, const ::std::string& value);
  void set_field128(int index, const char* value);
  void set_field128(int index, const char* value, size_t size);
  ::std::string* add_field128();
  void add_field128(const ::std::string& value);
  void add_field128(const char* value);
  void add_field128(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& field128() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_field128();

  // optional int64 field131 = 131;
  bool has_field131() const;
  void clear_field131();
  static const int kField131FieldNumber = 131;
  ::google::protobuf::int64 field131() const;
  void set_field131(::google::protobuf::int64 value);

  // repeated string field127 = 127;
  int field127_size() const;
  void clear_field127();
  static const int kField127FieldNumber = 127;
  const ::std::string& field127(int index) const;
  ::std::string* mutable_field127(int index);
  void set_field127(int index, const ::std::string& value);
  void set_field127(int index, const char* value);
  void set_field127(int index, const char* value, size_t size);
  ::std::string* add_field127();
  void add_field127(const ::std::string& value);
  void add_field127(const char* value);
  void add_field127(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& field127() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_field127();

  // optional int32 field129 = 129;
  bool has_field129() const;
  void clear_field129();
  static const int kField129FieldNumber = 129;
  ::google::protobuf::int32 field129() const;
  void set_field129(::google::protobuf::int32 value);

  // repeated int64 field130 = 130;
  int field130_size() const;
  void clear_field130();
  static const int kField130FieldNumber = 130;
  ::google::protobuf::int64 field130(int index) const;
  void set_field130(int index, ::google::protobuf::int64 value);
  void add_field130(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
	  field130() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
	  mutable_field130();

  // optional bool field205 = 205 [default = false];
  bool has_field205() const;
  void clear_field205();
  static const int kField205FieldNumber = 205;
  bool field205() const;
  void set_field205(bool value);

  // optional bool field206 = 206 [default = false];
  bool has_field206() const;
  void clear_field206();
  static const int kField206FieldNumber = 206;
  bool field206() const;
  void set_field206(bool value);

  // @@protoc_insertion_point(class_scope:benchmarks.SizeMessage2)
 private:
  inline void set_has_field1();
  inline void clear_has_field1();
  inline void set_has_field3();
  inline void clear_has_field3();
  inline void set_has_field4();
  inline void clear_has_field4();
  inline void set_has_field30();
  inline void clear_has_field30();
  inline void set_has_field75();
  inline void clear_has_field75();
  inline void set_has_field6();
  inline void clear_has_field6();
  inline void set_has_field2();
  inline void clear_has_field2();
  inline void set_has_field21();
  inline void clear_has_field21();
  inline void set_has_field71();
  inline void clear_has_field71();
  inline void set_has_field25();
  inline void clear_has_field25();
  inline void set_has_field109();
  inline void clear_has_field109();
  inline void set_has_field210();
  inline void clear_has_field210();
  inline void set_has_field211();
  inline void clear_has_field211();
  inline void set_has_field212();
  inline void clear_has_field212();
  inline void set_has_field213();
  inline void clear_has_field213();
  inline void set_has_field216();
  inline void clear_has_field216();
  inline void set_has_field217();
  inline void clear_has_field217();
  inline void set_has_field218();
  inline void clear_has_field218();
  inline void set_has_field220();
  inline void clear_has_field220();
  inline void set_has_field221();
  inline void clear_has_field221();
  inline void set_has_field222();
  inline void clear_has_field222();
  inline void set_has_field63();
  inline void clear_has_field63();
  inline void set_has_field131();
  inline void clear_has_field131();
  inline void set_has_field129();
  inline void clear_has_field129();
  inline void set_has_field205();
  inline void clear_has_field205();
  inline void set_has_field206();
  inline void clear_has_field206();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr field1_;
  ::google::protobuf::int64 field3_;
  ::google::protobuf::int64 field4_;
  ::google::protobuf::int64 field30_;
  ::google::protobuf::internal::ArenaStringPtr field6_;
  ::google::protobuf::internal::ArenaStringPtr field2_;
  ::google::protobuf::int32 field21_;
  ::google::protobuf::int32 field71_;
  float field25_;
  ::google::protobuf::int32 field109_;
  ::google::protobuf::int32 field210_;
  ::google::protobuf::int32 field211_;
  ::google::protobuf::int32 field212_;
  ::google::protobuf::int32 field213_;
  ::google::protobuf::int32 field216_;
  ::google::protobuf::int32 field217_;
  ::google::protobuf::int32 field218_;
  ::google::protobuf::int32 field220_;
  ::google::protobuf::int32 field221_;
  float field222_;
  bool field75_;
  bool field205_;
  bool field206_;
  ::google::protobuf::int32 field63_;
  ::google::protobuf::RepeatedPtrField< ::benchmarks::SizeMessage2_Group1 > group1_;
  ::google::protobuf::RepeatedPtrField< ::std::string> field128_;
  ::google::protobuf::int64 field131_;
  ::google::protobuf::RepeatedPtrField< ::std::string> field127_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > field130_;
  ::google::protobuf::int32 field129_;
  friend void  protobuf_AddDesc_google_5fsize_2eproto();
  friend void protobuf_AssignDesc_google_5fsize_2eproto();
  friend void protobuf_ShutdownFile_google_5fsize_2eproto();

  void InitAsDefaultInstance();
  static SizeMessage2* default_instance_;
};
// -------------------------------------------------------------------

class SizeMessage2GroupedMessage : public ::google::protobuf::Message {
 public:
  SizeMessage2GroupedMessage();
  virtual ~SizeMessage2GroupedMessage();

  SizeMessage2GroupedMessage(const SizeMessage2GroupedMessage& from);

  inline SizeMessage2GroupedMessage& operator=(const SizeMessage2GroupedMessage& from) {
	CopyFrom(from);
	return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
	return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
	return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SizeMessage2GroupedMessage& default_instance();

  void Swap(SizeMessage2GroupedMessage* other);

  // implements Message ----------------------------------------------

  inline SizeMessage2GroupedMessage* New() const { return New(NULL); }

  SizeMessage2GroupedMessage* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SizeMessage2GroupedMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
	return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
	return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float field1 = 1;
  bool has_field1() const;
  void clear_field1();
  static const int kField1FieldNumber = 1;
  float field1() const;
  void set_field1(float value);

  // optional float field2 = 2;
  bool has_field2() const;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  float field2() const;
  void set_field2(float value);

  // optional float field3 = 3 [default = 0];
  bool has_field3() const;
  void clear_field3();
  static const int kField3FieldNumber = 3;
  float field3() const;
  void set_field3(float value);

  // optional bool field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  bool field4() const;
  void set_field4(bool value);

  // optional bool field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  bool field5() const;
  void set_field5(bool value);

  // optional bool field6 = 6 [default = true];
  bool has_field6() const;
  void clear_field6();
  static const int kField6FieldNumber = 6;
  bool field6() const;
  void set_field6(bool value);

  // optional bool field7 = 7 [default = false];
  bool has_field7() const;
  void clear_field7();
  static const int kField7FieldNumber = 7;
  bool field7() const;
  void set_field7(bool value);

  // optional float field8 = 8;
  bool has_field8() const;
  void clear_field8();
  static const int kField8FieldNumber = 8;
  float field8() const;
  void set_field8(float value);

  // optional bool field9 = 9;
  bool has_field9() const;
  void clear_field9();
  static const int kField9FieldNumber = 9;
  bool field9() const;
  void set_field9(bool value);

  // optional float field10 = 10;
  bool has_field10() const;
  void clear_field10();
  static const int kField10FieldNumber = 10;
  float field10() const;
  void set_field10(float value);

  // optional int64 field11 = 11;
  bool has_field11() const;
  void clear_field11();
  static const int kField11FieldNumber = 11;
  ::google::protobuf::int64 field11() const;
  void set_field11(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:benchmarks.SizeMessage2GroupedMessage)
 private:
  inline void set_has_field1();
  inline void clear_has_field1();
  inline void set_has_field2();
  inline void clear_has_field2();
  inline void set_has_field3();
  inline void clear_has_field3();
  inline void set_has_field4();
  inline void clear_has_field4();
  inline void set_has_field5();
  inline void clear_has_field5();
  inline void set_has_field6();
  inline void clear_has_field6();
  inline void set_has_field7();
  inline void clear_has_field7();
  inline void set_has_field8();
  inline void clear_has_field8();
  inline void set_has_field9();
  inline void clear_has_field9();
  inline void set_has_field10();
  inline void clear_has_field10();
  inline void set_has_field11();
  inline void clear_has_field11();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float field1_;
  float field2_;
  float field3_;
  bool field4_;
  bool field5_;
  bool field6_;
  bool field7_;
  float field8_;
  bool field9_;
  ::google::protobuf::int64 field11_;
  float field10_;
  friend void  protobuf_AddDesc_google_5fsize_2eproto();
  friend void protobuf_AssignDesc_google_5fsize_2eproto();
  friend void protobuf_ShutdownFile_google_5fsize_2eproto();

  void InitAsDefaultInstance();
  static SizeMessage2GroupedMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SizeMessage1

// required string field1 = 1;
inline bool SizeMessage1::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SizeMessage1::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SizeMessage1::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SizeMessage1::clear_field1() {
  field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field1();
}
inline const ::std::string& SizeMessage1::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field1)
  return field1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_field1(const ::std::string& value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field1)
}
inline void SizeMessage1::set_field1(const char* value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field1)
}
inline void SizeMessage1::set_field1(const char* value, size_t size) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field1)
}
inline ::std::string* SizeMessage1::mutable_field1() {
  set_has_field1();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field1)
  return field1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1::release_field1() {
  clear_has_field1();
  return field1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_allocated_field1(::std::string* field1) {
  if (field1 != NULL) {
	set_has_field1();
  } else {
	clear_has_field1();
  }
  field1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field1);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field1)
}

// optional string field9 = 9;
inline bool SizeMessage1::has_field9() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SizeMessage1::set_has_field9() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SizeMessage1::clear_has_field9() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SizeMessage1::clear_field9() {
  field9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field9();
}
inline const ::std::string& SizeMessage1::field9() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field9)
  return field9_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_field9(const ::std::string& value) {
  set_has_field9();
  field9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field9)
}
inline void SizeMessage1::set_field9(const char* value) {
  set_has_field9();
  field9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field9)
}
inline void SizeMessage1::set_field9(const char* value, size_t size) {
  set_has_field9();
  field9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field9)
}
inline ::std::string* SizeMessage1::mutable_field9() {
  set_has_field9();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field9)
  return field9_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1::release_field9() {
  clear_has_field9();
  return field9_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_allocated_field9(::std::string* field9) {
  if (field9 != NULL) {
	set_has_field9();
  } else {
	clear_has_field9();
  }
  field9_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field9);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field9)
}

// optional string field18 = 18;
inline bool SizeMessage1::has_field18() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SizeMessage1::set_has_field18() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SizeMessage1::clear_has_field18() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SizeMessage1::clear_field18() {
  field18_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field18();
}
inline const ::std::string& SizeMessage1::field18() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field18)
  return field18_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_field18(const ::std::string& value) {
  set_has_field18();
  field18_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field18)
}
inline void SizeMessage1::set_field18(const char* value) {
  set_has_field18();
  field18_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field18)
}
inline void SizeMessage1::set_field18(const char* value, size_t size) {
  set_has_field18();
  field18_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field18)
}
inline ::std::string* SizeMessage1::mutable_field18() {
  set_has_field18();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field18)
  return field18_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1::release_field18() {
  clear_has_field18();
  return field18_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_allocated_field18(::std::string* field18) {
  if (field18 != NULL) {
	set_has_field18();
  } else {
	clear_has_field18();
  }
  field18_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field18);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field18)
}

// optional bool field80 = 80 [default = false];
inline bool SizeMessage1::has_field80() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SizeMessage1::set_has_field80() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SizeMessage1::clear_has_field80() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SizeMessage1::clear_field80() {
  field80_ = false;
  clear_has_field80();
}
inline bool SizeMessage1::field80() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field80)
  return field80_;
}
inline void SizeMessage1::set_field80(bool value) {
  set_has_field80();
  field80_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field80)
}

// optional bool field81 = 81 [default = true];
inline bool SizeMessage1::has_field81() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SizeMessage1::set_has_field81() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SizeMessage1::clear_has_field81() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SizeMessage1::clear_field81() {
  field81_ = true;
  clear_has_field81();
}
inline bool SizeMessage1::field81() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field81)
  return field81_;
}
inline void SizeMessage1::set_field81(bool value) {
  set_has_field81();
  field81_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field81)
}

// required int32 field2 = 2;
inline bool SizeMessage1::has_field2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SizeMessage1::set_has_field2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SizeMessage1::clear_has_field2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SizeMessage1::clear_field2() {
  field2_ = 0;
  clear_has_field2();
}
inline ::google::protobuf::int32 SizeMessage1::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field2)
  return field2_;
}
inline void SizeMessage1::set_field2(::google::protobuf::int32 value) {
  set_has_field2();
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field2)
}

// required int32 field3 = 3;
inline bool SizeMessage1::has_field3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SizeMessage1::set_has_field3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SizeMessage1::clear_has_field3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SizeMessage1::clear_field3() {
  field3_ = 0;
  clear_has_field3();
}
inline ::google::protobuf::int32 SizeMessage1::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field3)
  return field3_;
}
inline void SizeMessage1::set_field3(::google::protobuf::int32 value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field3)
}

// optional int32 field280 = 280;
inline bool SizeMessage1::has_field280() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SizeMessage1::set_has_field280() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SizeMessage1::clear_has_field280() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SizeMessage1::clear_field280() {
  field280_ = 0;
  clear_has_field280();
}
inline ::google::protobuf::int32 SizeMessage1::field280() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field280)
  return field280_;
}
inline void SizeMessage1::set_field280(::google::protobuf::int32 value) {
  set_has_field280();
  field280_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field280)
}

// optional int32 field6 = 6 [default = 0];
inline bool SizeMessage1::has_field6() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SizeMessage1::set_has_field6() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SizeMessage1::clear_has_field6() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SizeMessage1::clear_field6() {
  field6_ = 0;
  clear_has_field6();
}
inline ::google::protobuf::int32 SizeMessage1::field6() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field6)
  return field6_;
}
inline void SizeMessage1::set_field6(::google::protobuf::int32 value) {
  set_has_field6();
  field6_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field6)
}

// optional int64 field22 = 22;
inline bool SizeMessage1::has_field22() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SizeMessage1::set_has_field22() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SizeMessage1::clear_has_field22() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SizeMessage1::clear_field22() {
  field22_ = GOOGLE_LONGLONG(0);
  clear_has_field22();
}
inline ::google::protobuf::int64 SizeMessage1::field22() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field22)
  return field22_;
}
inline void SizeMessage1::set_field22(::google::protobuf::int64 value) {
  set_has_field22();
  field22_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field22)
}

// optional string field4 = 4;
inline bool SizeMessage1::has_field4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SizeMessage1::set_has_field4() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SizeMessage1::clear_has_field4() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SizeMessage1::clear_field4() {
  field4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field4();
}
inline const ::std::string& SizeMessage1::field4() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field4)
  return field4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_field4(const ::std::string& value) {
  set_has_field4();
  field4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field4)
}
inline void SizeMessage1::set_field4(const char* value) {
  set_has_field4();
  field4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field4)
}
inline void SizeMessage1::set_field4(const char* value, size_t size) {
  set_has_field4();
  field4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field4)
}
inline ::std::string* SizeMessage1::mutable_field4() {
  set_has_field4();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field4)
  return field4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1::release_field4() {
  clear_has_field4();
  return field4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_allocated_field4(::std::string* field4) {
  if (field4 != NULL) {
	set_has_field4();
  } else {
	clear_has_field4();
  }
  field4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field4);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field4)
}

// repeated fixed64 field5 = 5;
inline int SizeMessage1::field5_size() const {
  return field5_.size();
}
inline void SizeMessage1::clear_field5() {
  field5_.Clear();
}
inline ::google::protobuf::uint64 SizeMessage1::field5(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field5)
  return field5_.Get(index);
}
inline void SizeMessage1::set_field5(int index, ::google::protobuf::uint64 value) {
  field5_.Set(index, value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field5)
}
inline void SizeMessage1::add_field5(::google::protobuf::uint64 value) {
  field5_.Add(value);
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage1.field5)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SizeMessage1::field5() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage1.field5)
  return field5_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SizeMessage1::mutable_field5() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage1.field5)
  return &field5_;
}

// optional bool field59 = 59 [default = false];
inline bool SizeMessage1::has_field59() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SizeMessage1::set_has_field59() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SizeMessage1::clear_has_field59() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SizeMessage1::clear_field59() {
  field59_ = false;
  clear_has_field59();
}
inline bool SizeMessage1::field59() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field59)
  return field59_;
}
inline void SizeMessage1::set_field59(bool value) {
  set_has_field59();
  field59_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field59)
}

// optional string field7 = 7;
inline bool SizeMessage1::has_field7() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SizeMessage1::set_has_field7() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SizeMessage1::clear_has_field7() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SizeMessage1::clear_field7() {
  field7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field7();
}
inline const ::std::string& SizeMessage1::field7() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field7)
  return field7_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_field7(const ::std::string& value) {
  set_has_field7();
  field7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field7)
}
inline void SizeMessage1::set_field7(const char* value) {
  set_has_field7();
  field7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field7)
}
inline void SizeMessage1::set_field7(const char* value, size_t size) {
  set_has_field7();
  field7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field7)
}
inline ::std::string* SizeMessage1::mutable_field7() {
  set_has_field7();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field7)
  return field7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1::release_field7() {
  clear_has_field7();
  return field7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_allocated_field7(::std::string* field7) {
  if (field7 != NULL) {
	set_has_field7();
  } else {
	clear_has_field7();
  }
  field7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field7);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field7)
}

// optional int32 field16 = 16;
inline bool SizeMessage1::has_field16() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SizeMessage1::set_has_field16() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SizeMessage1::clear_has_field16() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SizeMessage1::clear_field16() {
  field16_ = 0;
  clear_has_field16();
}
inline ::google::protobuf::int32 SizeMessage1::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field16)
  return field16_;
}
inline void SizeMessage1::set_field16(::google::protobuf::int32 value) {
  set_has_field16();
  field16_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field16)
}

// optional int32 field130 = 130 [default = 0];
inline bool SizeMessage1::has_field130() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SizeMessage1::set_has_field130() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SizeMessage1::clear_has_field130() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SizeMessage1::clear_field130() {
  field130_ = 0;
  clear_has_field130();
}
inline ::google::protobuf::int32 SizeMessage1::field130() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field130)
  return field130_;
}
inline void SizeMessage1::set_field130(::google::protobuf::int32 value) {
  set_has_field130();
  field130_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field130)
}

// optional bool field12 = 12 [default = true];
inline bool SizeMessage1::has_field12() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SizeMessage1::set_has_field12() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SizeMessage1::clear_has_field12() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SizeMessage1::clear_field12() {
  field12_ = true;
  clear_has_field12();
}
inline bool SizeMessage1::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field12)
  return field12_;
}
inline void SizeMessage1::set_field12(bool value) {
  set_has_field12();
  field12_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field12)
}

// optional bool field17 = 17 [default = true];
inline bool SizeMessage1::has_field17() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SizeMessage1::set_has_field17() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SizeMessage1::clear_has_field17() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SizeMessage1::clear_field17() {
  field17_ = true;
  clear_has_field17();
}
inline bool SizeMessage1::field17() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field17)
  return field17_;
}
inline void SizeMessage1::set_field17(bool value) {
  set_has_field17();
  field17_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field17)
}

// optional bool field13 = 13 [default = true];
inline bool SizeMessage1::has_field13() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SizeMessage1::set_has_field13() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SizeMessage1::clear_has_field13() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SizeMessage1::clear_field13() {
  field13_ = true;
  clear_has_field13();
}
inline bool SizeMessage1::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field13)
  return field13_;
}
inline void SizeMessage1::set_field13(bool value) {
  set_has_field13();
  field13_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field13)
}

// optional bool field14 = 14 [default = true];
inline bool SizeMessage1::has_field14() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SizeMessage1::set_has_field14() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SizeMessage1::clear_has_field14() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SizeMessage1::clear_field14() {
  field14_ = true;
  clear_has_field14();
}
inline bool SizeMessage1::field14() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field14)
  return field14_;
}
inline void SizeMessage1::set_field14(bool value) {
  set_has_field14();
  field14_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field14)
}

// optional int32 field104 = 104 [default = 0];
inline bool SizeMessage1::has_field104() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SizeMessage1::set_has_field104() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SizeMessage1::clear_has_field104() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SizeMessage1::clear_field104() {
  field104_ = 0;
  clear_has_field104();
}
inline ::google::protobuf::int32 SizeMessage1::field104() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field104)
  return field104_;
}
inline void SizeMessage1::set_field104(::google::protobuf::int32 value) {
  set_has_field104();
  field104_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field104)
}

// optional int32 field100 = 100 [default = 0];
inline bool SizeMessage1::has_field100() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SizeMessage1::set_has_field100() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SizeMessage1::clear_has_field100() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SizeMessage1::clear_field100() {
  field100_ = 0;
  clear_has_field100();
}
inline ::google::protobuf::int32 SizeMessage1::field100() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field100)
  return field100_;
}
inline void SizeMessage1::set_field100(::google::protobuf::int32 value) {
  set_has_field100();
  field100_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field100)
}

// optional int32 field101 = 101 [default = 0];
inline bool SizeMessage1::has_field101() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SizeMessage1::set_has_field101() {
  _has_bits_[0] |= 0x00400000u;
}
inline void SizeMessage1::clear_has_field101() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void SizeMessage1::clear_field101() {
  field101_ = 0;
  clear_has_field101();
}
inline ::google::protobuf::int32 SizeMessage1::field101() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field101)
  return field101_;
}
inline void SizeMessage1::set_field101(::google::protobuf::int32 value) {
  set_has_field101();
  field101_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field101)
}

// optional string field102 = 102;
inline bool SizeMessage1::has_field102() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SizeMessage1::set_has_field102() {
  _has_bits_[0] |= 0x00800000u;
}
inline void SizeMessage1::clear_has_field102() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void SizeMessage1::clear_field102() {
  field102_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field102();
}
inline const ::std::string& SizeMessage1::field102() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field102)
  return field102_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_field102(const ::std::string& value) {
  set_has_field102();
  field102_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field102)
}
inline void SizeMessage1::set_field102(const char* value) {
  set_has_field102();
  field102_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field102)
}
inline void SizeMessage1::set_field102(const char* value, size_t size) {
  set_has_field102();
  field102_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field102)
}
inline ::std::string* SizeMessage1::mutable_field102() {
  set_has_field102();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field102)
  return field102_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1::release_field102() {
  clear_has_field102();
  return field102_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_allocated_field102(::std::string* field102) {
  if (field102 != NULL) {
	set_has_field102();
  } else {
	clear_has_field102();
  }
  field102_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field102);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field102)
}

// optional string field103 = 103;
inline bool SizeMessage1::has_field103() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SizeMessage1::set_has_field103() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SizeMessage1::clear_has_field103() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SizeMessage1::clear_field103() {
  field103_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field103();
}
inline const ::std::string& SizeMessage1::field103() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field103)
  return field103_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_field103(const ::std::string& value) {
  set_has_field103();
  field103_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field103)
}
inline void SizeMessage1::set_field103(const char* value) {
  set_has_field103();
  field103_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field103)
}
inline void SizeMessage1::set_field103(const char* value, size_t size) {
  set_has_field103();
  field103_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field103)
}
inline ::std::string* SizeMessage1::mutable_field103() {
  set_has_field103();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field103)
  return field103_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1::release_field103() {
  clear_has_field103();
  return field103_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1::set_allocated_field103(::std::string* field103) {
  if (field103 != NULL) {
	set_has_field103();
  } else {
	clear_has_field103();
  }
  field103_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field103);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field103)
}

// optional int32 field29 = 29 [default = 0];
inline bool SizeMessage1::has_field29() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SizeMessage1::set_has_field29() {
  _has_bits_[0] |= 0x02000000u;
}
inline void SizeMessage1::clear_has_field29() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void SizeMessage1::clear_field29() {
  field29_ = 0;
  clear_has_field29();
}
inline ::google::protobuf::int32 SizeMessage1::field29() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field29)
  return field29_;
}
inline void SizeMessage1::set_field29(::google::protobuf::int32 value) {
  set_has_field29();
  field29_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field29)
}

// optional bool field30 = 30 [default = false];
inline bool SizeMessage1::has_field30() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SizeMessage1::set_has_field30() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SizeMessage1::clear_has_field30() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SizeMessage1::clear_field30() {
  field30_ = false;
  clear_has_field30();
}
inline bool SizeMessage1::field30() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field30)
  return field30_;
}
inline void SizeMessage1::set_field30(bool value) {
  set_has_field30();
  field30_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field30)
}

// optional int32 field60 = 60 [default = -1];
inline bool SizeMessage1::has_field60() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SizeMessage1::set_has_field60() {
  _has_bits_[0] |= 0x08000000u;
}
inline void SizeMessage1::clear_has_field60() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void SizeMessage1::clear_field60() {
  field60_ = -1;
  clear_has_field60();
}
inline ::google::protobuf::int32 SizeMessage1::field60() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field60)
  return field60_;
}
inline void SizeMessage1::set_field60(::google::protobuf::int32 value) {
  set_has_field60();
  field60_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field60)
}

// optional int32 field271 = 271 [default = -1];
inline bool SizeMessage1::has_field271() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SizeMessage1::set_has_field271() {
  _has_bits_[0] |= 0x10000000u;
}
inline void SizeMessage1::clear_has_field271() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void SizeMessage1::clear_field271() {
  field271_ = -1;
  clear_has_field271();
}
inline ::google::protobuf::int32 SizeMessage1::field271() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field271)
  return field271_;
}
inline void SizeMessage1::set_field271(::google::protobuf::int32 value) {
  set_has_field271();
  field271_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field271)
}

// optional int32 field272 = 272 [default = -1];
inline bool SizeMessage1::has_field272() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SizeMessage1::set_has_field272() {
  _has_bits_[0] |= 0x20000000u;
}
inline void SizeMessage1::clear_has_field272() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void SizeMessage1::clear_field272() {
  field272_ = -1;
  clear_has_field272();
}
inline ::google::protobuf::int32 SizeMessage1::field272() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field272)
  return field272_;
}
inline void SizeMessage1::set_field272(::google::protobuf::int32 value) {
  set_has_field272();
  field272_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field272)
}

// optional int32 field150 = 150;
inline bool SizeMessage1::has_field150() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SizeMessage1::set_has_field150() {
  _has_bits_[0] |= 0x40000000u;
}
inline void SizeMessage1::clear_has_field150() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void SizeMessage1::clear_field150() {
  field150_ = 0;
  clear_has_field150();
}
inline ::google::protobuf::int32 SizeMessage1::field150() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field150)
  return field150_;
}
inline void SizeMessage1::set_field150(::google::protobuf::int32 value) {
  set_has_field150();
  field150_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field150)
}

// optional int32 field23 = 23 [default = 0];
inline bool SizeMessage1::has_field23() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SizeMessage1::set_has_field23() {
  _has_bits_[0] |= 0x80000000u;
}
inline void SizeMessage1::clear_has_field23() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void SizeMessage1::clear_field23() {
  field23_ = 0;
  clear_has_field23();
}
inline ::google::protobuf::int32 SizeMessage1::field23() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field23)
  return field23_;
}
inline void SizeMessage1::set_field23(::google::protobuf::int32 value) {
  set_has_field23();
  field23_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field23)
}

// optional bool field24 = 24 [default = false];
inline bool SizeMessage1::has_field24() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void SizeMessage1::set_has_field24() {
  _has_bits_[1] |= 0x00000001u;
}
inline void SizeMessage1::clear_has_field24() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void SizeMessage1::clear_field24() {
  field24_ = false;
  clear_has_field24();
}
inline bool SizeMessage1::field24() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field24)
  return field24_;
}
inline void SizeMessage1::set_field24(bool value) {
  set_has_field24();
  field24_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field24)
}

// optional int32 field25 = 25 [default = 0];
inline bool SizeMessage1::has_field25() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void SizeMessage1::set_has_field25() {
  _has_bits_[1] |= 0x00000002u;
}
inline void SizeMessage1::clear_has_field25() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void SizeMessage1::clear_field25() {
  field25_ = 0;
  clear_has_field25();
}
inline ::google::protobuf::int32 SizeMessage1::field25() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field25)
  return field25_;
}
inline void SizeMessage1::set_field25(::google::protobuf::int32 value) {
  set_has_field25();
  field25_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field25)
}

// optional .benchmarks.SizeMessage1SubMessage field15 = 15;
inline bool SizeMessage1::has_field15() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void SizeMessage1::set_has_field15() {
  _has_bits_[1] |= 0x00000004u;
}
inline void SizeMessage1::clear_has_field15() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void SizeMessage1::clear_field15() {
  if (field15_ != NULL) field15_->::benchmarks::SizeMessage1SubMessage::Clear();
  clear_has_field15();
}
inline const ::benchmarks::SizeMessage1SubMessage& SizeMessage1::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field15)
  return field15_ != NULL ? *field15_ : *default_instance_->field15_;
}
inline ::benchmarks::SizeMessage1SubMessage* SizeMessage1::mutable_field15() {
  set_has_field15();
  if (field15_ == NULL) {
	field15_ = new ::benchmarks::SizeMessage1SubMessage;
  }
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field15)
  return field15_;
}
inline ::benchmarks::SizeMessage1SubMessage* SizeMessage1::release_field15() {
  clear_has_field15();
  ::benchmarks::SizeMessage1SubMessage* temp = field15_;
  field15_ = NULL;
  return temp;
}
inline void SizeMessage1::set_allocated_field15(::benchmarks::SizeMessage1SubMessage* field15) {
  delete field15_;
  field15_ = field15;
  if (field15) {
	set_has_field15();
  } else {
	clear_has_field15();
  }
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field15)
}

// optional bool field78 = 78;
inline bool SizeMessage1::has_field78() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void SizeMessage1::set_has_field78() {
  _has_bits_[1] |= 0x00000008u;
}
inline void SizeMessage1::clear_has_field78() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void SizeMessage1::clear_field78() {
  field78_ = false;
  clear_has_field78();
}
inline bool SizeMessage1::field78() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field78)
  return field78_;
}
inline void SizeMessage1::set_field78(bool value) {
  set_has_field78();
  field78_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field78)
}

// optional int32 field67 = 67 [default = 0];
inline bool SizeMessage1::has_field67() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void SizeMessage1::set_has_field67() {
  _has_bits_[1] |= 0x00000010u;
}
inline void SizeMessage1::clear_has_field67() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void SizeMessage1::clear_field67() {
  field67_ = 0;
  clear_has_field67();
}
inline ::google::protobuf::int32 SizeMessage1::field67() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field67)
  return field67_;
}
inline void SizeMessage1::set_field67(::google::protobuf::int32 value) {
  set_has_field67();
  field67_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field67)
}

// optional int32 field68 = 68;
inline bool SizeMessage1::has_field68() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void SizeMessage1::set_has_field68() {
  _has_bits_[1] |= 0x00000020u;
}
inline void SizeMessage1::clear_has_field68() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void SizeMessage1::clear_field68() {
  field68_ = 0;
  clear_has_field68();
}
inline ::google::protobuf::int32 SizeMessage1::field68() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field68)
  return field68_;
}
inline void SizeMessage1::set_field68(::google::protobuf::int32 value) {
  set_has_field68();
  field68_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field68)
}

// optional int32 field128 = 128 [default = 0];
inline bool SizeMessage1::has_field128() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void SizeMessage1::set_has_field128() {
  _has_bits_[1] |= 0x00000040u;
}
inline void SizeMessage1::clear_has_field128() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void SizeMessage1::clear_field128() {
  field128_ = 0;
  clear_has_field128();
}
inline ::google::protobuf::int32 SizeMessage1::field128() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field128)
  return field128_;
}
inline void SizeMessage1::set_field128(::google::protobuf::int32 value) {
  set_has_field128();
  field128_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field128)
}

// optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
inline bool SizeMessage1::has_field129() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void SizeMessage1::set_has_field129() {
  _has_bits_[1] |= 0x00000080u;
}
inline void SizeMessage1::clear_has_field129() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void SizeMessage1::clear_field129() {
  field129_.ClearToDefaultNoArena(_default_field129_);
  clear_has_field129();
}
inline const ::std::string& SizeMessage1::field129() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field129)
  return field129_.GetNoArena(_default_field129_);
}
inline void SizeMessage1::set_field129(const ::std::string& value) {
  set_has_field129();
  field129_.SetNoArena(_default_field129_, value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field129)
}
inline void SizeMessage1::set_field129(const char* value) {
  set_has_field129();
  field129_.SetNoArena(_default_field129_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1.field129)
}
inline void SizeMessage1::set_field129(const char* value, size_t size) {
  set_has_field129();
  field129_.SetNoArena(_default_field129_,
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1.field129)
}
inline ::std::string* SizeMessage1::mutable_field129() {
  set_has_field129();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1.field129)
  return field129_.MutableNoArena(_default_field129_);
}
inline ::std::string* SizeMessage1::release_field129() {
  clear_has_field129();
  return field129_.ReleaseNoArena(_default_field129_);
}
inline void SizeMessage1::set_allocated_field129(::std::string* field129) {
  if (field129 != NULL) {
	set_has_field129();
  } else {
	clear_has_field129();
  }
  field129_.SetAllocatedNoArena(_default_field129_, field129);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1.field129)
}

// optional int32 field131 = 131 [default = 0];
inline bool SizeMessage1::has_field131() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void SizeMessage1::set_has_field131() {
  _has_bits_[1] |= 0x00000100u;
}
inline void SizeMessage1::clear_has_field131() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void SizeMessage1::clear_field131() {
  field131_ = 0;
  clear_has_field131();
}
inline ::google::protobuf::int32 SizeMessage1::field131() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1.field131)
  return field131_;
}
inline void SizeMessage1::set_field131(::google::protobuf::int32 value) {
  set_has_field131();
  field131_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1.field131)
}

// -------------------------------------------------------------------

// SizeMessage1SubMessage

// optional int32 field1 = 1 [default = 0];
inline bool SizeMessage1SubMessage::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SizeMessage1SubMessage::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SizeMessage1SubMessage::clear_field1() {
  field1_ = 0;
  clear_has_field1();
}
inline ::google::protobuf::int32 SizeMessage1SubMessage::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field1)
  return field1_;
}
inline void SizeMessage1SubMessage::set_field1(::google::protobuf::int32 value) {
  set_has_field1();
  field1_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field1)
}

// optional int32 field2 = 2 [default = 0];
inline bool SizeMessage1SubMessage::has_field2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SizeMessage1SubMessage::clear_has_field2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SizeMessage1SubMessage::clear_field2() {
  field2_ = 0;
  clear_has_field2();
}
inline ::google::protobuf::int32 SizeMessage1SubMessage::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field2)
  return field2_;
}
inline void SizeMessage1SubMessage::set_field2(::google::protobuf::int32 value) {
  set_has_field2();
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field2)
}

// optional int32 field3 = 3 [default = 0];
inline bool SizeMessage1SubMessage::has_field3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SizeMessage1SubMessage::clear_has_field3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SizeMessage1SubMessage::clear_field3() {
  field3_ = 0;
  clear_has_field3();
}
inline ::google::protobuf::int32 SizeMessage1SubMessage::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field3)
  return field3_;
}
inline void SizeMessage1SubMessage::set_field3(::google::protobuf::int32 value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field3)
}

// optional string field15 = 15;
inline bool SizeMessage1SubMessage::has_field15() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field15() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SizeMessage1SubMessage::clear_has_field15() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SizeMessage1SubMessage::clear_field15() {
  field15_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field15();
}
inline const ::std::string& SizeMessage1SubMessage::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field15)
  return field15_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1SubMessage::set_field15(const ::std::string& value) {
  set_has_field15();
  field15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field15)
}
inline void SizeMessage1SubMessage::set_field15(const char* value) {
  set_has_field15();
  field15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1SubMessage.field15)
}
inline void SizeMessage1SubMessage::set_field15(const char* value, size_t size) {
  set_has_field15();
  field15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1SubMessage.field15)
}
inline ::std::string* SizeMessage1SubMessage::mutable_field15() {
  set_has_field15();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1SubMessage.field15)
  return field15_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1SubMessage::release_field15() {
  clear_has_field15();
  return field15_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1SubMessage::set_allocated_field15(::std::string* field15) {
  if (field15 != NULL) {
	set_has_field15();
  } else {
	clear_has_field15();
  }
  field15_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field15);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1SubMessage.field15)
}

// optional bool field12 = 12 [default = true];
inline bool SizeMessage1SubMessage::has_field12() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field12() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SizeMessage1SubMessage::clear_has_field12() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SizeMessage1SubMessage::clear_field12() {
  field12_ = true;
  clear_has_field12();
}
inline bool SizeMessage1SubMessage::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field12)
  return field12_;
}
inline void SizeMessage1SubMessage::set_field12(bool value) {
  set_has_field12();
  field12_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field12)
}

// optional int64 field13 = 13;
inline bool SizeMessage1SubMessage::has_field13() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field13() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SizeMessage1SubMessage::clear_has_field13() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SizeMessage1SubMessage::clear_field13() {
  field13_ = GOOGLE_LONGLONG(0);
  clear_has_field13();
}
inline ::google::protobuf::int64 SizeMessage1SubMessage::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field13)
  return field13_;
}
inline void SizeMessage1SubMessage::set_field13(::google::protobuf::int64 value) {
  set_has_field13();
  field13_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field13)
}

// optional int64 field14 = 14;
inline bool SizeMessage1SubMessage::has_field14() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field14() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SizeMessage1SubMessage::clear_has_field14() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SizeMessage1SubMessage::clear_field14() {
  field14_ = GOOGLE_LONGLONG(0);
  clear_has_field14();
}
inline ::google::protobuf::int64 SizeMessage1SubMessage::field14() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field14)
  return field14_;
}
inline void SizeMessage1SubMessage::set_field14(::google::protobuf::int64 value) {
  set_has_field14();
  field14_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field14)
}

// optional int32 field16 = 16;
inline bool SizeMessage1SubMessage::has_field16() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field16() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SizeMessage1SubMessage::clear_has_field16() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SizeMessage1SubMessage::clear_field16() {
  field16_ = 0;
  clear_has_field16();
}
inline ::google::protobuf::int32 SizeMessage1SubMessage::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field16)
  return field16_;
}
inline void SizeMessage1SubMessage::set_field16(::google::protobuf::int32 value) {
  set_has_field16();
  field16_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field16)
}

// optional int32 field19 = 19 [default = 2];
inline bool SizeMessage1SubMessage::has_field19() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field19() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SizeMessage1SubMessage::clear_has_field19() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SizeMessage1SubMessage::clear_field19() {
  field19_ = 2;
  clear_has_field19();
}
inline ::google::protobuf::int32 SizeMessage1SubMessage::field19() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field19)
  return field19_;
}
inline void SizeMessage1SubMessage::set_field19(::google::protobuf::int32 value) {
  set_has_field19();
  field19_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field19)
}

// optional bool field20 = 20 [default = true];
inline bool SizeMessage1SubMessage::has_field20() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field20() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SizeMessage1SubMessage::clear_has_field20() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SizeMessage1SubMessage::clear_field20() {
  field20_ = true;
  clear_has_field20();
}
inline bool SizeMessage1SubMessage::field20() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field20)
  return field20_;
}
inline void SizeMessage1SubMessage::set_field20(bool value) {
  set_has_field20();
  field20_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field20)
}

// optional bool field28 = 28 [default = true];
inline bool SizeMessage1SubMessage::has_field28() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field28() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SizeMessage1SubMessage::clear_has_field28() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SizeMessage1SubMessage::clear_field28() {
  field28_ = true;
  clear_has_field28();
}
inline bool SizeMessage1SubMessage::field28() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field28)
  return field28_;
}
inline void SizeMessage1SubMessage::set_field28(bool value) {
  set_has_field28();
  field28_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field28)
}

// optional fixed64 field21 = 21;
inline bool SizeMessage1SubMessage::has_field21() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field21() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SizeMessage1SubMessage::clear_has_field21() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SizeMessage1SubMessage::clear_field21() {
  field21_ = GOOGLE_ULONGLONG(0);
  clear_has_field21();
}
inline ::google::protobuf::uint64 SizeMessage1SubMessage::field21() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field21)
  return field21_;
}
inline void SizeMessage1SubMessage::set_field21(::google::protobuf::uint64 value) {
  set_has_field21();
  field21_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field21)
}

// optional int32 field22 = 22;
inline bool SizeMessage1SubMessage::has_field22() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field22() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SizeMessage1SubMessage::clear_has_field22() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SizeMessage1SubMessage::clear_field22() {
  field22_ = 0;
  clear_has_field22();
}
inline ::google::protobuf::int32 SizeMessage1SubMessage::field22() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field22)
  return field22_;
}
inline void SizeMessage1SubMessage::set_field22(::google::protobuf::int32 value) {
  set_has_field22();
  field22_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field22)
}

// optional bool field23 = 23 [default = false];
inline bool SizeMessage1SubMessage::has_field23() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field23() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SizeMessage1SubMessage::clear_has_field23() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SizeMessage1SubMessage::clear_field23() {
  field23_ = false;
  clear_has_field23();
}
inline bool SizeMessage1SubMessage::field23() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field23)
  return field23_;
}
inline void SizeMessage1SubMessage::set_field23(bool value) {
  set_has_field23();
  field23_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field23)
}

// optional bool field206 = 206 [default = false];
inline bool SizeMessage1SubMessage::has_field206() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field206() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SizeMessage1SubMessage::clear_has_field206() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SizeMessage1SubMessage::clear_field206() {
  field206_ = false;
  clear_has_field206();
}
inline bool SizeMessage1SubMessage::field206() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field206)
  return field206_;
}
inline void SizeMessage1SubMessage::set_field206(bool value) {
  set_has_field206();
  field206_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field206)
}

// optional fixed32 field203 = 203;
inline bool SizeMessage1SubMessage::has_field203() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field203() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SizeMessage1SubMessage::clear_has_field203() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SizeMessage1SubMessage::clear_field203() {
  field203_ = 0u;
  clear_has_field203();
}
inline ::google::protobuf::uint32 SizeMessage1SubMessage::field203() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field203)
  return field203_;
}
inline void SizeMessage1SubMessage::set_field203(::google::protobuf::uint32 value) {
  set_has_field203();
  field203_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field203)
}

// optional int32 field204 = 204;
inline bool SizeMessage1SubMessage::has_field204() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field204() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SizeMessage1SubMessage::clear_has_field204() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SizeMessage1SubMessage::clear_field204() {
  field204_ = 0;
  clear_has_field204();
}
inline ::google::protobuf::int32 SizeMessage1SubMessage::field204() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field204)
  return field204_;
}
inline void SizeMessage1SubMessage::set_field204(::google::protobuf::int32 value) {
  set_has_field204();
  field204_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field204)
}

// optional string field205 = 205;
inline bool SizeMessage1SubMessage::has_field205() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field205() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SizeMessage1SubMessage::clear_has_field205() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SizeMessage1SubMessage::clear_field205() {
  field205_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field205();
}
inline const ::std::string& SizeMessage1SubMessage::field205() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field205)
  return field205_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1SubMessage::set_field205(const ::std::string& value) {
  set_has_field205();
  field205_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field205)
}
inline void SizeMessage1SubMessage::set_field205(const char* value) {
  set_has_field205();
  field205_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage1SubMessage.field205)
}
inline void SizeMessage1SubMessage::set_field205(const char* value, size_t size) {
  set_has_field205();
  field205_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage1SubMessage.field205)
}
inline ::std::string* SizeMessage1SubMessage::mutable_field205() {
  set_has_field205();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage1SubMessage.field205)
  return field205_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage1SubMessage::release_field205() {
  clear_has_field205();
  return field205_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage1SubMessage::set_allocated_field205(::std::string* field205) {
  if (field205 != NULL) {
	set_has_field205();
  } else {
	clear_has_field205();
  }
  field205_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field205);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage1SubMessage.field205)
}

// optional uint64 field207 = 207;
inline bool SizeMessage1SubMessage::has_field207() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field207() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SizeMessage1SubMessage::clear_has_field207() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SizeMessage1SubMessage::clear_field207() {
  field207_ = GOOGLE_ULONGLONG(0);
  clear_has_field207();
}
inline ::google::protobuf::uint64 SizeMessage1SubMessage::field207() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field207)
  return field207_;
}
inline void SizeMessage1SubMessage::set_field207(::google::protobuf::uint64 value) {
  set_has_field207();
  field207_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field207)
}

// optional uint64 field300 = 300;
inline bool SizeMessage1SubMessage::has_field300() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SizeMessage1SubMessage::set_has_field300() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SizeMessage1SubMessage::clear_has_field300() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SizeMessage1SubMessage::clear_field300() {
  field300_ = GOOGLE_ULONGLONG(0);
  clear_has_field300();
}
inline ::google::protobuf::uint64 SizeMessage1SubMessage::field300() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage1SubMessage.field300)
  return field300_;
}
inline void SizeMessage1SubMessage::set_field300(::google::protobuf::uint64 value) {
  set_has_field300();
  field300_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage1SubMessage.field300)
}

// -------------------------------------------------------------------

// SizeMessage2_Group1

// required float field11 = 11;
inline bool SizeMessage2_Group1::has_field11() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SizeMessage2_Group1::set_has_field11() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SizeMessage2_Group1::clear_has_field11() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SizeMessage2_Group1::clear_field11() {
  field11_ = 0;
  clear_has_field11();
}
inline float SizeMessage2_Group1::field11() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field11)
  return field11_;
}
inline void SizeMessage2_Group1::set_field11(float value) {
  set_has_field11();
  field11_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field11)
}

// optional float field26 = 26;
inline bool SizeMessage2_Group1::has_field26() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SizeMessage2_Group1::set_has_field26() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SizeMessage2_Group1::clear_has_field26() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SizeMessage2_Group1::clear_field26() {
  field26_ = 0;
  clear_has_field26();
}
inline float SizeMessage2_Group1::field26() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field26)
  return field26_;
}
inline void SizeMessage2_Group1::set_field26(float value) {
  set_has_field26();
  field26_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field26)
}

// optional string field12 = 12;
inline bool SizeMessage2_Group1::has_field12() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SizeMessage2_Group1::set_has_field12() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SizeMessage2_Group1::clear_has_field12() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SizeMessage2_Group1::clear_field12() {
  field12_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field12();
}
inline const ::std::string& SizeMessage2_Group1::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field12)
  return field12_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_field12(const ::std::string& value) {
  set_has_field12();
  field12_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field12)
}
inline void SizeMessage2_Group1::set_field12(const char* value) {
  set_has_field12();
  field12_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field12)
}
inline void SizeMessage2_Group1::set_field12(const char* value, size_t size) {
  set_has_field12();
  field12_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field12)
}
inline ::std::string* SizeMessage2_Group1::mutable_field12() {
  set_has_field12();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field12)
  return field12_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2_Group1::release_field12() {
  clear_has_field12();
  return field12_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_allocated_field12(::std::string* field12) {
  if (field12 != NULL) {
	set_has_field12();
  } else {
	clear_has_field12();
  }
  field12_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field12);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.Group1.field12)
}

// optional string field13 = 13;
inline bool SizeMessage2_Group1::has_field13() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SizeMessage2_Group1::set_has_field13() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SizeMessage2_Group1::clear_has_field13() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SizeMessage2_Group1::clear_field13() {
  field13_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field13();
}
inline const ::std::string& SizeMessage2_Group1::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field13)
  return field13_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_field13(const ::std::string& value) {
  set_has_field13();
  field13_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field13)
}
inline void SizeMessage2_Group1::set_field13(const char* value) {
  set_has_field13();
  field13_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field13)
}
inline void SizeMessage2_Group1::set_field13(const char* value, size_t size) {
  set_has_field13();
  field13_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field13)
}
inline ::std::string* SizeMessage2_Group1::mutable_field13() {
  set_has_field13();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field13)
  return field13_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2_Group1::release_field13() {
  clear_has_field13();
  return field13_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_allocated_field13(::std::string* field13) {
  if (field13 != NULL) {
	set_has_field13();
  } else {
	clear_has_field13();
  }
  field13_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field13);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.Group1.field13)
}

// repeated string field14 = 14;
inline int SizeMessage2_Group1::field14_size() const {
  return field14_.size();
}
inline void SizeMessage2_Group1::clear_field14() {
  field14_.Clear();
}
inline const ::std::string& SizeMessage2_Group1::field14(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field14)
  return field14_.Get(index);
}
inline ::std::string* SizeMessage2_Group1::mutable_field14(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field14)
  return field14_.Mutable(index);
}
inline void SizeMessage2_Group1::set_field14(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field14)
  field14_.Mutable(index)->assign(value);
}
inline void SizeMessage2_Group1::set_field14(int index, const char* value) {
  field14_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field14)
}
inline void SizeMessage2_Group1::set_field14(int index, const char* value, size_t size) {
  field14_.Mutable(index)->assign(
	reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field14)
}
inline ::std::string* SizeMessage2_Group1::add_field14() {
  return field14_.Add();
}
inline void SizeMessage2_Group1::add_field14(const ::std::string& value) {
  field14_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage2.Group1.field14)
}
inline void SizeMessage2_Group1::add_field14(const char* value) {
  field14_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SizeMessage2.Group1.field14)
}
inline void SizeMessage2_Group1::add_field14(const char* value, size_t size) {
  field14_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SizeMessage2.Group1.field14)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SizeMessage2_Group1::field14() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage2.Group1.field14)
  return field14_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SizeMessage2_Group1::mutable_field14() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage2.Group1.field14)
  return &field14_;
}

// required uint64 field15 = 15;
inline bool SizeMessage2_Group1::has_field15() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SizeMessage2_Group1::set_has_field15() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SizeMessage2_Group1::clear_has_field15() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SizeMessage2_Group1::clear_field15() {
  field15_ = GOOGLE_ULONGLONG(0);
  clear_has_field15();
}
inline ::google::protobuf::uint64 SizeMessage2_Group1::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field15)
  return field15_;
}
inline void SizeMessage2_Group1::set_field15(::google::protobuf::uint64 value) {
  set_has_field15();
  field15_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field15)
}

// optional int32 field5 = 5;
inline bool SizeMessage2_Group1::has_field5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SizeMessage2_Group1::set_has_field5() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SizeMessage2_Group1::clear_has_field5() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SizeMessage2_Group1::clear_field5() {
  field5_ = 0;
  clear_has_field5();
}
inline ::google::protobuf::int32 SizeMessage2_Group1::field5() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field5)
  return field5_;
}
inline void SizeMessage2_Group1::set_field5(::google::protobuf::int32 value) {
  set_has_field5();
  field5_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field5)
}

// optional string field27 = 27;
inline bool SizeMessage2_Group1::has_field27() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SizeMessage2_Group1::set_has_field27() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SizeMessage2_Group1::clear_has_field27() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SizeMessage2_Group1::clear_field27() {
  field27_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field27();
}
inline const ::std::string& SizeMessage2_Group1::field27() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field27)
  return field27_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_field27(const ::std::string& value) {
  set_has_field27();
  field27_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field27)
}
inline void SizeMessage2_Group1::set_field27(const char* value) {
  set_has_field27();
  field27_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field27)
}
inline void SizeMessage2_Group1::set_field27(const char* value, size_t size) {
  set_has_field27();
  field27_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field27)
}
inline ::std::string* SizeMessage2_Group1::mutable_field27() {
  set_has_field27();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field27)
  return field27_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2_Group1::release_field27() {
  clear_has_field27();
  return field27_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_allocated_field27(::std::string* field27) {
  if (field27 != NULL) {
	set_has_field27();
  } else {
	clear_has_field27();
  }
  field27_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field27);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.Group1.field27)
}

// optional int32 field28 = 28;
inline bool SizeMessage2_Group1::has_field28() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SizeMessage2_Group1::set_has_field28() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SizeMessage2_Group1::clear_has_field28() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SizeMessage2_Group1::clear_field28() {
  field28_ = 0;
  clear_has_field28();
}
inline ::google::protobuf::int32 SizeMessage2_Group1::field28() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field28)
  return field28_;
}
inline void SizeMessage2_Group1::set_field28(::google::protobuf::int32 value) {
  set_has_field28();
  field28_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field28)
}

// optional string field29 = 29;
inline bool SizeMessage2_Group1::has_field29() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SizeMessage2_Group1::set_has_field29() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SizeMessage2_Group1::clear_has_field29() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SizeMessage2_Group1::clear_field29() {
  field29_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field29();
}
inline const ::std::string& SizeMessage2_Group1::field29() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field29)
  return field29_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_field29(const ::std::string& value) {
  set_has_field29();
  field29_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field29)
}
inline void SizeMessage2_Group1::set_field29(const char* value) {
  set_has_field29();
  field29_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field29)
}
inline void SizeMessage2_Group1::set_field29(const char* value, size_t size) {
  set_has_field29();
  field29_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field29)
}
inline ::std::string* SizeMessage2_Group1::mutable_field29() {
  set_has_field29();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field29)
  return field29_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2_Group1::release_field29() {
  clear_has_field29();
  return field29_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_allocated_field29(::std::string* field29) {
  if (field29 != NULL) {
	set_has_field29();
  } else {
	clear_has_field29();
  }
  field29_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field29);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.Group1.field29)
}

// optional string field16 = 16;
inline bool SizeMessage2_Group1::has_field16() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SizeMessage2_Group1::set_has_field16() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SizeMessage2_Group1::clear_has_field16() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SizeMessage2_Group1::clear_field16() {
  field16_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field16();
}
inline const ::std::string& SizeMessage2_Group1::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field16)
  return field16_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_field16(const ::std::string& value) {
  set_has_field16();
  field16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field16)
}
inline void SizeMessage2_Group1::set_field16(const char* value) {
  set_has_field16();
  field16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field16)
}
inline void SizeMessage2_Group1::set_field16(const char* value, size_t size) {
  set_has_field16();
  field16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field16)
}
inline ::std::string* SizeMessage2_Group1::mutable_field16() {
  set_has_field16();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field16)
  return field16_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2_Group1::release_field16() {
  clear_has_field16();
  return field16_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_allocated_field16(::std::string* field16) {
  if (field16 != NULL) {
	set_has_field16();
  } else {
	clear_has_field16();
  }
  field16_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field16);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.Group1.field16)
}

// repeated string field22 = 22;
inline int SizeMessage2_Group1::field22_size() const {
  return field22_.size();
}
inline void SizeMessage2_Group1::clear_field22() {
  field22_.Clear();
}
inline const ::std::string& SizeMessage2_Group1::field22(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field22)
  return field22_.Get(index);
}
inline ::std::string* SizeMessage2_Group1::mutable_field22(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field22)
  return field22_.Mutable(index);
}
inline void SizeMessage2_Group1::set_field22(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field22)
  field22_.Mutable(index)->assign(value);
}
inline void SizeMessage2_Group1::set_field22(int index, const char* value) {
  field22_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field22)
}
inline void SizeMessage2_Group1::set_field22(int index, const char* value, size_t size) {
  field22_.Mutable(index)->assign(
	reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field22)
}
inline ::std::string* SizeMessage2_Group1::add_field22() {
  return field22_.Add();
}
inline void SizeMessage2_Group1::add_field22(const ::std::string& value) {
  field22_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage2.Group1.field22)
}
inline void SizeMessage2_Group1::add_field22(const char* value) {
  field22_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SizeMessage2.Group1.field22)
}
inline void SizeMessage2_Group1::add_field22(const char* value, size_t size) {
  field22_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SizeMessage2.Group1.field22)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SizeMessage2_Group1::field22() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage2.Group1.field22)
  return field22_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SizeMessage2_Group1::mutable_field22() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage2.Group1.field22)
  return &field22_;
}

// repeated int32 field73 = 73;
inline int SizeMessage2_Group1::field73_size() const {
  return field73_.size();
}
inline void SizeMessage2_Group1::clear_field73() {
  field73_.Clear();
}
inline ::google::protobuf::int32 SizeMessage2_Group1::field73(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field73)
  return field73_.Get(index);
}
inline void SizeMessage2_Group1::set_field73(int index, ::google::protobuf::int32 value) {
  field73_.Set(index, value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field73)
}
inline void SizeMessage2_Group1::add_field73(::google::protobuf::int32 value) {
  field73_.Add(value);
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage2.Group1.field73)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SizeMessage2_Group1::field73() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage2.Group1.field73)
  return field73_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SizeMessage2_Group1::mutable_field73() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage2.Group1.field73)
  return &field73_;
}

// optional int32 field20 = 20 [default = 0];
inline bool SizeMessage2_Group1::has_field20() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SizeMessage2_Group1::set_has_field20() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SizeMessage2_Group1::clear_has_field20() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SizeMessage2_Group1::clear_field20() {
  field20_ = 0;
  clear_has_field20();
}
inline ::google::protobuf::int32 SizeMessage2_Group1::field20() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field20)
  return field20_;
}
inline void SizeMessage2_Group1::set_field20(::google::protobuf::int32 value) {
  set_has_field20();
  field20_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field20)
}

// optional string field24 = 24;
inline bool SizeMessage2_Group1::has_field24() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SizeMessage2_Group1::set_has_field24() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SizeMessage2_Group1::clear_has_field24() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SizeMessage2_Group1::clear_field24() {
  field24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field24();
}
inline const ::std::string& SizeMessage2_Group1::field24() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field24)
  return field24_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_field24(const ::std::string& value) {
  set_has_field24();
  field24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.Group1.field24)
}
inline void SizeMessage2_Group1::set_field24(const char* value) {
  set_has_field24();
  field24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.Group1.field24)
}
inline void SizeMessage2_Group1::set_field24(const char* value, size_t size) {
  set_has_field24();
  field24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.Group1.field24)
}
inline ::std::string* SizeMessage2_Group1::mutable_field24() {
  set_has_field24();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field24)
  return field24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2_Group1::release_field24() {
  clear_has_field24();
  return field24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2_Group1::set_allocated_field24(::std::string* field24) {
  if (field24 != NULL) {
	set_has_field24();
  } else {
	clear_has_field24();
  }
  field24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field24);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.Group1.field24)
}

// optional .benchmarks.SizeMessage2GroupedMessage field31 = 31;
inline bool SizeMessage2_Group1::has_field31() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SizeMessage2_Group1::set_has_field31() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SizeMessage2_Group1::clear_has_field31() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SizeMessage2_Group1::clear_field31() {
  if (field31_ != NULL) field31_->::benchmarks::SizeMessage2GroupedMessage::Clear();
  clear_has_field31();
}
inline const ::benchmarks::SizeMessage2GroupedMessage& SizeMessage2_Group1::field31() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.Group1.field31)
  return field31_ != NULL ? *field31_ : *default_instance_->field31_;
}
inline ::benchmarks::SizeMessage2GroupedMessage* SizeMessage2_Group1::mutable_field31() {
  set_has_field31();
  if (field31_ == NULL) {
	field31_ = new ::benchmarks::SizeMessage2GroupedMessage;
  }
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.Group1.field31)
  return field31_;
}
inline ::benchmarks::SizeMessage2GroupedMessage* SizeMessage2_Group1::release_field31() {
  clear_has_field31();
  ::benchmarks::SizeMessage2GroupedMessage* temp = field31_;
  field31_ = NULL;
  return temp;
}
inline void SizeMessage2_Group1::set_allocated_field31(::benchmarks::SizeMessage2GroupedMessage* field31) {
  delete field31_;
  field31_ = field31;
  if (field31) {
	set_has_field31();
  } else {
	clear_has_field31();
  }
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.Group1.field31)
}

// -------------------------------------------------------------------

// SizeMessage2

// optional string field1 = 1;
inline bool SizeMessage2::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SizeMessage2::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SizeMessage2::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SizeMessage2::clear_field1() {
  field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field1();
}
inline const ::std::string& SizeMessage2::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field1)
  return field1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2::set_field1(const ::std::string& value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field1)
}
inline void SizeMessage2::set_field1(const char* value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.field1)
}
inline void SizeMessage2::set_field1(const char* value, size_t size) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.field1)
}
inline ::std::string* SizeMessage2::mutable_field1() {
  set_has_field1();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.field1)
  return field1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2::release_field1() {
  clear_has_field1();
  return field1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2::set_allocated_field1(::std::string* field1) {
  if (field1 != NULL) {
	set_has_field1();
  } else {
	clear_has_field1();
  }
  field1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field1);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.field1)
}

// optional int64 field3 = 3;
inline bool SizeMessage2::has_field3() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SizeMessage2::set_has_field3() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SizeMessage2::clear_has_field3() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SizeMessage2::clear_field3() {
  field3_ = GOOGLE_LONGLONG(0);
  clear_has_field3();
}
inline ::google::protobuf::int64 SizeMessage2::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field3)
  return field3_;
}
inline void SizeMessage2::set_field3(::google::protobuf::int64 value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field3)
}

// optional int64 field4 = 4;
inline bool SizeMessage2::has_field4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SizeMessage2::set_has_field4() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SizeMessage2::clear_has_field4() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SizeMessage2::clear_field4() {
  field4_ = GOOGLE_LONGLONG(0);
  clear_has_field4();
}
inline ::google::protobuf::int64 SizeMessage2::field4() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field4)
  return field4_;
}
inline void SizeMessage2::set_field4(::google::protobuf::int64 value) {
  set_has_field4();
  field4_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field4)
}

// optional int64 field30 = 30;
inline bool SizeMessage2::has_field30() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SizeMessage2::set_has_field30() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SizeMessage2::clear_has_field30() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SizeMessage2::clear_field30() {
  field30_ = GOOGLE_LONGLONG(0);
  clear_has_field30();
}
inline ::google::protobuf::int64 SizeMessage2::field30() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field30)
  return field30_;
}
inline void SizeMessage2::set_field30(::google::protobuf::int64 value) {
  set_has_field30();
  field30_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field30)
}

// optional bool field75 = 75 [default = false];
inline bool SizeMessage2::has_field75() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SizeMessage2::set_has_field75() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SizeMessage2::clear_has_field75() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SizeMessage2::clear_field75() {
  field75_ = false;
  clear_has_field75();
}
inline bool SizeMessage2::field75() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field75)
  return field75_;
}
inline void SizeMessage2::set_field75(bool value) {
  set_has_field75();
  field75_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field75)
}

// optional string field6 = 6;
inline bool SizeMessage2::has_field6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SizeMessage2::set_has_field6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SizeMessage2::clear_has_field6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SizeMessage2::clear_field6() {
  field6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field6();
}
inline const ::std::string& SizeMessage2::field6() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field6)
  return field6_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2::set_field6(const ::std::string& value) {
  set_has_field6();
  field6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field6)
}
inline void SizeMessage2::set_field6(const char* value) {
  set_has_field6();
  field6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.field6)
}
inline void SizeMessage2::set_field6(const char* value, size_t size) {
  set_has_field6();
  field6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.field6)
}
inline ::std::string* SizeMessage2::mutable_field6() {
  set_has_field6();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.field6)
  return field6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2::release_field6() {
  clear_has_field6();
  return field6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2::set_allocated_field6(::std::string* field6) {
  if (field6 != NULL) {
	set_has_field6();
  } else {
	clear_has_field6();
  }
  field6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field6);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.field6)
}

// optional bytes field2 = 2;
inline bool SizeMessage2::has_field2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SizeMessage2::set_has_field2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SizeMessage2::clear_has_field2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SizeMessage2::clear_field2() {
  field2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field2();
}
inline const ::std::string& SizeMessage2::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field2)
  return field2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2::set_field2(const ::std::string& value) {
  set_has_field2();
  field2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field2)
}
inline void SizeMessage2::set_field2(const char* value) {
  set_has_field2();
  field2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.field2)
}
inline void SizeMessage2::set_field2(const void* value, size_t size) {
  set_has_field2();
  field2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
	  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.field2)
}
inline ::std::string* SizeMessage2::mutable_field2() {
  set_has_field2();
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.field2)
  return field2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SizeMessage2::release_field2() {
  clear_has_field2();
  return field2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SizeMessage2::set_allocated_field2(::std::string* field2) {
  if (field2 != NULL) {
	set_has_field2();
  } else {
	clear_has_field2();
  }
  field2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field2);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SizeMessage2.field2)
}

// optional int32 field21 = 21 [default = 0];
inline bool SizeMessage2::has_field21() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SizeMessage2::set_has_field21() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SizeMessage2::clear_has_field21() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SizeMessage2::clear_field21() {
  field21_ = 0;
  clear_has_field21();
}
inline ::google::protobuf::int32 SizeMessage2::field21() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field21)
  return field21_;
}
inline void SizeMessage2::set_field21(::google::protobuf::int32 value) {
  set_has_field21();
  field21_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field21)
}

// optional int32 field71 = 71;
inline bool SizeMessage2::has_field71() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SizeMessage2::set_has_field71() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SizeMessage2::clear_has_field71() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SizeMessage2::clear_field71() {
  field71_ = 0;
  clear_has_field71();
}
inline ::google::protobuf::int32 SizeMessage2::field71() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field71)
  return field71_;
}
inline void SizeMessage2::set_field71(::google::protobuf::int32 value) {
  set_has_field71();
  field71_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field71)
}

// optional float field25 = 25;
inline bool SizeMessage2::has_field25() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SizeMessage2::set_has_field25() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SizeMessage2::clear_has_field25() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SizeMessage2::clear_field25() {
  field25_ = 0;
  clear_has_field25();
}
inline float SizeMessage2::field25() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field25)
  return field25_;
}
inline void SizeMessage2::set_field25(float value) {
  set_has_field25();
  field25_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field25)
}

// optional int32 field109 = 109 [default = 0];
inline bool SizeMessage2::has_field109() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SizeMessage2::set_has_field109() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SizeMessage2::clear_has_field109() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SizeMessage2::clear_field109() {
  field109_ = 0;
  clear_has_field109();
}
inline ::google::protobuf::int32 SizeMessage2::field109() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field109)
  return field109_;
}
inline void SizeMessage2::set_field109(::google::protobuf::int32 value) {
  set_has_field109();
  field109_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field109)
}

// optional int32 field210 = 210 [default = 0];
inline bool SizeMessage2::has_field210() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SizeMessage2::set_has_field210() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SizeMessage2::clear_has_field210() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SizeMessage2::clear_field210() {
  field210_ = 0;
  clear_has_field210();
}
inline ::google::protobuf::int32 SizeMessage2::field210() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field210)
  return field210_;
}
inline void SizeMessage2::set_field210(::google::protobuf::int32 value) {
  set_has_field210();
  field210_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field210)
}

// optional int32 field211 = 211 [default = 0];
inline bool SizeMessage2::has_field211() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SizeMessage2::set_has_field211() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SizeMessage2::clear_has_field211() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SizeMessage2::clear_field211() {
  field211_ = 0;
  clear_has_field211();
}
inline ::google::protobuf::int32 SizeMessage2::field211() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field211)
  return field211_;
}
inline void SizeMessage2::set_field211(::google::protobuf::int32 value) {
  set_has_field211();
  field211_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field211)
}

// optional int32 field212 = 212 [default = 0];
inline bool SizeMessage2::has_field212() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SizeMessage2::set_has_field212() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SizeMessage2::clear_has_field212() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SizeMessage2::clear_field212() {
  field212_ = 0;
  clear_has_field212();
}
inline ::google::protobuf::int32 SizeMessage2::field212() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field212)
  return field212_;
}
inline void SizeMessage2::set_field212(::google::protobuf::int32 value) {
  set_has_field212();
  field212_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field212)
}

// optional int32 field213 = 213 [default = 0];
inline bool SizeMessage2::has_field213() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SizeMessage2::set_has_field213() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SizeMessage2::clear_has_field213() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SizeMessage2::clear_field213() {
  field213_ = 0;
  clear_has_field213();
}
inline ::google::protobuf::int32 SizeMessage2::field213() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field213)
  return field213_;
}
inline void SizeMessage2::set_field213(::google::protobuf::int32 value) {
  set_has_field213();
  field213_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field213)
}

// optional int32 field216 = 216 [default = 0];
inline bool SizeMessage2::has_field216() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SizeMessage2::set_has_field216() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SizeMessage2::clear_has_field216() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SizeMessage2::clear_field216() {
  field216_ = 0;
  clear_has_field216();
}
inline ::google::protobuf::int32 SizeMessage2::field216() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field216)
  return field216_;
}
inline void SizeMessage2::set_field216(::google::protobuf::int32 value) {
  set_has_field216();
  field216_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field216)
}

// optional int32 field217 = 217 [default = 0];
inline bool SizeMessage2::has_field217() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SizeMessage2::set_has_field217() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SizeMessage2::clear_has_field217() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SizeMessage2::clear_field217() {
  field217_ = 0;
  clear_has_field217();
}
inline ::google::protobuf::int32 SizeMessage2::field217() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field217)
  return field217_;
}
inline void SizeMessage2::set_field217(::google::protobuf::int32 value) {
  set_has_field217();
  field217_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field217)
}

// optional int32 field218 = 218 [default = 0];
inline bool SizeMessage2::has_field218() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SizeMessage2::set_has_field218() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SizeMessage2::clear_has_field218() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SizeMessage2::clear_field218() {
  field218_ = 0;
  clear_has_field218();
}
inline ::google::protobuf::int32 SizeMessage2::field218() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field218)
  return field218_;
}
inline void SizeMessage2::set_field218(::google::protobuf::int32 value) {
  set_has_field218();
  field218_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field218)
}

// optional int32 field220 = 220 [default = 0];
inline bool SizeMessage2::has_field220() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SizeMessage2::set_has_field220() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SizeMessage2::clear_has_field220() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SizeMessage2::clear_field220() {
  field220_ = 0;
  clear_has_field220();
}
inline ::google::protobuf::int32 SizeMessage2::field220() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field220)
  return field220_;
}
inline void SizeMessage2::set_field220(::google::protobuf::int32 value) {
  set_has_field220();
  field220_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field220)
}

// optional int32 field221 = 221 [default = 0];
inline bool SizeMessage2::has_field221() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SizeMessage2::set_has_field221() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SizeMessage2::clear_has_field221() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SizeMessage2::clear_field221() {
  field221_ = 0;
  clear_has_field221();
}
inline ::google::protobuf::int32 SizeMessage2::field221() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field221)
  return field221_;
}
inline void SizeMessage2::set_field221(::google::protobuf::int32 value) {
  set_has_field221();
  field221_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field221)
}

// optional float field222 = 222 [default = 0];
inline bool SizeMessage2::has_field222() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SizeMessage2::set_has_field222() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SizeMessage2::clear_has_field222() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SizeMessage2::clear_field222() {
  field222_ = 0;
  clear_has_field222();
}
inline float SizeMessage2::field222() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field222)
  return field222_;
}
inline void SizeMessage2::set_field222(float value) {
  set_has_field222();
  field222_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field222)
}

// optional int32 field63 = 63;
inline bool SizeMessage2::has_field63() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SizeMessage2::set_has_field63() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SizeMessage2::clear_has_field63() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SizeMessage2::clear_field63() {
  field63_ = 0;
  clear_has_field63();
}
inline ::google::protobuf::int32 SizeMessage2::field63() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field63)
  return field63_;
}
inline void SizeMessage2::set_field63(::google::protobuf::int32 value) {
  set_has_field63();
  field63_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field63)
}

// repeated group Group1 = 10 {
inline int SizeMessage2::group1_size() const {
  return group1_.size();
}
inline void SizeMessage2::clear_group1() {
  group1_.Clear();
}
inline const ::benchmarks::SizeMessage2_Group1& SizeMessage2::group1(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.group1)
  return group1_.Get(index);
}
inline ::benchmarks::SizeMessage2_Group1* SizeMessage2::mutable_group1(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.group1)
  return group1_.Mutable(index);
}
inline ::benchmarks::SizeMessage2_Group1* SizeMessage2::add_group1() {
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage2.group1)
  return group1_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::benchmarks::SizeMessage2_Group1 >&
SizeMessage2::group1() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage2.group1)
  return group1_;
}
inline ::google::protobuf::RepeatedPtrField< ::benchmarks::SizeMessage2_Group1 >*
SizeMessage2::mutable_group1() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage2.group1)
  return &group1_;
}

// repeated string field128 = 128;
inline int SizeMessage2::field128_size() const {
  return field128_.size();
}
inline void SizeMessage2::clear_field128() {
  field128_.Clear();
}
inline const ::std::string& SizeMessage2::field128(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field128)
  return field128_.Get(index);
}
inline ::std::string* SizeMessage2::mutable_field128(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.field128)
  return field128_.Mutable(index);
}
inline void SizeMessage2::set_field128(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field128)
  field128_.Mutable(index)->assign(value);
}
inline void SizeMessage2::set_field128(int index, const char* value) {
  field128_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.field128)
}
inline void SizeMessage2::set_field128(int index, const char* value, size_t size) {
  field128_.Mutable(index)->assign(
	reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.field128)
}
inline ::std::string* SizeMessage2::add_field128() {
  return field128_.Add();
}
inline void SizeMessage2::add_field128(const ::std::string& value) {
  field128_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage2.field128)
}
inline void SizeMessage2::add_field128(const char* value) {
  field128_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SizeMessage2.field128)
}
inline void SizeMessage2::add_field128(const char* value, size_t size) {
  field128_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SizeMessage2.field128)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SizeMessage2::field128() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage2.field128)
  return field128_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SizeMessage2::mutable_field128() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage2.field128)
  return &field128_;
}

// optional int64 field131 = 131;
inline bool SizeMessage2::has_field131() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SizeMessage2::set_has_field131() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SizeMessage2::clear_has_field131() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SizeMessage2::clear_field131() {
  field131_ = GOOGLE_LONGLONG(0);
  clear_has_field131();
}
inline ::google::protobuf::int64 SizeMessage2::field131() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field131)
  return field131_;
}
inline void SizeMessage2::set_field131(::google::protobuf::int64 value) {
  set_has_field131();
  field131_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field131)
}

// repeated string field127 = 127;
inline int SizeMessage2::field127_size() const {
  return field127_.size();
}
inline void SizeMessage2::clear_field127() {
  field127_.Clear();
}
inline const ::std::string& SizeMessage2::field127(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field127)
  return field127_.Get(index);
}
inline ::std::string* SizeMessage2::mutable_field127(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SizeMessage2.field127)
  return field127_.Mutable(index);
}
inline void SizeMessage2::set_field127(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field127)
  field127_.Mutable(index)->assign(value);
}
inline void SizeMessage2::set_field127(int index, const char* value) {
  field127_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SizeMessage2.field127)
}
inline void SizeMessage2::set_field127(int index, const char* value, size_t size) {
  field127_.Mutable(index)->assign(
	reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SizeMessage2.field127)
}
inline ::std::string* SizeMessage2::add_field127() {
  return field127_.Add();
}
inline void SizeMessage2::add_field127(const ::std::string& value) {
  field127_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage2.field127)
}
inline void SizeMessage2::add_field127(const char* value) {
  field127_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SizeMessage2.field127)
}
inline void SizeMessage2::add_field127(const char* value, size_t size) {
  field127_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SizeMessage2.field127)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SizeMessage2::field127() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage2.field127)
  return field127_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SizeMessage2::mutable_field127() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage2.field127)
  return &field127_;
}

// optional int32 field129 = 129;
inline bool SizeMessage2::has_field129() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SizeMessage2::set_has_field129() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SizeMessage2::clear_has_field129() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SizeMessage2::clear_field129() {
  field129_ = 0;
  clear_has_field129();
}
inline ::google::protobuf::int32 SizeMessage2::field129() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field129)
  return field129_;
}
inline void SizeMessage2::set_field129(::google::protobuf::int32 value) {
  set_has_field129();
  field129_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field129)
}

// repeated int64 field130 = 130;
inline int SizeMessage2::field130_size() const {
  return field130_.size();
}
inline void SizeMessage2::clear_field130() {
  field130_.Clear();
}
inline ::google::protobuf::int64 SizeMessage2::field130(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field130)
  return field130_.Get(index);
}
inline void SizeMessage2::set_field130(int index, ::google::protobuf::int64 value) {
  field130_.Set(index, value);
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field130)
}
inline void SizeMessage2::add_field130(::google::protobuf::int64 value) {
  field130_.Add(value);
  // @@protoc_insertion_point(field_add:benchmarks.SizeMessage2.field130)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SizeMessage2::field130() const {
  // @@protoc_insertion_point(field_list:benchmarks.SizeMessage2.field130)
  return field130_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SizeMessage2::mutable_field130() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SizeMessage2.field130)
  return &field130_;
}

// optional bool field205 = 205 [default = false];
inline bool SizeMessage2::has_field205() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SizeMessage2::set_has_field205() {
  _has_bits_[0] |= 0x10000000u;
}
inline void SizeMessage2::clear_has_field205() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void SizeMessage2::clear_field205() {
  field205_ = false;
  clear_has_field205();
}
inline bool SizeMessage2::field205() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field205)
  return field205_;
}
inline void SizeMessage2::set_field205(bool value) {
  set_has_field205();
  field205_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field205)
}

// optional bool field206 = 206 [default = false];
inline bool SizeMessage2::has_field206() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SizeMessage2::set_has_field206() {
  _has_bits_[0] |= 0x20000000u;
}
inline void SizeMessage2::clear_has_field206() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void SizeMessage2::clear_field206() {
  field206_ = false;
  clear_has_field206();
}
inline bool SizeMessage2::field206() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2.field206)
  return field206_;
}
inline void SizeMessage2::set_field206(bool value) {
  set_has_field206();
  field206_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2.field206)
}

// -------------------------------------------------------------------

// SizeMessage2GroupedMessage

// optional float field1 = 1;
inline bool SizeMessage2GroupedMessage::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SizeMessage2GroupedMessage::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SizeMessage2GroupedMessage::clear_field1() {
  field1_ = 0;
  clear_has_field1();
}
inline float SizeMessage2GroupedMessage::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field1)
  return field1_;
}
inline void SizeMessage2GroupedMessage::set_field1(float value) {
  set_has_field1();
  field1_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field1)
}

// optional float field2 = 2;
inline bool SizeMessage2GroupedMessage::has_field2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SizeMessage2GroupedMessage::clear_has_field2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SizeMessage2GroupedMessage::clear_field2() {
  field2_ = 0;
  clear_has_field2();
}
inline float SizeMessage2GroupedMessage::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field2)
  return field2_;
}
inline void SizeMessage2GroupedMessage::set_field2(float value) {
  set_has_field2();
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field2)
}

// optional float field3 = 3 [default = 0];
inline bool SizeMessage2GroupedMessage::has_field3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SizeMessage2GroupedMessage::clear_has_field3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SizeMessage2GroupedMessage::clear_field3() {
  field3_ = 0;
  clear_has_field3();
}
inline float SizeMessage2GroupedMessage::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field3)
  return field3_;
}
inline void SizeMessage2GroupedMessage::set_field3(float value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field3)
}

// optional bool field4 = 4;
inline bool SizeMessage2GroupedMessage::has_field4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SizeMessage2GroupedMessage::clear_has_field4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SizeMessage2GroupedMessage::clear_field4() {
  field4_ = false;
  clear_has_field4();
}
inline bool SizeMessage2GroupedMessage::field4() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field4)
  return field4_;
}
inline void SizeMessage2GroupedMessage::set_field4(bool value) {
  set_has_field4();
  field4_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field4)
}

// optional bool field5 = 5;
inline bool SizeMessage2GroupedMessage::has_field5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SizeMessage2GroupedMessage::clear_has_field5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SizeMessage2GroupedMessage::clear_field5() {
  field5_ = false;
  clear_has_field5();
}
inline bool SizeMessage2GroupedMessage::field5() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field5)
  return field5_;
}
inline void SizeMessage2GroupedMessage::set_field5(bool value) {
  set_has_field5();
  field5_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field5)
}

// optional bool field6 = 6 [default = true];
inline bool SizeMessage2GroupedMessage::has_field6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SizeMessage2GroupedMessage::clear_has_field6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SizeMessage2GroupedMessage::clear_field6() {
  field6_ = true;
  clear_has_field6();
}
inline bool SizeMessage2GroupedMessage::field6() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field6)
  return field6_;
}
inline void SizeMessage2GroupedMessage::set_field6(bool value) {
  set_has_field6();
  field6_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field6)
}

// optional bool field7 = 7 [default = false];
inline bool SizeMessage2GroupedMessage::has_field7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SizeMessage2GroupedMessage::clear_has_field7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SizeMessage2GroupedMessage::clear_field7() {
  field7_ = false;
  clear_has_field7();
}
inline bool SizeMessage2GroupedMessage::field7() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field7)
  return field7_;
}
inline void SizeMessage2GroupedMessage::set_field7(bool value) {
  set_has_field7();
  field7_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field7)
}

// optional float field8 = 8;
inline bool SizeMessage2GroupedMessage::has_field8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SizeMessage2GroupedMessage::clear_has_field8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SizeMessage2GroupedMessage::clear_field8() {
  field8_ = 0;
  clear_has_field8();
}
inline float SizeMessage2GroupedMessage::field8() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field8)
  return field8_;
}
inline void SizeMessage2GroupedMessage::set_field8(float value) {
  set_has_field8();
  field8_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field8)
}

// optional bool field9 = 9;
inline bool SizeMessage2GroupedMessage::has_field9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SizeMessage2GroupedMessage::clear_has_field9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SizeMessage2GroupedMessage::clear_field9() {
  field9_ = false;
  clear_has_field9();
}
inline bool SizeMessage2GroupedMessage::field9() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field9)
  return field9_;
}
inline void SizeMessage2GroupedMessage::set_field9(bool value) {
  set_has_field9();
  field9_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field9)
}

// optional float field10 = 10;
inline bool SizeMessage2GroupedMessage::has_field10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SizeMessage2GroupedMessage::clear_has_field10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SizeMessage2GroupedMessage::clear_field10() {
  field10_ = 0;
  clear_has_field10();
}
inline float SizeMessage2GroupedMessage::field10() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field10)
  return field10_;
}
inline void SizeMessage2GroupedMessage::set_field10(float value) {
  set_has_field10();
  field10_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field10)
}

// optional int64 field11 = 11;
inline bool SizeMessage2GroupedMessage::has_field11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SizeMessage2GroupedMessage::set_has_field11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SizeMessage2GroupedMessage::clear_has_field11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SizeMessage2GroupedMessage::clear_field11() {
  field11_ = GOOGLE_LONGLONG(0);
  clear_has_field11();
}
inline ::google::protobuf::int64 SizeMessage2GroupedMessage::field11() const {
  // @@protoc_insertion_point(field_get:benchmarks.SizeMessage2GroupedMessage.field11)
  return field11_;
}
inline void SizeMessage2GroupedMessage::set_field11(::google::protobuf::int64 value) {
  set_has_field11();
  field11_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SizeMessage2GroupedMessage.field11)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace benchmarks

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_5fsize_2eproto__INCLUDED
