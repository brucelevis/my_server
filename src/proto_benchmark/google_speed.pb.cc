// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google_speed.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google_speed.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace benchmarks {

namespace {

const ::google::protobuf::Descriptor* SpeedMessage1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpeedMessage1_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpeedMessage1SubMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpeedMessage1SubMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpeedMessage2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpeedMessage2_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpeedMessage2_Group1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpeedMessage2_Group1_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpeedMessage2GroupedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpeedMessage2GroupedMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_5fspeed_2eproto() {
  protobuf_AddDesc_google_5fspeed_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google_speed.proto");
  GOOGLE_CHECK(file != NULL);
  SpeedMessage1_descriptor_ = file->message_type(0);
  static const int SpeedMessage1_offsets_[41] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field80_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field81_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field280_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field59_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field130_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field17_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field104_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field100_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field101_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field102_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field103_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field29_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field60_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field271_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field272_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field150_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field23_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field24_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field25_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field78_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field67_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field68_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field128_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field129_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, field131_),
  };
  SpeedMessage1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpeedMessage1_descriptor_,
      SpeedMessage1::default_instance_,
      SpeedMessage1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpeedMessage1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1, _internal_metadata_),
      -1);
  SpeedMessage1SubMessage_descriptor_ = file->message_type(1);
  static const int SpeedMessage1SubMessage_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field19_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field20_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field28_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field23_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field206_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field203_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field204_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field205_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field207_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, field300_),
  };
  SpeedMessage1SubMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpeedMessage1SubMessage_descriptor_,
      SpeedMessage1SubMessage::default_instance_,
      SpeedMessage1SubMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpeedMessage1SubMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage1SubMessage, _internal_metadata_),
      -1);
  SpeedMessage2_descriptor_ = file->message_type(2);
  static const int SpeedMessage2_offsets_[30] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field75_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field71_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field25_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field109_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field210_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field211_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field212_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field213_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field216_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field217_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field218_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field220_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field221_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field222_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field63_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, group1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field128_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field131_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field127_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field129_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field130_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field205_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, field206_),
  };
  SpeedMessage2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpeedMessage2_descriptor_,
      SpeedMessage2::default_instance_,
      SpeedMessage2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpeedMessage2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2, _internal_metadata_),
      -1);
  SpeedMessage2_Group1_descriptor_ = SpeedMessage2_descriptor_->nested_type(0);
  static const int SpeedMessage2_Group1_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field26_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field27_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field28_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field29_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field73_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field20_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field24_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, field31_),
  };
  SpeedMessage2_Group1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpeedMessage2_Group1_descriptor_,
      SpeedMessage2_Group1::default_instance_,
      SpeedMessage2_Group1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpeedMessage2_Group1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2_Group1, _internal_metadata_),
      -1);
  SpeedMessage2GroupedMessage_descriptor_ = file->message_type(3);
  static const int SpeedMessage2GroupedMessage_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, field11_),
  };
  SpeedMessage2GroupedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpeedMessage2GroupedMessage_descriptor_,
      SpeedMessage2GroupedMessage::default_instance_,
      SpeedMessage2GroupedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpeedMessage2GroupedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpeedMessage2GroupedMessage, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_5fspeed_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpeedMessage1_descriptor_, &SpeedMessage1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpeedMessage1SubMessage_descriptor_, &SpeedMessage1SubMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpeedMessage2_descriptor_, &SpeedMessage2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpeedMessage2_Group1_descriptor_, &SpeedMessage2_Group1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpeedMessage2GroupedMessage_descriptor_, &SpeedMessage2GroupedMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_5fspeed_2eproto() {
  delete SpeedMessage1::default_instance_;
  delete SpeedMessage1_reflection_;
  delete SpeedMessage1::_default_field129_;
  delete SpeedMessage1SubMessage::default_instance_;
  delete SpeedMessage1SubMessage_reflection_;
  delete SpeedMessage2::default_instance_;
  delete SpeedMessage2_reflection_;
  delete SpeedMessage2_Group1::default_instance_;
  delete SpeedMessage2_Group1_reflection_;
  delete SpeedMessage2GroupedMessage::default_instance_;
  delete SpeedMessage2GroupedMessage_reflection_;
}

void protobuf_AddDesc_google_5fspeed_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022google_speed.proto\022\nbenchmarks\"\370\006\n\rSpe"
    "edMessage1\022\016\n\006field1\030\001 \002(\t\022\016\n\006field9\030\t \001"
    "(\t\022\017\n\007field18\030\022 \001(\t\022\026\n\007field80\030P \001(\010:\005fa"
    "lse\022\025\n\007field81\030Q \001(\010:\004true\022\016\n\006field2\030\002 \002"
    "(\005\022\016\n\006field3\030\003 \002(\005\022\021\n\010field280\030\230\002 \001(\005\022\021\n"
    "\006field6\030\006 \001(\005:\0010\022\017\n\007field22\030\026 \001(\003\022\016\n\006fie"
    "ld4\030\004 \001(\t\022\016\n\006field5\030\005 \003(\006\022\026\n\007field59\030; \001"
    "(\010:\005false\022\016\n\006field7\030\007 \001(\t\022\017\n\007field16\030\020 \001"
    "(\005\022\024\n\010field130\030\202\001 \001(\005:\0010\022\025\n\007field12\030\014 \001("
    "\010:\004true\022\025\n\007field17\030\021 \001(\010:\004true\022\025\n\007field1"
    "3\030\r \001(\010:\004true\022\025\n\007field14\030\016 \001(\010:\004true\022\023\n\010"
    "field104\030h \001(\005:\0010\022\023\n\010field100\030d \001(\005:\0010\022\023"
    "\n\010field101\030e \001(\005:\0010\022\020\n\010field102\030f \001(\t\022\020\n"
    "\010field103\030g \001(\t\022\022\n\007field29\030\035 \001(\005:\0010\022\026\n\007f"
    "ield30\030\036 \001(\010:\005false\022\023\n\007field60\030< \001(\005:\002-1"
    "\022\025\n\010field271\030\217\002 \001(\005:\002-1\022\025\n\010field272\030\220\002 \001"
    "(\005:\002-1\022\021\n\010field150\030\226\001 \001(\005\022\022\n\007field23\030\027 \001"
    "(\005:\0010\022\026\n\007field24\030\030 \001(\010:\005false\022\022\n\007field25"
    "\030\031 \001(\005:\0010\0224\n\007field15\030\017 \001(\0132#.benchmarks."
    "SpeedMessage1SubMessage\022\017\n\007field78\030N \001(\010"
    "\022\022\n\007field67\030C \001(\005:\0010\022\017\n\007field68\030D \001(\005\022\024\n"
    "\010field128\030\200\001 \001(\005:\0010\022(\n\010field129\030\201\001 \001(\t:\025"
    "xxxxxxxxxxxxxxxxxxxxx\022\024\n\010field131\030\203\001 \001(\005"
    ":\0010\"\242\003\n\027SpeedMessage1SubMessage\022\021\n\006field"
    "1\030\001 \001(\005:\0010\022\021\n\006field2\030\002 \001(\005:\0010\022\021\n\006field3\030"
    "\003 \001(\005:\0010\022\017\n\007field15\030\017 \001(\t\022\025\n\007field12\030\014 \001"
    "(\010:\004true\022\017\n\007field13\030\r \001(\003\022\017\n\007field14\030\016 \001"
    "(\003\022\017\n\007field16\030\020 \001(\005\022\022\n\007field19\030\023 \001(\005:\0012\022"
    "\025\n\007field20\030\024 \001(\010:\004true\022\025\n\007field28\030\034 \001(\010:"
    "\004true\022\017\n\007field21\030\025 \001(\006\022\017\n\007field22\030\026 \001(\005\022"
    "\026\n\007field23\030\027 \001(\010:\005false\022\030\n\010field206\030\316\001 \001"
    "(\010:\005false\022\021\n\010field203\030\313\001 \001(\007\022\021\n\010field204"
    "\030\314\001 \001(\005\022\021\n\010field205\030\315\001 \001(\t\022\021\n\010field207\030\317"
    "\001 \001(\004\022\021\n\010field300\030\254\002 \001(\004\"\312\007\n\rSpeedMessag"
    "e2\022\016\n\006field1\030\001 \001(\t\022\016\n\006field3\030\003 \001(\003\022\016\n\006fi"
    "eld4\030\004 \001(\003\022\017\n\007field30\030\036 \001(\003\022\026\n\007field75\030K"
    " \001(\010:\005false\022\016\n\006field6\030\006 \001(\t\022\016\n\006field2\030\002 "
    "\001(\014\022\022\n\007field21\030\025 \001(\005:\0010\022\017\n\007field71\030G \001(\005"
    "\022\017\n\007field25\030\031 \001(\002\022\023\n\010field109\030m \001(\005:\0010\022\024"
    "\n\010field210\030\322\001 \001(\005:\0010\022\024\n\010field211\030\323\001 \001(\005:"
    "\0010\022\024\n\010field212\030\324\001 \001(\005:\0010\022\024\n\010field213\030\325\001 "
    "\001(\005:\0010\022\024\n\010field216\030\330\001 \001(\005:\0010\022\024\n\010field217"
    "\030\331\001 \001(\005:\0010\022\024\n\010field218\030\332\001 \001(\005:\0010\022\024\n\010fiel"
    "d220\030\334\001 \001(\005:\0010\022\024\n\010field221\030\335\001 \001(\005:\0010\022\024\n\010"
    "field222\030\336\001 \001(\002:\0010\022\017\n\007field63\030\? \001(\005\0220\n\006g"
    "roup1\030\n \003(\n2 .benchmarks.SpeedMessage2.G"
    "roup1\022\021\n\010field128\030\200\001 \003(\t\022\021\n\010field131\030\203\001 "
    "\001(\003\022\020\n\010field127\030\177 \003(\t\022\021\n\010field129\030\201\001 \001(\005"
    "\022\021\n\010field130\030\202\001 \003(\003\022\030\n\010field205\030\315\001 \001(\010:\005"
    "false\022\030\n\010field206\030\316\001 \001(\010:\005false\032\303\002\n\006Grou"
    "p1\022\017\n\007field11\030\013 \002(\002\022\017\n\007field26\030\032 \001(\002\022\017\n\007"
    "field12\030\014 \001(\t\022\017\n\007field13\030\r \001(\t\022\017\n\007field1"
    "4\030\016 \003(\t\022\017\n\007field15\030\017 \002(\004\022\016\n\006field5\030\005 \001(\005"
    "\022\017\n\007field27\030\033 \001(\t\022\017\n\007field28\030\034 \001(\005\022\017\n\007fi"
    "eld29\030\035 \001(\t\022\017\n\007field16\030\020 \001(\t\022\017\n\007field22\030"
    "\026 \003(\t\022\017\n\007field73\030I \003(\005\022\022\n\007field20\030\024 \001(\005:"
    "\0010\022\017\n\007field24\030\030 \001(\t\0228\n\007field31\030\037 \001(\0132\'.b"
    "enchmarks.SpeedMessage2GroupedMessage\"\337\001"
    "\n\033SpeedMessage2GroupedMessage\022\016\n\006field1\030"
    "\001 \001(\002\022\016\n\006field2\030\002 \001(\002\022\021\n\006field3\030\003 \001(\002:\0010"
    "\022\016\n\006field4\030\004 \001(\010\022\016\n\006field5\030\005 \001(\010\022\024\n\006fiel"
    "d6\030\006 \001(\010:\004true\022\025\n\006field7\030\007 \001(\010:\005false\022\016\n"
    "\006field8\030\010 \001(\002\022\016\n\006field9\030\t \001(\010\022\017\n\007field10"
    "\030\n \001(\002\022\017\n\007field11\030\013 \001(\003B\017B\013GoogleSpeedH\001", 2560);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google_speed.proto", &protobuf_RegisterTypes);
  SpeedMessage1::_default_field129_ =
      new ::std::string("xxxxxxxxxxxxxxxxxxxxx", 21);
  SpeedMessage1::default_instance_ = new SpeedMessage1();
  SpeedMessage1SubMessage::default_instance_ = new SpeedMessage1SubMessage();
  SpeedMessage2::default_instance_ = new SpeedMessage2();
  SpeedMessage2_Group1::default_instance_ = new SpeedMessage2_Group1();
  SpeedMessage2GroupedMessage::default_instance_ = new SpeedMessage2GroupedMessage();
  SpeedMessage1::default_instance_->InitAsDefaultInstance();
  SpeedMessage1SubMessage::default_instance_->InitAsDefaultInstance();
  SpeedMessage2::default_instance_->InitAsDefaultInstance();
  SpeedMessage2_Group1::default_instance_->InitAsDefaultInstance();
  SpeedMessage2GroupedMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_5fspeed_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_5fspeed_2eproto {
  StaticDescriptorInitializer_google_5fspeed_2eproto() {
    protobuf_AddDesc_google_5fspeed_2eproto();
  }
} static_descriptor_initializer_google_5fspeed_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

::std::string* SpeedMessage1::_default_field129_ = NULL;
#ifndef _MSC_VER
const int SpeedMessage1::kField1FieldNumber;
const int SpeedMessage1::kField9FieldNumber;
const int SpeedMessage1::kField18FieldNumber;
const int SpeedMessage1::kField80FieldNumber;
const int SpeedMessage1::kField81FieldNumber;
const int SpeedMessage1::kField2FieldNumber;
const int SpeedMessage1::kField3FieldNumber;
const int SpeedMessage1::kField280FieldNumber;
const int SpeedMessage1::kField6FieldNumber;
const int SpeedMessage1::kField22FieldNumber;
const int SpeedMessage1::kField4FieldNumber;
const int SpeedMessage1::kField5FieldNumber;
const int SpeedMessage1::kField59FieldNumber;
const int SpeedMessage1::kField7FieldNumber;
const int SpeedMessage1::kField16FieldNumber;
const int SpeedMessage1::kField130FieldNumber;
const int SpeedMessage1::kField12FieldNumber;
const int SpeedMessage1::kField17FieldNumber;
const int SpeedMessage1::kField13FieldNumber;
const int SpeedMessage1::kField14FieldNumber;
const int SpeedMessage1::kField104FieldNumber;
const int SpeedMessage1::kField100FieldNumber;
const int SpeedMessage1::kField101FieldNumber;
const int SpeedMessage1::kField102FieldNumber;
const int SpeedMessage1::kField103FieldNumber;
const int SpeedMessage1::kField29FieldNumber;
const int SpeedMessage1::kField30FieldNumber;
const int SpeedMessage1::kField60FieldNumber;
const int SpeedMessage1::kField271FieldNumber;
const int SpeedMessage1::kField272FieldNumber;
const int SpeedMessage1::kField150FieldNumber;
const int SpeedMessage1::kField23FieldNumber;
const int SpeedMessage1::kField24FieldNumber;
const int SpeedMessage1::kField25FieldNumber;
const int SpeedMessage1::kField15FieldNumber;
const int SpeedMessage1::kField78FieldNumber;
const int SpeedMessage1::kField67FieldNumber;
const int SpeedMessage1::kField68FieldNumber;
const int SpeedMessage1::kField128FieldNumber;
const int SpeedMessage1::kField129FieldNumber;
const int SpeedMessage1::kField131FieldNumber;
#endif  // !_MSC_VER

SpeedMessage1::SpeedMessage1()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:benchmarks.SpeedMessage1)
}

void SpeedMessage1::InitAsDefaultInstance() {
  field15_ = const_cast< ::benchmarks::SpeedMessage1SubMessage*>(&::benchmarks::SpeedMessage1SubMessage::default_instance());
}

SpeedMessage1::SpeedMessage1(const SpeedMessage1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:benchmarks.SpeedMessage1)
}

void SpeedMessage1::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field18_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field80_ = false;
  field81_ = true;
  field2_ = 0;
  field3_ = 0;
  field280_ = 0;
  field6_ = 0;
  field22_ = GOOGLE_LONGLONG(0);
  field4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field59_ = false;
  field7_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field16_ = 0;
  field130_ = 0;
  field12_ = true;
  field17_ = true;
  field13_ = true;
  field14_ = true;
  field104_ = 0;
  field100_ = 0;
  field101_ = 0;
  field102_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field103_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field29_ = 0;
  field30_ = false;
  field60_ = -1;
  field271_ = -1;
  field272_ = -1;
  field150_ = 0;
  field23_ = 0;
  field24_ = false;
  field25_ = 0;
  field15_ = NULL;
  field78_ = false;
  field67_ = 0;
  field68_ = 0;
  field128_ = 0;
  field129_.UnsafeSetDefault(_default_field129_);
  field131_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpeedMessage1::~SpeedMessage1() {
  // @@protoc_insertion_point(destructor:benchmarks.SpeedMessage1)
  SharedDtor();
}

void SpeedMessage1::SharedDtor() {
  field1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field9_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field18_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field7_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field102_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field103_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field129_.DestroyNoArena(_default_field129_);
  if (this != default_instance_) {
    delete field15_;
  }
}

void SpeedMessage1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedMessage1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpeedMessage1_descriptor_;
}

const SpeedMessage1& SpeedMessage1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_5fspeed_2eproto();
  return *default_instance_;
}

SpeedMessage1* SpeedMessage1::default_instance_ = NULL;

SpeedMessage1* SpeedMessage1::New(::google::protobuf::Arena* arena) const {
  SpeedMessage1* n = new SpeedMessage1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpeedMessage1::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpeedMessage1*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(field2_, field280_);
    if (has_field1()) {
      field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_field9()) {
      field9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_field18()) {
      field18_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field80_ = false;
    field81_ = true;
  }
  if (_has_bits_[8 / 32] & 63232) {
    ZR_(field6_, field22_);
    if (has_field4()) {
      field4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field59_ = false;
    if (has_field7()) {
      field7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field16_ = 0;
    field130_ = 0;
  }
  if (_has_bits_[16 / 32] & 16711680) {
    field12_ = true;
    field17_ = true;
    field13_ = true;
    field14_ = true;
    field104_ = 0;
    field100_ = 0;
    field101_ = 0;
    if (has_field102()) {
      field102_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    ZR_(field150_, field23_);
    if (has_field103()) {
      field103_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field29_ = 0;
    field30_ = false;
    field60_ = -1;
    field271_ = -1;
    field272_ = -1;
  }
  if (_has_bits_[32 / 32] & 255) {
    ZR_(field24_, field128_);
    field25_ = 0;
    if (has_field15()) {
      if (field15_ != NULL) field15_->::benchmarks::SpeedMessage1SubMessage::Clear();
    }
    if (has_field129()) {
      field129_.ClearToDefaultNoArena(_default_field129_);
    }
  }
  field131_ = 0;

#undef ZR_HELPER_
#undef ZR_

  field5_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpeedMessage1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:benchmarks.SpeedMessage1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string field1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field1().data(), this->field1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_field2;
        break;
      }

      // required int32 field2 = 2;
      case 2: {
        if (tag == 16) {
         parse_field2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field2_)));
          set_has_field2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_field3;
        break;
      }

      // required int32 field3 = 3;
      case 3: {
        if (tag == 24) {
         parse_field3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field3_)));
          set_has_field3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_field4;
        break;
      }

      // optional string field4 = 4;
      case 4: {
        if (tag == 34) {
         parse_field4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field4().data(), this->field4().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field4");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_field5;
        break;
      }

      // repeated fixed64 field5 = 5;
      case 5: {
        if (tag == 41) {
         parse_field5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 41, input, this->mutable_field5())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_field5())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_field5;
        if (input->ExpectTag(48)) goto parse_field6;
        break;
      }

      // optional int32 field6 = 6 [default = 0];
      case 6: {
        if (tag == 48) {
         parse_field6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field6_)));
          set_has_field6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_field7;
        break;
      }

      // optional string field7 = 7;
      case 7: {
        if (tag == 58) {
         parse_field7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field7().data(), this->field7().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field7");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_field9;
        break;
      }

      // optional string field9 = 9;
      case 9: {
        if (tag == 74) {
         parse_field9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field9()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field9().data(), this->field9().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field9");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_field12;
        break;
      }

      // optional bool field12 = 12 [default = true];
      case 12: {
        if (tag == 96) {
         parse_field12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field12_)));
          set_has_field12();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_field13;
        break;
      }

      // optional bool field13 = 13 [default = true];
      case 13: {
        if (tag == 104) {
         parse_field13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field13_)));
          set_has_field13();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_field14;
        break;
      }

      // optional bool field14 = 14 [default = true];
      case 14: {
        if (tag == 112) {
         parse_field14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field14_)));
          set_has_field14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_field15;
        break;
      }

      // optional .benchmarks.SpeedMessage1SubMessage field15 = 15;
      case 15: {
        if (tag == 122) {
         parse_field15:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field15()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_field16;
        break;
      }

      // optional int32 field16 = 16;
      case 16: {
        if (tag == 128) {
         parse_field16:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field16_)));
          set_has_field16();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_field17;
        break;
      }

      // optional bool field17 = 17 [default = true];
      case 17: {
        if (tag == 136) {
         parse_field17:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field17_)));
          set_has_field17();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_field18;
        break;
      }

      // optional string field18 = 18;
      case 18: {
        if (tag == 146) {
         parse_field18:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field18()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field18().data(), this->field18().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field18");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_field22;
        break;
      }

      // optional int64 field22 = 22;
      case 22: {
        if (tag == 176) {
         parse_field22:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field22_)));
          set_has_field22();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_field23;
        break;
      }

      // optional int32 field23 = 23 [default = 0];
      case 23: {
        if (tag == 184) {
         parse_field23:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field23_)));
          set_has_field23();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_field24;
        break;
      }

      // optional bool field24 = 24 [default = false];
      case 24: {
        if (tag == 192) {
         parse_field24:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field24_)));
          set_has_field24();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_field25;
        break;
      }

      // optional int32 field25 = 25 [default = 0];
      case 25: {
        if (tag == 200) {
         parse_field25:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field25_)));
          set_has_field25();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_field29;
        break;
      }

      // optional int32 field29 = 29 [default = 0];
      case 29: {
        if (tag == 232) {
         parse_field29:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field29_)));
          set_has_field29();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_field30;
        break;
      }

      // optional bool field30 = 30 [default = false];
      case 30: {
        if (tag == 240) {
         parse_field30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field30_)));
          set_has_field30();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(472)) goto parse_field59;
        break;
      }

      // optional bool field59 = 59 [default = false];
      case 59: {
        if (tag == 472) {
         parse_field59:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field59_)));
          set_has_field59();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(480)) goto parse_field60;
        break;
      }

      // optional int32 field60 = 60 [default = -1];
      case 60: {
        if (tag == 480) {
         parse_field60:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field60_)));
          set_has_field60();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(536)) goto parse_field67;
        break;
      }

      // optional int32 field67 = 67 [default = 0];
      case 67: {
        if (tag == 536) {
         parse_field67:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field67_)));
          set_has_field67();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(544)) goto parse_field68;
        break;
      }

      // optional int32 field68 = 68;
      case 68: {
        if (tag == 544) {
         parse_field68:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field68_)));
          set_has_field68();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(624)) goto parse_field78;
        break;
      }

      // optional bool field78 = 78;
      case 78: {
        if (tag == 624) {
         parse_field78:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field78_)));
          set_has_field78();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(640)) goto parse_field80;
        break;
      }

      // optional bool field80 = 80 [default = false];
      case 80: {
        if (tag == 640) {
         parse_field80:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field80_)));
          set_has_field80();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(648)) goto parse_field81;
        break;
      }

      // optional bool field81 = 81 [default = true];
      case 81: {
        if (tag == 648) {
         parse_field81:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field81_)));
          set_has_field81();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800)) goto parse_field100;
        break;
      }

      // optional int32 field100 = 100 [default = 0];
      case 100: {
        if (tag == 800) {
         parse_field100:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field100_)));
          set_has_field100();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(808)) goto parse_field101;
        break;
      }

      // optional int32 field101 = 101 [default = 0];
      case 101: {
        if (tag == 808) {
         parse_field101:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field101_)));
          set_has_field101();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_field102;
        break;
      }

      // optional string field102 = 102;
      case 102: {
        if (tag == 818) {
         parse_field102:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field102()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field102().data(), this->field102().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field102");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_field103;
        break;
      }

      // optional string field103 = 103;
      case 103: {
        if (tag == 826) {
         parse_field103:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field103()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field103().data(), this->field103().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field103");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(832)) goto parse_field104;
        break;
      }

      // optional int32 field104 = 104 [default = 0];
      case 104: {
        if (tag == 832) {
         parse_field104:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field104_)));
          set_has_field104();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1024)) goto parse_field128;
        break;
      }

      // optional int32 field128 = 128 [default = 0];
      case 128: {
        if (tag == 1024) {
         parse_field128:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field128_)));
          set_has_field128();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1034)) goto parse_field129;
        break;
      }

      // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
      case 129: {
        if (tag == 1034) {
         parse_field129:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field129()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field129().data(), this->field129().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1.field129");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1040)) goto parse_field130;
        break;
      }

      // optional int32 field130 = 130 [default = 0];
      case 130: {
        if (tag == 1040) {
         parse_field130:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field130_)));
          set_has_field130();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1048)) goto parse_field131;
        break;
      }

      // optional int32 field131 = 131 [default = 0];
      case 131: {
        if (tag == 1048) {
         parse_field131:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field131_)));
          set_has_field131();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1200)) goto parse_field150;
        break;
      }

      // optional int32 field150 = 150;
      case 150: {
        if (tag == 1200) {
         parse_field150:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field150_)));
          set_has_field150();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2168)) goto parse_field271;
        break;
      }

      // optional int32 field271 = 271 [default = -1];
      case 271: {
        if (tag == 2168) {
         parse_field271:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field271_)));
          set_has_field271();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2176)) goto parse_field272;
        break;
      }

      // optional int32 field272 = 272 [default = -1];
      case 272: {
        if (tag == 2176) {
         parse_field272:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field272_)));
          set_has_field272();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2240)) goto parse_field280;
        break;
      }

      // optional int32 field280 = 280;
      case 280: {
        if (tag == 2240) {
         parse_field280:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field280_)));
          set_has_field280();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:benchmarks.SpeedMessage1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:benchmarks.SpeedMessage1)
  return false;
#undef DO_
}

void SpeedMessage1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:benchmarks.SpeedMessage1)
  // required string field1 = 1;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1().data(), this->field1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field1(), output);
  }

  // required int32 field2 = 2;
  if (has_field2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->field2(), output);
  }

  // required int32 field3 = 3;
  if (has_field3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->field3(), output);
  }

  // optional string field4 = 4;
  if (has_field4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field4().data(), this->field4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->field4(), output);
  }

  // repeated fixed64 field5 = 5;
  for (int i = 0; i < this->field5_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      5, this->field5(i), output);
  }

  // optional int32 field6 = 6 [default = 0];
  if (has_field6()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->field6(), output);
  }

  // optional string field7 = 7;
  if (has_field7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field7().data(), this->field7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field7");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->field7(), output);
  }

  // optional string field9 = 9;
  if (has_field9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field9().data(), this->field9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field9");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->field9(), output);
  }

  // optional bool field12 = 12 [default = true];
  if (has_field12()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->field12(), output);
  }

  // optional bool field13 = 13 [default = true];
  if (has_field13()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->field13(), output);
  }

  // optional bool field14 = 14 [default = true];
  if (has_field14()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->field14(), output);
  }

  // optional .benchmarks.SpeedMessage1SubMessage field15 = 15;
  if (has_field15()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->field15_, output);
  }

  // optional int32 field16 = 16;
  if (has_field16()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->field16(), output);
  }

  // optional bool field17 = 17 [default = true];
  if (has_field17()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->field17(), output);
  }

  // optional string field18 = 18;
  if (has_field18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field18().data(), this->field18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field18");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->field18(), output);
  }

  // optional int64 field22 = 22;
  if (has_field22()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->field22(), output);
  }

  // optional int32 field23 = 23 [default = 0];
  if (has_field23()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->field23(), output);
  }

  // optional bool field24 = 24 [default = false];
  if (has_field24()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->field24(), output);
  }

  // optional int32 field25 = 25 [default = 0];
  if (has_field25()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->field25(), output);
  }

  // optional int32 field29 = 29 [default = 0];
  if (has_field29()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->field29(), output);
  }

  // optional bool field30 = 30 [default = false];
  if (has_field30()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->field30(), output);
  }

  // optional bool field59 = 59 [default = false];
  if (has_field59()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(59, this->field59(), output);
  }

  // optional int32 field60 = 60 [default = -1];
  if (has_field60()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(60, this->field60(), output);
  }

  // optional int32 field67 = 67 [default = 0];
  if (has_field67()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(67, this->field67(), output);
  }

  // optional int32 field68 = 68;
  if (has_field68()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(68, this->field68(), output);
  }

  // optional bool field78 = 78;
  if (has_field78()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(78, this->field78(), output);
  }

  // optional bool field80 = 80 [default = false];
  if (has_field80()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(80, this->field80(), output);
  }

  // optional bool field81 = 81 [default = true];
  if (has_field81()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(81, this->field81(), output);
  }

  // optional int32 field100 = 100 [default = 0];
  if (has_field100()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(100, this->field100(), output);
  }

  // optional int32 field101 = 101 [default = 0];
  if (has_field101()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(101, this->field101(), output);
  }

  // optional string field102 = 102;
  if (has_field102()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field102().data(), this->field102().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field102");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->field102(), output);
  }

  // optional string field103 = 103;
  if (has_field103()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field103().data(), this->field103().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field103");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->field103(), output);
  }

  // optional int32 field104 = 104 [default = 0];
  if (has_field104()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(104, this->field104(), output);
  }

  // optional int32 field128 = 128 [default = 0];
  if (has_field128()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(128, this->field128(), output);
  }

  // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
  if (has_field129()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field129().data(), this->field129().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field129");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      129, this->field129(), output);
  }

  // optional int32 field130 = 130 [default = 0];
  if (has_field130()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(130, this->field130(), output);
  }

  // optional int32 field131 = 131 [default = 0];
  if (has_field131()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(131, this->field131(), output);
  }

  // optional int32 field150 = 150;
  if (has_field150()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(150, this->field150(), output);
  }

  // optional int32 field271 = 271 [default = -1];
  if (has_field271()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(271, this->field271(), output);
  }

  // optional int32 field272 = 272 [default = -1];
  if (has_field272()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(272, this->field272(), output);
  }

  // optional int32 field280 = 280;
  if (has_field280()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(280, this->field280(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:benchmarks.SpeedMessage1)
}

::google::protobuf::uint8* SpeedMessage1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:benchmarks.SpeedMessage1)
  // required string field1 = 1;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1().data(), this->field1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field1(), target);
  }

  // required int32 field2 = 2;
  if (has_field2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->field2(), target);
  }

  // required int32 field3 = 3;
  if (has_field3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->field3(), target);
  }

  // optional string field4 = 4;
  if (has_field4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field4().data(), this->field4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->field4(), target);
  }

  // repeated fixed64 field5 = 5;
  for (int i = 0; i < this->field5_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(5, this->field5(i), target);
  }

  // optional int32 field6 = 6 [default = 0];
  if (has_field6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->field6(), target);
  }

  // optional string field7 = 7;
  if (has_field7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field7().data(), this->field7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field7");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->field7(), target);
  }

  // optional string field9 = 9;
  if (has_field9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field9().data(), this->field9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field9");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->field9(), target);
  }

  // optional bool field12 = 12 [default = true];
  if (has_field12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->field12(), target);
  }

  // optional bool field13 = 13 [default = true];
  if (has_field13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->field13(), target);
  }

  // optional bool field14 = 14 [default = true];
  if (has_field14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->field14(), target);
  }

  // optional .benchmarks.SpeedMessage1SubMessage field15 = 15;
  if (has_field15()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, *this->field15_, target);
  }

  // optional int32 field16 = 16;
  if (has_field16()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->field16(), target);
  }

  // optional bool field17 = 17 [default = true];
  if (has_field17()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->field17(), target);
  }

  // optional string field18 = 18;
  if (has_field18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field18().data(), this->field18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field18");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->field18(), target);
  }

  // optional int64 field22 = 22;
  if (has_field22()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->field22(), target);
  }

  // optional int32 field23 = 23 [default = 0];
  if (has_field23()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->field23(), target);
  }

  // optional bool field24 = 24 [default = false];
  if (has_field24()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->field24(), target);
  }

  // optional int32 field25 = 25 [default = 0];
  if (has_field25()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->field25(), target);
  }

  // optional int32 field29 = 29 [default = 0];
  if (has_field29()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->field29(), target);
  }

  // optional bool field30 = 30 [default = false];
  if (has_field30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->field30(), target);
  }

  // optional bool field59 = 59 [default = false];
  if (has_field59()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(59, this->field59(), target);
  }

  // optional int32 field60 = 60 [default = -1];
  if (has_field60()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(60, this->field60(), target);
  }

  // optional int32 field67 = 67 [default = 0];
  if (has_field67()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(67, this->field67(), target);
  }

  // optional int32 field68 = 68;
  if (has_field68()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(68, this->field68(), target);
  }

  // optional bool field78 = 78;
  if (has_field78()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(78, this->field78(), target);
  }

  // optional bool field80 = 80 [default = false];
  if (has_field80()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(80, this->field80(), target);
  }

  // optional bool field81 = 81 [default = true];
  if (has_field81()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(81, this->field81(), target);
  }

  // optional int32 field100 = 100 [default = 0];
  if (has_field100()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(100, this->field100(), target);
  }

  // optional int32 field101 = 101 [default = 0];
  if (has_field101()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(101, this->field101(), target);
  }

  // optional string field102 = 102;
  if (has_field102()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field102().data(), this->field102().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field102");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->field102(), target);
  }

  // optional string field103 = 103;
  if (has_field103()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field103().data(), this->field103().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field103");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->field103(), target);
  }

  // optional int32 field104 = 104 [default = 0];
  if (has_field104()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(104, this->field104(), target);
  }

  // optional int32 field128 = 128 [default = 0];
  if (has_field128()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(128, this->field128(), target);
  }

  // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
  if (has_field129()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field129().data(), this->field129().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1.field129");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        129, this->field129(), target);
  }

  // optional int32 field130 = 130 [default = 0];
  if (has_field130()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(130, this->field130(), target);
  }

  // optional int32 field131 = 131 [default = 0];
  if (has_field131()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(131, this->field131(), target);
  }

  // optional int32 field150 = 150;
  if (has_field150()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(150, this->field150(), target);
  }

  // optional int32 field271 = 271 [default = -1];
  if (has_field271()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(271, this->field271(), target);
  }

  // optional int32 field272 = 272 [default = -1];
  if (has_field272()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(272, this->field272(), target);
  }

  // optional int32 field280 = 280;
  if (has_field280()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(280, this->field280(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:benchmarks.SpeedMessage1)
  return target;
}

int SpeedMessage1::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_field1()) {
    // required string field1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field1());
  }

  if (has_field2()) {
    // required int32 field2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field2());
  }

  if (has_field3()) {
    // required int32 field3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field3());
  }

  return total_size;
}
int SpeedMessage1::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000061) ^ 0x00000061) == 0) {  // All required fields are present.
    // required string field1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field1());

    // required int32 field2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field2());

    // required int32 field3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field3());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 158) {
    // optional string field9 = 9;
    if (has_field9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field9());
    }

    // optional string field18 = 18;
    if (has_field18()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field18());
    }

    // optional bool field80 = 80 [default = false];
    if (has_field80()) {
      total_size += 2 + 1;
    }

    // optional bool field81 = 81 [default = true];
    if (has_field81()) {
      total_size += 2 + 1;
    }

    // optional int32 field280 = 280;
    if (has_field280()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field280());
    }

  }
  if (_has_bits_[8 / 32] & 63232) {
    // optional int32 field6 = 6 [default = 0];
    if (has_field6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field6());
    }

    // optional int64 field22 = 22;
    if (has_field22()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field22());
    }

    // optional string field4 = 4;
    if (has_field4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field4());
    }

    // optional bool field59 = 59 [default = false];
    if (has_field59()) {
      total_size += 2 + 1;
    }

    // optional string field7 = 7;
    if (has_field7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field7());
    }

    // optional int32 field16 = 16;
    if (has_field16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field16());
    }

    // optional int32 field130 = 130 [default = 0];
    if (has_field130()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field130());
    }

  }
  if (_has_bits_[16 / 32] & 16711680) {
    // optional bool field12 = 12 [default = true];
    if (has_field12()) {
      total_size += 1 + 1;
    }

    // optional bool field17 = 17 [default = true];
    if (has_field17()) {
      total_size += 2 + 1;
    }

    // optional bool field13 = 13 [default = true];
    if (has_field13()) {
      total_size += 1 + 1;
    }

    // optional bool field14 = 14 [default = true];
    if (has_field14()) {
      total_size += 1 + 1;
    }

    // optional int32 field104 = 104 [default = 0];
    if (has_field104()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field104());
    }

    // optional int32 field100 = 100 [default = 0];
    if (has_field100()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field100());
    }

    // optional int32 field101 = 101 [default = 0];
    if (has_field101()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field101());
    }

    // optional string field102 = 102;
    if (has_field102()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field102());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080) {
    // optional string field103 = 103;
    if (has_field103()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field103());
    }

    // optional int32 field29 = 29 [default = 0];
    if (has_field29()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field29());
    }

    // optional bool field30 = 30 [default = false];
    if (has_field30()) {
      total_size += 2 + 1;
    }

    // optional int32 field60 = 60 [default = -1];
    if (has_field60()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field60());
    }

    // optional int32 field271 = 271 [default = -1];
    if (has_field271()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field271());
    }

    // optional int32 field272 = 272 [default = -1];
    if (has_field272()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field272());
    }

    // optional int32 field150 = 150;
    if (has_field150()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field150());
    }

    // optional int32 field23 = 23 [default = 0];
    if (has_field23()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field23());
    }

  }
  if (_has_bits_[32 / 32] & 255) {
    // optional bool field24 = 24 [default = false];
    if (has_field24()) {
      total_size += 2 + 1;
    }

    // optional int32 field25 = 25 [default = 0];
    if (has_field25()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field25());
    }

    // optional .benchmarks.SpeedMessage1SubMessage field15 = 15;
    if (has_field15()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->field15_);
    }

    // optional bool field78 = 78;
    if (has_field78()) {
      total_size += 2 + 1;
    }

    // optional int32 field67 = 67 [default = 0];
    if (has_field67()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field67());
    }

    // optional int32 field68 = 68;
    if (has_field68()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field68());
    }

    // optional int32 field128 = 128 [default = 0];
    if (has_field128()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field128());
    }

    // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
    if (has_field129()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field129());
    }

  }
  // optional int32 field131 = 131 [default = 0];
  if (has_field131()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field131());
  }

  // repeated fixed64 field5 = 5;
  {
    int data_size = 0;
    data_size = 8 * this->field5_size();
    total_size += 1 * this->field5_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedMessage1::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpeedMessage1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpeedMessage1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpeedMessage1::MergeFrom(const SpeedMessage1& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  field5_.MergeFrom(from.field5_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      set_has_field1();
      field1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field1_);
    }
    if (from.has_field9()) {
      set_has_field9();
      field9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field9_);
    }
    if (from.has_field18()) {
      set_has_field18();
      field18_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field18_);
    }
    if (from.has_field80()) {
      set_field80(from.field80());
    }
    if (from.has_field81()) {
      set_field81(from.field81());
    }
    if (from.has_field2()) {
      set_field2(from.field2());
    }
    if (from.has_field3()) {
      set_field3(from.field3());
    }
    if (from.has_field280()) {
      set_field280(from.field280());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_field6()) {
      set_field6(from.field6());
    }
    if (from.has_field22()) {
      set_field22(from.field22());
    }
    if (from.has_field4()) {
      set_has_field4();
      field4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field4_);
    }
    if (from.has_field59()) {
      set_field59(from.field59());
    }
    if (from.has_field7()) {
      set_has_field7();
      field7_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field7_);
    }
    if (from.has_field16()) {
      set_field16(from.field16());
    }
    if (from.has_field130()) {
      set_field130(from.field130());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_field12()) {
      set_field12(from.field12());
    }
    if (from.has_field17()) {
      set_field17(from.field17());
    }
    if (from.has_field13()) {
      set_field13(from.field13());
    }
    if (from.has_field14()) {
      set_field14(from.field14());
    }
    if (from.has_field104()) {
      set_field104(from.field104());
    }
    if (from.has_field100()) {
      set_field100(from.field100());
    }
    if (from.has_field101()) {
      set_field101(from.field101());
    }
    if (from.has_field102()) {
      set_has_field102();
      field102_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field102_);
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_field103()) {
      set_has_field103();
      field103_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field103_);
    }
    if (from.has_field29()) {
      set_field29(from.field29());
    }
    if (from.has_field30()) {
      set_field30(from.field30());
    }
    if (from.has_field60()) {
      set_field60(from.field60());
    }
    if (from.has_field271()) {
      set_field271(from.field271());
    }
    if (from.has_field272()) {
      set_field272(from.field272());
    }
    if (from.has_field150()) {
      set_field150(from.field150());
    }
    if (from.has_field23()) {
      set_field23(from.field23());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_field24()) {
      set_field24(from.field24());
    }
    if (from.has_field25()) {
      set_field25(from.field25());
    }
    if (from.has_field15()) {
      mutable_field15()->::benchmarks::SpeedMessage1SubMessage::MergeFrom(from.field15());
    }
    if (from.has_field78()) {
      set_field78(from.field78());
    }
    if (from.has_field67()) {
      set_field67(from.field67());
    }
    if (from.has_field68()) {
      set_field68(from.field68());
    }
    if (from.has_field128()) {
      set_field128(from.field128());
    }
    if (from.has_field129()) {
      set_has_field129();
      field129_.AssignWithDefault(_default_field129_, from.field129_);
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_field131()) {
      set_field131(from.field131());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpeedMessage1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedMessage1::CopyFrom(const SpeedMessage1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedMessage1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000061) != 0x00000061) return false;

  return true;
}

void SpeedMessage1::Swap(SpeedMessage1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedMessage1::InternalSwap(SpeedMessage1* other) {
  field1_.Swap(&other->field1_);
  field9_.Swap(&other->field9_);
  field18_.Swap(&other->field18_);
  std::swap(field80_, other->field80_);
  std::swap(field81_, other->field81_);
  std::swap(field2_, other->field2_);
  std::swap(field3_, other->field3_);
  std::swap(field280_, other->field280_);
  std::swap(field6_, other->field6_);
  std::swap(field22_, other->field22_);
  field4_.Swap(&other->field4_);
  field5_.UnsafeArenaSwap(&other->field5_);
  std::swap(field59_, other->field59_);
  field7_.Swap(&other->field7_);
  std::swap(field16_, other->field16_);
  std::swap(field130_, other->field130_);
  std::swap(field12_, other->field12_);
  std::swap(field17_, other->field17_);
  std::swap(field13_, other->field13_);
  std::swap(field14_, other->field14_);
  std::swap(field104_, other->field104_);
  std::swap(field100_, other->field100_);
  std::swap(field101_, other->field101_);
  field102_.Swap(&other->field102_);
  field103_.Swap(&other->field103_);
  std::swap(field29_, other->field29_);
  std::swap(field30_, other->field30_);
  std::swap(field60_, other->field60_);
  std::swap(field271_, other->field271_);
  std::swap(field272_, other->field272_);
  std::swap(field150_, other->field150_);
  std::swap(field23_, other->field23_);
  std::swap(field24_, other->field24_);
  std::swap(field25_, other->field25_);
  std::swap(field15_, other->field15_);
  std::swap(field78_, other->field78_);
  std::swap(field67_, other->field67_);
  std::swap(field68_, other->field68_);
  std::swap(field128_, other->field128_);
  field129_.Swap(&other->field129_);
  std::swap(field131_, other->field131_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpeedMessage1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpeedMessage1_descriptor_;
  metadata.reflection = SpeedMessage1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpeedMessage1

// required string field1 = 1;
 bool SpeedMessage1::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SpeedMessage1::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
 void SpeedMessage1::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SpeedMessage1::clear_field1() {
  field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field1();
}
 const ::std::string& SpeedMessage1::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field1)
  return field1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_field1(const ::std::string& value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field1)
}
 void SpeedMessage1::set_field1(const char* value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field1)
}
 void SpeedMessage1::set_field1(const char* value, size_t size) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field1)
}
 ::std::string* SpeedMessage1::mutable_field1() {
  set_has_field1();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field1)
  return field1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1::release_field1() {
  clear_has_field1();
  return field1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_allocated_field1(::std::string* field1) {
  if (field1 != NULL) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  field1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field1);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field1)
}

// optional string field9 = 9;
 bool SpeedMessage1::has_field9() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void SpeedMessage1::set_has_field9() {
  _has_bits_[0] |= 0x00000002u;
}
 void SpeedMessage1::clear_has_field9() {
  _has_bits_[0] &= ~0x00000002u;
}
 void SpeedMessage1::clear_field9() {
  field9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field9();
}
 const ::std::string& SpeedMessage1::field9() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field9)
  return field9_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_field9(const ::std::string& value) {
  set_has_field9();
  field9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field9)
}
 void SpeedMessage1::set_field9(const char* value) {
  set_has_field9();
  field9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field9)
}
 void SpeedMessage1::set_field9(const char* value, size_t size) {
  set_has_field9();
  field9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field9)
}
 ::std::string* SpeedMessage1::mutable_field9() {
  set_has_field9();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field9)
  return field9_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1::release_field9() {
  clear_has_field9();
  return field9_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_allocated_field9(::std::string* field9) {
  if (field9 != NULL) {
    set_has_field9();
  } else {
    clear_has_field9();
  }
  field9_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field9);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field9)
}

// optional string field18 = 18;
 bool SpeedMessage1::has_field18() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void SpeedMessage1::set_has_field18() {
  _has_bits_[0] |= 0x00000004u;
}
 void SpeedMessage1::clear_has_field18() {
  _has_bits_[0] &= ~0x00000004u;
}
 void SpeedMessage1::clear_field18() {
  field18_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field18();
}
 const ::std::string& SpeedMessage1::field18() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field18)
  return field18_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_field18(const ::std::string& value) {
  set_has_field18();
  field18_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field18)
}
 void SpeedMessage1::set_field18(const char* value) {
  set_has_field18();
  field18_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field18)
}
 void SpeedMessage1::set_field18(const char* value, size_t size) {
  set_has_field18();
  field18_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field18)
}
 ::std::string* SpeedMessage1::mutable_field18() {
  set_has_field18();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field18)
  return field18_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1::release_field18() {
  clear_has_field18();
  return field18_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_allocated_field18(::std::string* field18) {
  if (field18 != NULL) {
    set_has_field18();
  } else {
    clear_has_field18();
  }
  field18_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field18);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field18)
}

// optional bool field80 = 80 [default = false];
 bool SpeedMessage1::has_field80() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void SpeedMessage1::set_has_field80() {
  _has_bits_[0] |= 0x00000008u;
}
 void SpeedMessage1::clear_has_field80() {
  _has_bits_[0] &= ~0x00000008u;
}
 void SpeedMessage1::clear_field80() {
  field80_ = false;
  clear_has_field80();
}
 bool SpeedMessage1::field80() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field80)
  return field80_;
}
 void SpeedMessage1::set_field80(bool value) {
  set_has_field80();
  field80_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field80)
}

// optional bool field81 = 81 [default = true];
 bool SpeedMessage1::has_field81() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void SpeedMessage1::set_has_field81() {
  _has_bits_[0] |= 0x00000010u;
}
 void SpeedMessage1::clear_has_field81() {
  _has_bits_[0] &= ~0x00000010u;
}
 void SpeedMessage1::clear_field81() {
  field81_ = true;
  clear_has_field81();
}
 bool SpeedMessage1::field81() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field81)
  return field81_;
}
 void SpeedMessage1::set_field81(bool value) {
  set_has_field81();
  field81_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field81)
}

// required int32 field2 = 2;
 bool SpeedMessage1::has_field2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void SpeedMessage1::set_has_field2() {
  _has_bits_[0] |= 0x00000020u;
}
 void SpeedMessage1::clear_has_field2() {
  _has_bits_[0] &= ~0x00000020u;
}
 void SpeedMessage1::clear_field2() {
  field2_ = 0;
  clear_has_field2();
}
 ::google::protobuf::int32 SpeedMessage1::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field2)
  return field2_;
}
 void SpeedMessage1::set_field2(::google::protobuf::int32 value) {
  set_has_field2();
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field2)
}

// required int32 field3 = 3;
 bool SpeedMessage1::has_field3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void SpeedMessage1::set_has_field3() {
  _has_bits_[0] |= 0x00000040u;
}
 void SpeedMessage1::clear_has_field3() {
  _has_bits_[0] &= ~0x00000040u;
}
 void SpeedMessage1::clear_field3() {
  field3_ = 0;
  clear_has_field3();
}
 ::google::protobuf::int32 SpeedMessage1::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field3)
  return field3_;
}
 void SpeedMessage1::set_field3(::google::protobuf::int32 value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field3)
}

// optional int32 field280 = 280;
 bool SpeedMessage1::has_field280() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void SpeedMessage1::set_has_field280() {
  _has_bits_[0] |= 0x00000080u;
}
 void SpeedMessage1::clear_has_field280() {
  _has_bits_[0] &= ~0x00000080u;
}
 void SpeedMessage1::clear_field280() {
  field280_ = 0;
  clear_has_field280();
}
 ::google::protobuf::int32 SpeedMessage1::field280() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field280)
  return field280_;
}
 void SpeedMessage1::set_field280(::google::protobuf::int32 value) {
  set_has_field280();
  field280_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field280)
}

// optional int32 field6 = 6 [default = 0];
 bool SpeedMessage1::has_field6() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void SpeedMessage1::set_has_field6() {
  _has_bits_[0] |= 0x00000100u;
}
 void SpeedMessage1::clear_has_field6() {
  _has_bits_[0] &= ~0x00000100u;
}
 void SpeedMessage1::clear_field6() {
  field6_ = 0;
  clear_has_field6();
}
 ::google::protobuf::int32 SpeedMessage1::field6() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field6)
  return field6_;
}
 void SpeedMessage1::set_field6(::google::protobuf::int32 value) {
  set_has_field6();
  field6_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field6)
}

// optional int64 field22 = 22;
 bool SpeedMessage1::has_field22() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void SpeedMessage1::set_has_field22() {
  _has_bits_[0] |= 0x00000200u;
}
 void SpeedMessage1::clear_has_field22() {
  _has_bits_[0] &= ~0x00000200u;
}
 void SpeedMessage1::clear_field22() {
  field22_ = GOOGLE_LONGLONG(0);
  clear_has_field22();
}
 ::google::protobuf::int64 SpeedMessage1::field22() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field22)
  return field22_;
}
 void SpeedMessage1::set_field22(::google::protobuf::int64 value) {
  set_has_field22();
  field22_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field22)
}

// optional string field4 = 4;
 bool SpeedMessage1::has_field4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void SpeedMessage1::set_has_field4() {
  _has_bits_[0] |= 0x00000400u;
}
 void SpeedMessage1::clear_has_field4() {
  _has_bits_[0] &= ~0x00000400u;
}
 void SpeedMessage1::clear_field4() {
  field4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field4();
}
 const ::std::string& SpeedMessage1::field4() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field4)
  return field4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_field4(const ::std::string& value) {
  set_has_field4();
  field4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field4)
}
 void SpeedMessage1::set_field4(const char* value) {
  set_has_field4();
  field4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field4)
}
 void SpeedMessage1::set_field4(const char* value, size_t size) {
  set_has_field4();
  field4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field4)
}
 ::std::string* SpeedMessage1::mutable_field4() {
  set_has_field4();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field4)
  return field4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1::release_field4() {
  clear_has_field4();
  return field4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_allocated_field4(::std::string* field4) {
  if (field4 != NULL) {
    set_has_field4();
  } else {
    clear_has_field4();
  }
  field4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field4);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field4)
}

// repeated fixed64 field5 = 5;
 int SpeedMessage1::field5_size() const {
  return field5_.size();
}
 void SpeedMessage1::clear_field5() {
  field5_.Clear();
}
 ::google::protobuf::uint64 SpeedMessage1::field5(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field5)
  return field5_.Get(index);
}
 void SpeedMessage1::set_field5(int index, ::google::protobuf::uint64 value) {
  field5_.Set(index, value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field5)
}
 void SpeedMessage1::add_field5(::google::protobuf::uint64 value) {
  field5_.Add(value);
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage1.field5)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SpeedMessage1::field5() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage1.field5)
  return field5_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SpeedMessage1::mutable_field5() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage1.field5)
  return &field5_;
}

// optional bool field59 = 59 [default = false];
 bool SpeedMessage1::has_field59() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void SpeedMessage1::set_has_field59() {
  _has_bits_[0] |= 0x00001000u;
}
 void SpeedMessage1::clear_has_field59() {
  _has_bits_[0] &= ~0x00001000u;
}
 void SpeedMessage1::clear_field59() {
  field59_ = false;
  clear_has_field59();
}
 bool SpeedMessage1::field59() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field59)
  return field59_;
}
 void SpeedMessage1::set_field59(bool value) {
  set_has_field59();
  field59_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field59)
}

// optional string field7 = 7;
 bool SpeedMessage1::has_field7() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void SpeedMessage1::set_has_field7() {
  _has_bits_[0] |= 0x00002000u;
}
 void SpeedMessage1::clear_has_field7() {
  _has_bits_[0] &= ~0x00002000u;
}
 void SpeedMessage1::clear_field7() {
  field7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field7();
}
 const ::std::string& SpeedMessage1::field7() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field7)
  return field7_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_field7(const ::std::string& value) {
  set_has_field7();
  field7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field7)
}
 void SpeedMessage1::set_field7(const char* value) {
  set_has_field7();
  field7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field7)
}
 void SpeedMessage1::set_field7(const char* value, size_t size) {
  set_has_field7();
  field7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field7)
}
 ::std::string* SpeedMessage1::mutable_field7() {
  set_has_field7();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field7)
  return field7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1::release_field7() {
  clear_has_field7();
  return field7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_allocated_field7(::std::string* field7) {
  if (field7 != NULL) {
    set_has_field7();
  } else {
    clear_has_field7();
  }
  field7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field7);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field7)
}

// optional int32 field16 = 16;
 bool SpeedMessage1::has_field16() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
 void SpeedMessage1::set_has_field16() {
  _has_bits_[0] |= 0x00004000u;
}
 void SpeedMessage1::clear_has_field16() {
  _has_bits_[0] &= ~0x00004000u;
}
 void SpeedMessage1::clear_field16() {
  field16_ = 0;
  clear_has_field16();
}
 ::google::protobuf::int32 SpeedMessage1::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field16)
  return field16_;
}
 void SpeedMessage1::set_field16(::google::protobuf::int32 value) {
  set_has_field16();
  field16_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field16)
}

// optional int32 field130 = 130 [default = 0];
 bool SpeedMessage1::has_field130() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
 void SpeedMessage1::set_has_field130() {
  _has_bits_[0] |= 0x00008000u;
}
 void SpeedMessage1::clear_has_field130() {
  _has_bits_[0] &= ~0x00008000u;
}
 void SpeedMessage1::clear_field130() {
  field130_ = 0;
  clear_has_field130();
}
 ::google::protobuf::int32 SpeedMessage1::field130() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field130)
  return field130_;
}
 void SpeedMessage1::set_field130(::google::protobuf::int32 value) {
  set_has_field130();
  field130_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field130)
}

// optional bool field12 = 12 [default = true];
 bool SpeedMessage1::has_field12() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
 void SpeedMessage1::set_has_field12() {
  _has_bits_[0] |= 0x00010000u;
}
 void SpeedMessage1::clear_has_field12() {
  _has_bits_[0] &= ~0x00010000u;
}
 void SpeedMessage1::clear_field12() {
  field12_ = true;
  clear_has_field12();
}
 bool SpeedMessage1::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field12)
  return field12_;
}
 void SpeedMessage1::set_field12(bool value) {
  set_has_field12();
  field12_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field12)
}

// optional bool field17 = 17 [default = true];
 bool SpeedMessage1::has_field17() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
 void SpeedMessage1::set_has_field17() {
  _has_bits_[0] |= 0x00020000u;
}
 void SpeedMessage1::clear_has_field17() {
  _has_bits_[0] &= ~0x00020000u;
}
 void SpeedMessage1::clear_field17() {
  field17_ = true;
  clear_has_field17();
}
 bool SpeedMessage1::field17() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field17)
  return field17_;
}
 void SpeedMessage1::set_field17(bool value) {
  set_has_field17();
  field17_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field17)
}

// optional bool field13 = 13 [default = true];
 bool SpeedMessage1::has_field13() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
 void SpeedMessage1::set_has_field13() {
  _has_bits_[0] |= 0x00040000u;
}
 void SpeedMessage1::clear_has_field13() {
  _has_bits_[0] &= ~0x00040000u;
}
 void SpeedMessage1::clear_field13() {
  field13_ = true;
  clear_has_field13();
}
 bool SpeedMessage1::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field13)
  return field13_;
}
 void SpeedMessage1::set_field13(bool value) {
  set_has_field13();
  field13_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field13)
}

// optional bool field14 = 14 [default = true];
 bool SpeedMessage1::has_field14() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
 void SpeedMessage1::set_has_field14() {
  _has_bits_[0] |= 0x00080000u;
}
 void SpeedMessage1::clear_has_field14() {
  _has_bits_[0] &= ~0x00080000u;
}
 void SpeedMessage1::clear_field14() {
  field14_ = true;
  clear_has_field14();
}
 bool SpeedMessage1::field14() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field14)
  return field14_;
}
 void SpeedMessage1::set_field14(bool value) {
  set_has_field14();
  field14_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field14)
}

// optional int32 field104 = 104 [default = 0];
 bool SpeedMessage1::has_field104() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
 void SpeedMessage1::set_has_field104() {
  _has_bits_[0] |= 0x00100000u;
}
 void SpeedMessage1::clear_has_field104() {
  _has_bits_[0] &= ~0x00100000u;
}
 void SpeedMessage1::clear_field104() {
  field104_ = 0;
  clear_has_field104();
}
 ::google::protobuf::int32 SpeedMessage1::field104() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field104)
  return field104_;
}
 void SpeedMessage1::set_field104(::google::protobuf::int32 value) {
  set_has_field104();
  field104_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field104)
}

// optional int32 field100 = 100 [default = 0];
 bool SpeedMessage1::has_field100() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
 void SpeedMessage1::set_has_field100() {
  _has_bits_[0] |= 0x00200000u;
}
 void SpeedMessage1::clear_has_field100() {
  _has_bits_[0] &= ~0x00200000u;
}
 void SpeedMessage1::clear_field100() {
  field100_ = 0;
  clear_has_field100();
}
 ::google::protobuf::int32 SpeedMessage1::field100() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field100)
  return field100_;
}
 void SpeedMessage1::set_field100(::google::protobuf::int32 value) {
  set_has_field100();
  field100_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field100)
}

// optional int32 field101 = 101 [default = 0];
 bool SpeedMessage1::has_field101() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
 void SpeedMessage1::set_has_field101() {
  _has_bits_[0] |= 0x00400000u;
}
 void SpeedMessage1::clear_has_field101() {
  _has_bits_[0] &= ~0x00400000u;
}
 void SpeedMessage1::clear_field101() {
  field101_ = 0;
  clear_has_field101();
}
 ::google::protobuf::int32 SpeedMessage1::field101() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field101)
  return field101_;
}
 void SpeedMessage1::set_field101(::google::protobuf::int32 value) {
  set_has_field101();
  field101_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field101)
}

// optional string field102 = 102;
 bool SpeedMessage1::has_field102() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
 void SpeedMessage1::set_has_field102() {
  _has_bits_[0] |= 0x00800000u;
}
 void SpeedMessage1::clear_has_field102() {
  _has_bits_[0] &= ~0x00800000u;
}
 void SpeedMessage1::clear_field102() {
  field102_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field102();
}
 const ::std::string& SpeedMessage1::field102() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field102)
  return field102_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_field102(const ::std::string& value) {
  set_has_field102();
  field102_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field102)
}
 void SpeedMessage1::set_field102(const char* value) {
  set_has_field102();
  field102_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field102)
}
 void SpeedMessage1::set_field102(const char* value, size_t size) {
  set_has_field102();
  field102_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field102)
}
 ::std::string* SpeedMessage1::mutable_field102() {
  set_has_field102();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field102)
  return field102_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1::release_field102() {
  clear_has_field102();
  return field102_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_allocated_field102(::std::string* field102) {
  if (field102 != NULL) {
    set_has_field102();
  } else {
    clear_has_field102();
  }
  field102_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field102);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field102)
}

// optional string field103 = 103;
 bool SpeedMessage1::has_field103() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
 void SpeedMessage1::set_has_field103() {
  _has_bits_[0] |= 0x01000000u;
}
 void SpeedMessage1::clear_has_field103() {
  _has_bits_[0] &= ~0x01000000u;
}
 void SpeedMessage1::clear_field103() {
  field103_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field103();
}
 const ::std::string& SpeedMessage1::field103() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field103)
  return field103_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_field103(const ::std::string& value) {
  set_has_field103();
  field103_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field103)
}
 void SpeedMessage1::set_field103(const char* value) {
  set_has_field103();
  field103_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field103)
}
 void SpeedMessage1::set_field103(const char* value, size_t size) {
  set_has_field103();
  field103_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field103)
}
 ::std::string* SpeedMessage1::mutable_field103() {
  set_has_field103();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field103)
  return field103_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1::release_field103() {
  clear_has_field103();
  return field103_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1::set_allocated_field103(::std::string* field103) {
  if (field103 != NULL) {
    set_has_field103();
  } else {
    clear_has_field103();
  }
  field103_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field103);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field103)
}

// optional int32 field29 = 29 [default = 0];
 bool SpeedMessage1::has_field29() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
 void SpeedMessage1::set_has_field29() {
  _has_bits_[0] |= 0x02000000u;
}
 void SpeedMessage1::clear_has_field29() {
  _has_bits_[0] &= ~0x02000000u;
}
 void SpeedMessage1::clear_field29() {
  field29_ = 0;
  clear_has_field29();
}
 ::google::protobuf::int32 SpeedMessage1::field29() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field29)
  return field29_;
}
 void SpeedMessage1::set_field29(::google::protobuf::int32 value) {
  set_has_field29();
  field29_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field29)
}

// optional bool field30 = 30 [default = false];
 bool SpeedMessage1::has_field30() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
 void SpeedMessage1::set_has_field30() {
  _has_bits_[0] |= 0x04000000u;
}
 void SpeedMessage1::clear_has_field30() {
  _has_bits_[0] &= ~0x04000000u;
}
 void SpeedMessage1::clear_field30() {
  field30_ = false;
  clear_has_field30();
}
 bool SpeedMessage1::field30() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field30)
  return field30_;
}
 void SpeedMessage1::set_field30(bool value) {
  set_has_field30();
  field30_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field30)
}

// optional int32 field60 = 60 [default = -1];
 bool SpeedMessage1::has_field60() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
 void SpeedMessage1::set_has_field60() {
  _has_bits_[0] |= 0x08000000u;
}
 void SpeedMessage1::clear_has_field60() {
  _has_bits_[0] &= ~0x08000000u;
}
 void SpeedMessage1::clear_field60() {
  field60_ = -1;
  clear_has_field60();
}
 ::google::protobuf::int32 SpeedMessage1::field60() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field60)
  return field60_;
}
 void SpeedMessage1::set_field60(::google::protobuf::int32 value) {
  set_has_field60();
  field60_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field60)
}

// optional int32 field271 = 271 [default = -1];
 bool SpeedMessage1::has_field271() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
 void SpeedMessage1::set_has_field271() {
  _has_bits_[0] |= 0x10000000u;
}
 void SpeedMessage1::clear_has_field271() {
  _has_bits_[0] &= ~0x10000000u;
}
 void SpeedMessage1::clear_field271() {
  field271_ = -1;
  clear_has_field271();
}
 ::google::protobuf::int32 SpeedMessage1::field271() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field271)
  return field271_;
}
 void SpeedMessage1::set_field271(::google::protobuf::int32 value) {
  set_has_field271();
  field271_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field271)
}

// optional int32 field272 = 272 [default = -1];
 bool SpeedMessage1::has_field272() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
 void SpeedMessage1::set_has_field272() {
  _has_bits_[0] |= 0x20000000u;
}
 void SpeedMessage1::clear_has_field272() {
  _has_bits_[0] &= ~0x20000000u;
}
 void SpeedMessage1::clear_field272() {
  field272_ = -1;
  clear_has_field272();
}
 ::google::protobuf::int32 SpeedMessage1::field272() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field272)
  return field272_;
}
 void SpeedMessage1::set_field272(::google::protobuf::int32 value) {
  set_has_field272();
  field272_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field272)
}

// optional int32 field150 = 150;
 bool SpeedMessage1::has_field150() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
 void SpeedMessage1::set_has_field150() {
  _has_bits_[0] |= 0x40000000u;
}
 void SpeedMessage1::clear_has_field150() {
  _has_bits_[0] &= ~0x40000000u;
}
 void SpeedMessage1::clear_field150() {
  field150_ = 0;
  clear_has_field150();
}
 ::google::protobuf::int32 SpeedMessage1::field150() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field150)
  return field150_;
}
 void SpeedMessage1::set_field150(::google::protobuf::int32 value) {
  set_has_field150();
  field150_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field150)
}

// optional int32 field23 = 23 [default = 0];
 bool SpeedMessage1::has_field23() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
 void SpeedMessage1::set_has_field23() {
  _has_bits_[0] |= 0x80000000u;
}
 void SpeedMessage1::clear_has_field23() {
  _has_bits_[0] &= ~0x80000000u;
}
 void SpeedMessage1::clear_field23() {
  field23_ = 0;
  clear_has_field23();
}
 ::google::protobuf::int32 SpeedMessage1::field23() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field23)
  return field23_;
}
 void SpeedMessage1::set_field23(::google::protobuf::int32 value) {
  set_has_field23();
  field23_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field23)
}

// optional bool field24 = 24 [default = false];
 bool SpeedMessage1::has_field24() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
 void SpeedMessage1::set_has_field24() {
  _has_bits_[1] |= 0x00000001u;
}
 void SpeedMessage1::clear_has_field24() {
  _has_bits_[1] &= ~0x00000001u;
}
 void SpeedMessage1::clear_field24() {
  field24_ = false;
  clear_has_field24();
}
 bool SpeedMessage1::field24() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field24)
  return field24_;
}
 void SpeedMessage1::set_field24(bool value) {
  set_has_field24();
  field24_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field24)
}

// optional int32 field25 = 25 [default = 0];
 bool SpeedMessage1::has_field25() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
 void SpeedMessage1::set_has_field25() {
  _has_bits_[1] |= 0x00000002u;
}
 void SpeedMessage1::clear_has_field25() {
  _has_bits_[1] &= ~0x00000002u;
}
 void SpeedMessage1::clear_field25() {
  field25_ = 0;
  clear_has_field25();
}
 ::google::protobuf::int32 SpeedMessage1::field25() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field25)
  return field25_;
}
 void SpeedMessage1::set_field25(::google::protobuf::int32 value) {
  set_has_field25();
  field25_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field25)
}

// optional .benchmarks.SpeedMessage1SubMessage field15 = 15;
 bool SpeedMessage1::has_field15() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
 void SpeedMessage1::set_has_field15() {
  _has_bits_[1] |= 0x00000004u;
}
 void SpeedMessage1::clear_has_field15() {
  _has_bits_[1] &= ~0x00000004u;
}
 void SpeedMessage1::clear_field15() {
  if (field15_ != NULL) field15_->::benchmarks::SpeedMessage1SubMessage::Clear();
  clear_has_field15();
}
 const ::benchmarks::SpeedMessage1SubMessage& SpeedMessage1::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field15)
  return field15_ != NULL ? *field15_ : *default_instance_->field15_;
}
 ::benchmarks::SpeedMessage1SubMessage* SpeedMessage1::mutable_field15() {
  set_has_field15();
  if (field15_ == NULL) {
    field15_ = new ::benchmarks::SpeedMessage1SubMessage;
  }
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field15)
  return field15_;
}
 ::benchmarks::SpeedMessage1SubMessage* SpeedMessage1::release_field15() {
  clear_has_field15();
  ::benchmarks::SpeedMessage1SubMessage* temp = field15_;
  field15_ = NULL;
  return temp;
}
 void SpeedMessage1::set_allocated_field15(::benchmarks::SpeedMessage1SubMessage* field15) {
  delete field15_;
  field15_ = field15;
  if (field15) {
    set_has_field15();
  } else {
    clear_has_field15();
  }
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field15)
}

// optional bool field78 = 78;
 bool SpeedMessage1::has_field78() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
 void SpeedMessage1::set_has_field78() {
  _has_bits_[1] |= 0x00000008u;
}
 void SpeedMessage1::clear_has_field78() {
  _has_bits_[1] &= ~0x00000008u;
}
 void SpeedMessage1::clear_field78() {
  field78_ = false;
  clear_has_field78();
}
 bool SpeedMessage1::field78() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field78)
  return field78_;
}
 void SpeedMessage1::set_field78(bool value) {
  set_has_field78();
  field78_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field78)
}

// optional int32 field67 = 67 [default = 0];
 bool SpeedMessage1::has_field67() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
 void SpeedMessage1::set_has_field67() {
  _has_bits_[1] |= 0x00000010u;
}
 void SpeedMessage1::clear_has_field67() {
  _has_bits_[1] &= ~0x00000010u;
}
 void SpeedMessage1::clear_field67() {
  field67_ = 0;
  clear_has_field67();
}
 ::google::protobuf::int32 SpeedMessage1::field67() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field67)
  return field67_;
}
 void SpeedMessage1::set_field67(::google::protobuf::int32 value) {
  set_has_field67();
  field67_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field67)
}

// optional int32 field68 = 68;
 bool SpeedMessage1::has_field68() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
 void SpeedMessage1::set_has_field68() {
  _has_bits_[1] |= 0x00000020u;
}
 void SpeedMessage1::clear_has_field68() {
  _has_bits_[1] &= ~0x00000020u;
}
 void SpeedMessage1::clear_field68() {
  field68_ = 0;
  clear_has_field68();
}
 ::google::protobuf::int32 SpeedMessage1::field68() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field68)
  return field68_;
}
 void SpeedMessage1::set_field68(::google::protobuf::int32 value) {
  set_has_field68();
  field68_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field68)
}

// optional int32 field128 = 128 [default = 0];
 bool SpeedMessage1::has_field128() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
 void SpeedMessage1::set_has_field128() {
  _has_bits_[1] |= 0x00000040u;
}
 void SpeedMessage1::clear_has_field128() {
  _has_bits_[1] &= ~0x00000040u;
}
 void SpeedMessage1::clear_field128() {
  field128_ = 0;
  clear_has_field128();
}
 ::google::protobuf::int32 SpeedMessage1::field128() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field128)
  return field128_;
}
 void SpeedMessage1::set_field128(::google::protobuf::int32 value) {
  set_has_field128();
  field128_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field128)
}

// optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
 bool SpeedMessage1::has_field129() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
 void SpeedMessage1::set_has_field129() {
  _has_bits_[1] |= 0x00000080u;
}
 void SpeedMessage1::clear_has_field129() {
  _has_bits_[1] &= ~0x00000080u;
}
 void SpeedMessage1::clear_field129() {
  field129_.ClearToDefaultNoArena(_default_field129_);
  clear_has_field129();
}
 const ::std::string& SpeedMessage1::field129() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field129)
  return field129_.GetNoArena(_default_field129_);
}
 void SpeedMessage1::set_field129(const ::std::string& value) {
  set_has_field129();
  field129_.SetNoArena(_default_field129_, value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field129)
}
 void SpeedMessage1::set_field129(const char* value) {
  set_has_field129();
  field129_.SetNoArena(_default_field129_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1.field129)
}
 void SpeedMessage1::set_field129(const char* value, size_t size) {
  set_has_field129();
  field129_.SetNoArena(_default_field129_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1.field129)
}
 ::std::string* SpeedMessage1::mutable_field129() {
  set_has_field129();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1.field129)
  return field129_.MutableNoArena(_default_field129_);
}
 ::std::string* SpeedMessage1::release_field129() {
  clear_has_field129();
  return field129_.ReleaseNoArena(_default_field129_);
}
 void SpeedMessage1::set_allocated_field129(::std::string* field129) {
  if (field129 != NULL) {
    set_has_field129();
  } else {
    clear_has_field129();
  }
  field129_.SetAllocatedNoArena(_default_field129_, field129);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1.field129)
}

// optional int32 field131 = 131 [default = 0];
 bool SpeedMessage1::has_field131() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
 void SpeedMessage1::set_has_field131() {
  _has_bits_[1] |= 0x00000100u;
}
 void SpeedMessage1::clear_has_field131() {
  _has_bits_[1] &= ~0x00000100u;
}
 void SpeedMessage1::clear_field131() {
  field131_ = 0;
  clear_has_field131();
}
 ::google::protobuf::int32 SpeedMessage1::field131() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1.field131)
  return field131_;
}
 void SpeedMessage1::set_field131(::google::protobuf::int32 value) {
  set_has_field131();
  field131_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1.field131)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SpeedMessage1SubMessage::kField1FieldNumber;
const int SpeedMessage1SubMessage::kField2FieldNumber;
const int SpeedMessage1SubMessage::kField3FieldNumber;
const int SpeedMessage1SubMessage::kField15FieldNumber;
const int SpeedMessage1SubMessage::kField12FieldNumber;
const int SpeedMessage1SubMessage::kField13FieldNumber;
const int SpeedMessage1SubMessage::kField14FieldNumber;
const int SpeedMessage1SubMessage::kField16FieldNumber;
const int SpeedMessage1SubMessage::kField19FieldNumber;
const int SpeedMessage1SubMessage::kField20FieldNumber;
const int SpeedMessage1SubMessage::kField28FieldNumber;
const int SpeedMessage1SubMessage::kField21FieldNumber;
const int SpeedMessage1SubMessage::kField22FieldNumber;
const int SpeedMessage1SubMessage::kField23FieldNumber;
const int SpeedMessage1SubMessage::kField206FieldNumber;
const int SpeedMessage1SubMessage::kField203FieldNumber;
const int SpeedMessage1SubMessage::kField204FieldNumber;
const int SpeedMessage1SubMessage::kField205FieldNumber;
const int SpeedMessage1SubMessage::kField207FieldNumber;
const int SpeedMessage1SubMessage::kField300FieldNumber;
#endif  // !_MSC_VER

SpeedMessage1SubMessage::SpeedMessage1SubMessage()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:benchmarks.SpeedMessage1SubMessage)
}

void SpeedMessage1SubMessage::InitAsDefaultInstance() {
}

SpeedMessage1SubMessage::SpeedMessage1SubMessage(const SpeedMessage1SubMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:benchmarks.SpeedMessage1SubMessage)
}

void SpeedMessage1SubMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field1_ = 0;
  field2_ = 0;
  field3_ = 0;
  field15_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field12_ = true;
  field13_ = GOOGLE_LONGLONG(0);
  field14_ = GOOGLE_LONGLONG(0);
  field16_ = 0;
  field19_ = 2;
  field20_ = true;
  field28_ = true;
  field21_ = GOOGLE_ULONGLONG(0);
  field22_ = 0;
  field23_ = false;
  field206_ = false;
  field203_ = 0u;
  field204_ = 0;
  field205_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field207_ = GOOGLE_ULONGLONG(0);
  field300_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpeedMessage1SubMessage::~SpeedMessage1SubMessage() {
  // @@protoc_insertion_point(destructor:benchmarks.SpeedMessage1SubMessage)
  SharedDtor();
}

void SpeedMessage1SubMessage::SharedDtor() {
  field15_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field205_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SpeedMessage1SubMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedMessage1SubMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpeedMessage1SubMessage_descriptor_;
}

const SpeedMessage1SubMessage& SpeedMessage1SubMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_5fspeed_2eproto();
  return *default_instance_;
}

SpeedMessage1SubMessage* SpeedMessage1SubMessage::default_instance_ = NULL;

SpeedMessage1SubMessage* SpeedMessage1SubMessage::New(::google::protobuf::Arena* arena) const {
  SpeedMessage1SubMessage* n = new SpeedMessage1SubMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpeedMessage1SubMessage::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpeedMessage1SubMessage*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(field1_, field2_);
    ZR_(field3_, field14_);
    if (has_field15()) {
      field15_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field12_ = true;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(field23_, field203_);
    field19_ = 2;
    field20_ = true;
    field28_ = true;
  }
  if (_has_bits_[16 / 32] & 983040) {
    ZR_(field207_, field300_);
    field204_ = 0;
    if (has_field205()) {
      field205_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpeedMessage1SubMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:benchmarks.SpeedMessage1SubMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 field1 = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field1_)));
          set_has_field1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_field2;
        break;
      }

      // optional int32 field2 = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_field2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field2_)));
          set_has_field2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_field3;
        break;
      }

      // optional int32 field3 = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_field3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field3_)));
          set_has_field3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_field12;
        break;
      }

      // optional bool field12 = 12 [default = true];
      case 12: {
        if (tag == 96) {
         parse_field12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field12_)));
          set_has_field12();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_field13;
        break;
      }

      // optional int64 field13 = 13;
      case 13: {
        if (tag == 104) {
         parse_field13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field13_)));
          set_has_field13();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_field14;
        break;
      }

      // optional int64 field14 = 14;
      case 14: {
        if (tag == 112) {
         parse_field14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field14_)));
          set_has_field14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_field15;
        break;
      }

      // optional string field15 = 15;
      case 15: {
        if (tag == 122) {
         parse_field15:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field15()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field15().data(), this->field15().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1SubMessage.field15");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_field16;
        break;
      }

      // optional int32 field16 = 16;
      case 16: {
        if (tag == 128) {
         parse_field16:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field16_)));
          set_has_field16();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_field19;
        break;
      }

      // optional int32 field19 = 19 [default = 2];
      case 19: {
        if (tag == 152) {
         parse_field19:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field19_)));
          set_has_field19();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_field20;
        break;
      }

      // optional bool field20 = 20 [default = true];
      case 20: {
        if (tag == 160) {
         parse_field20:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field20_)));
          set_has_field20();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_field21;
        break;
      }

      // optional fixed64 field21 = 21;
      case 21: {
        if (tag == 169) {
         parse_field21:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &field21_)));
          set_has_field21();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_field22;
        break;
      }

      // optional int32 field22 = 22;
      case 22: {
        if (tag == 176) {
         parse_field22:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field22_)));
          set_has_field22();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_field23;
        break;
      }

      // optional bool field23 = 23 [default = false];
      case 23: {
        if (tag == 184) {
         parse_field23:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field23_)));
          set_has_field23();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_field28;
        break;
      }

      // optional bool field28 = 28 [default = true];
      case 28: {
        if (tag == 224) {
         parse_field28:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field28_)));
          set_has_field28();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1629)) goto parse_field203;
        break;
      }

      // optional fixed32 field203 = 203;
      case 203: {
        if (tag == 1629) {
         parse_field203:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &field203_)));
          set_has_field203();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1632)) goto parse_field204;
        break;
      }

      // optional int32 field204 = 204;
      case 204: {
        if (tag == 1632) {
         parse_field204:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field204_)));
          set_has_field204();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1642)) goto parse_field205;
        break;
      }

      // optional string field205 = 205;
      case 205: {
        if (tag == 1642) {
         parse_field205:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field205()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field205().data(), this->field205().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage1SubMessage.field205");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1648)) goto parse_field206;
        break;
      }

      // optional bool field206 = 206 [default = false];
      case 206: {
        if (tag == 1648) {
         parse_field206:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field206_)));
          set_has_field206();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1656)) goto parse_field207;
        break;
      }

      // optional uint64 field207 = 207;
      case 207: {
        if (tag == 1656) {
         parse_field207:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &field207_)));
          set_has_field207();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2400)) goto parse_field300;
        break;
      }

      // optional uint64 field300 = 300;
      case 300: {
        if (tag == 2400) {
         parse_field300:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &field300_)));
          set_has_field300();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:benchmarks.SpeedMessage1SubMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:benchmarks.SpeedMessage1SubMessage)
  return false;
#undef DO_
}

void SpeedMessage1SubMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:benchmarks.SpeedMessage1SubMessage)
  // optional int32 field1 = 1 [default = 0];
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->field1(), output);
  }

  // optional int32 field2 = 2 [default = 0];
  if (has_field2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->field2(), output);
  }

  // optional int32 field3 = 3 [default = 0];
  if (has_field3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->field3(), output);
  }

  // optional bool field12 = 12 [default = true];
  if (has_field12()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->field12(), output);
  }

  // optional int64 field13 = 13;
  if (has_field13()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->field13(), output);
  }

  // optional int64 field14 = 14;
  if (has_field14()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->field14(), output);
  }

  // optional string field15 = 15;
  if (has_field15()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field15().data(), this->field15().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1SubMessage.field15");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->field15(), output);
  }

  // optional int32 field16 = 16;
  if (has_field16()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->field16(), output);
  }

  // optional int32 field19 = 19 [default = 2];
  if (has_field19()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->field19(), output);
  }

  // optional bool field20 = 20 [default = true];
  if (has_field20()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->field20(), output);
  }

  // optional fixed64 field21 = 21;
  if (has_field21()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(21, this->field21(), output);
  }

  // optional int32 field22 = 22;
  if (has_field22()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->field22(), output);
  }

  // optional bool field23 = 23 [default = false];
  if (has_field23()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->field23(), output);
  }

  // optional bool field28 = 28 [default = true];
  if (has_field28()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->field28(), output);
  }

  // optional fixed32 field203 = 203;
  if (has_field203()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(203, this->field203(), output);
  }

  // optional int32 field204 = 204;
  if (has_field204()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(204, this->field204(), output);
  }

  // optional string field205 = 205;
  if (has_field205()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field205().data(), this->field205().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1SubMessage.field205");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      205, this->field205(), output);
  }

  // optional bool field206 = 206 [default = false];
  if (has_field206()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(206, this->field206(), output);
  }

  // optional uint64 field207 = 207;
  if (has_field207()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(207, this->field207(), output);
  }

  // optional uint64 field300 = 300;
  if (has_field300()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(300, this->field300(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:benchmarks.SpeedMessage1SubMessage)
}

::google::protobuf::uint8* SpeedMessage1SubMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:benchmarks.SpeedMessage1SubMessage)
  // optional int32 field1 = 1 [default = 0];
  if (has_field1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->field1(), target);
  }

  // optional int32 field2 = 2 [default = 0];
  if (has_field2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->field2(), target);
  }

  // optional int32 field3 = 3 [default = 0];
  if (has_field3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->field3(), target);
  }

  // optional bool field12 = 12 [default = true];
  if (has_field12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->field12(), target);
  }

  // optional int64 field13 = 13;
  if (has_field13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->field13(), target);
  }

  // optional int64 field14 = 14;
  if (has_field14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->field14(), target);
  }

  // optional string field15 = 15;
  if (has_field15()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field15().data(), this->field15().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1SubMessage.field15");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->field15(), target);
  }

  // optional int32 field16 = 16;
  if (has_field16()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->field16(), target);
  }

  // optional int32 field19 = 19 [default = 2];
  if (has_field19()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->field19(), target);
  }

  // optional bool field20 = 20 [default = true];
  if (has_field20()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->field20(), target);
  }

  // optional fixed64 field21 = 21;
  if (has_field21()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(21, this->field21(), target);
  }

  // optional int32 field22 = 22;
  if (has_field22()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->field22(), target);
  }

  // optional bool field23 = 23 [default = false];
  if (has_field23()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->field23(), target);
  }

  // optional bool field28 = 28 [default = true];
  if (has_field28()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->field28(), target);
  }

  // optional fixed32 field203 = 203;
  if (has_field203()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(203, this->field203(), target);
  }

  // optional int32 field204 = 204;
  if (has_field204()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(204, this->field204(), target);
  }

  // optional string field205 = 205;
  if (has_field205()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field205().data(), this->field205().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage1SubMessage.field205");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        205, this->field205(), target);
  }

  // optional bool field206 = 206 [default = false];
  if (has_field206()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(206, this->field206(), target);
  }

  // optional uint64 field207 = 207;
  if (has_field207()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(207, this->field207(), target);
  }

  // optional uint64 field300 = 300;
  if (has_field300()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(300, this->field300(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:benchmarks.SpeedMessage1SubMessage)
  return target;
}

int SpeedMessage1SubMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 field1 = 1 [default = 0];
    if (has_field1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field1());
    }

    // optional int32 field2 = 2 [default = 0];
    if (has_field2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field2());
    }

    // optional int32 field3 = 3 [default = 0];
    if (has_field3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field3());
    }

    // optional string field15 = 15;
    if (has_field15()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field15());
    }

    // optional bool field12 = 12 [default = true];
    if (has_field12()) {
      total_size += 1 + 1;
    }

    // optional int64 field13 = 13;
    if (has_field13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field13());
    }

    // optional int64 field14 = 14;
    if (has_field14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field14());
    }

    // optional int32 field16 = 16;
    if (has_field16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field16());
    }

  }
  if (_has_bits_[8 / 32] & 65280) {
    // optional int32 field19 = 19 [default = 2];
    if (has_field19()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field19());
    }

    // optional bool field20 = 20 [default = true];
    if (has_field20()) {
      total_size += 2 + 1;
    }

    // optional bool field28 = 28 [default = true];
    if (has_field28()) {
      total_size += 2 + 1;
    }

    // optional fixed64 field21 = 21;
    if (has_field21()) {
      total_size += 2 + 8;
    }

    // optional int32 field22 = 22;
    if (has_field22()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field22());
    }

    // optional bool field23 = 23 [default = false];
    if (has_field23()) {
      total_size += 2 + 1;
    }

    // optional bool field206 = 206 [default = false];
    if (has_field206()) {
      total_size += 2 + 1;
    }

    // optional fixed32 field203 = 203;
    if (has_field203()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[16 / 32] & 983040) {
    // optional int32 field204 = 204;
    if (has_field204()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field204());
    }

    // optional string field205 = 205;
    if (has_field205()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field205());
    }

    // optional uint64 field207 = 207;
    if (has_field207()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->field207());
    }

    // optional uint64 field300 = 300;
    if (has_field300()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->field300());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedMessage1SubMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpeedMessage1SubMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpeedMessage1SubMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpeedMessage1SubMessage::MergeFrom(const SpeedMessage1SubMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      set_field1(from.field1());
    }
    if (from.has_field2()) {
      set_field2(from.field2());
    }
    if (from.has_field3()) {
      set_field3(from.field3());
    }
    if (from.has_field15()) {
      set_has_field15();
      field15_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field15_);
    }
    if (from.has_field12()) {
      set_field12(from.field12());
    }
    if (from.has_field13()) {
      set_field13(from.field13());
    }
    if (from.has_field14()) {
      set_field14(from.field14());
    }
    if (from.has_field16()) {
      set_field16(from.field16());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_field19()) {
      set_field19(from.field19());
    }
    if (from.has_field20()) {
      set_field20(from.field20());
    }
    if (from.has_field28()) {
      set_field28(from.field28());
    }
    if (from.has_field21()) {
      set_field21(from.field21());
    }
    if (from.has_field22()) {
      set_field22(from.field22());
    }
    if (from.has_field23()) {
      set_field23(from.field23());
    }
    if (from.has_field206()) {
      set_field206(from.field206());
    }
    if (from.has_field203()) {
      set_field203(from.field203());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_field204()) {
      set_field204(from.field204());
    }
    if (from.has_field205()) {
      set_has_field205();
      field205_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field205_);
    }
    if (from.has_field207()) {
      set_field207(from.field207());
    }
    if (from.has_field300()) {
      set_field300(from.field300());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpeedMessage1SubMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedMessage1SubMessage::CopyFrom(const SpeedMessage1SubMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedMessage1SubMessage::IsInitialized() const {

  return true;
}

void SpeedMessage1SubMessage::Swap(SpeedMessage1SubMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedMessage1SubMessage::InternalSwap(SpeedMessage1SubMessage* other) {
  std::swap(field1_, other->field1_);
  std::swap(field2_, other->field2_);
  std::swap(field3_, other->field3_);
  field15_.Swap(&other->field15_);
  std::swap(field12_, other->field12_);
  std::swap(field13_, other->field13_);
  std::swap(field14_, other->field14_);
  std::swap(field16_, other->field16_);
  std::swap(field19_, other->field19_);
  std::swap(field20_, other->field20_);
  std::swap(field28_, other->field28_);
  std::swap(field21_, other->field21_);
  std::swap(field22_, other->field22_);
  std::swap(field23_, other->field23_);
  std::swap(field206_, other->field206_);
  std::swap(field203_, other->field203_);
  std::swap(field204_, other->field204_);
  field205_.Swap(&other->field205_);
  std::swap(field207_, other->field207_);
  std::swap(field300_, other->field300_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpeedMessage1SubMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpeedMessage1SubMessage_descriptor_;
  metadata.reflection = SpeedMessage1SubMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpeedMessage1SubMessage

// optional int32 field1 = 1 [default = 0];
 bool SpeedMessage1SubMessage::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
 void SpeedMessage1SubMessage::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SpeedMessage1SubMessage::clear_field1() {
  field1_ = 0;
  clear_has_field1();
}
 ::google::protobuf::int32 SpeedMessage1SubMessage::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field1)
  return field1_;
}
 void SpeedMessage1SubMessage::set_field1(::google::protobuf::int32 value) {
  set_has_field1();
  field1_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field1)
}

// optional int32 field2 = 2 [default = 0];
 bool SpeedMessage1SubMessage::has_field2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field2() {
  _has_bits_[0] |= 0x00000002u;
}
 void SpeedMessage1SubMessage::clear_has_field2() {
  _has_bits_[0] &= ~0x00000002u;
}
 void SpeedMessage1SubMessage::clear_field2() {
  field2_ = 0;
  clear_has_field2();
}
 ::google::protobuf::int32 SpeedMessage1SubMessage::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field2)
  return field2_;
}
 void SpeedMessage1SubMessage::set_field2(::google::protobuf::int32 value) {
  set_has_field2();
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field2)
}

// optional int32 field3 = 3 [default = 0];
 bool SpeedMessage1SubMessage::has_field3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field3() {
  _has_bits_[0] |= 0x00000004u;
}
 void SpeedMessage1SubMessage::clear_has_field3() {
  _has_bits_[0] &= ~0x00000004u;
}
 void SpeedMessage1SubMessage::clear_field3() {
  field3_ = 0;
  clear_has_field3();
}
 ::google::protobuf::int32 SpeedMessage1SubMessage::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field3)
  return field3_;
}
 void SpeedMessage1SubMessage::set_field3(::google::protobuf::int32 value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field3)
}

// optional string field15 = 15;
 bool SpeedMessage1SubMessage::has_field15() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field15() {
  _has_bits_[0] |= 0x00000008u;
}
 void SpeedMessage1SubMessage::clear_has_field15() {
  _has_bits_[0] &= ~0x00000008u;
}
 void SpeedMessage1SubMessage::clear_field15() {
  field15_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field15();
}
 const ::std::string& SpeedMessage1SubMessage::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field15)
  return field15_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1SubMessage::set_field15(const ::std::string& value) {
  set_has_field15();
  field15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field15)
}
 void SpeedMessage1SubMessage::set_field15(const char* value) {
  set_has_field15();
  field15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1SubMessage.field15)
}
 void SpeedMessage1SubMessage::set_field15(const char* value, size_t size) {
  set_has_field15();
  field15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1SubMessage.field15)
}
 ::std::string* SpeedMessage1SubMessage::mutable_field15() {
  set_has_field15();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1SubMessage.field15)
  return field15_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1SubMessage::release_field15() {
  clear_has_field15();
  return field15_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1SubMessage::set_allocated_field15(::std::string* field15) {
  if (field15 != NULL) {
    set_has_field15();
  } else {
    clear_has_field15();
  }
  field15_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field15);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1SubMessage.field15)
}

// optional bool field12 = 12 [default = true];
 bool SpeedMessage1SubMessage::has_field12() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field12() {
  _has_bits_[0] |= 0x00000010u;
}
 void SpeedMessage1SubMessage::clear_has_field12() {
  _has_bits_[0] &= ~0x00000010u;
}
 void SpeedMessage1SubMessage::clear_field12() {
  field12_ = true;
  clear_has_field12();
}
 bool SpeedMessage1SubMessage::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field12)
  return field12_;
}
 void SpeedMessage1SubMessage::set_field12(bool value) {
  set_has_field12();
  field12_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field12)
}

// optional int64 field13 = 13;
 bool SpeedMessage1SubMessage::has_field13() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field13() {
  _has_bits_[0] |= 0x00000020u;
}
 void SpeedMessage1SubMessage::clear_has_field13() {
  _has_bits_[0] &= ~0x00000020u;
}
 void SpeedMessage1SubMessage::clear_field13() {
  field13_ = GOOGLE_LONGLONG(0);
  clear_has_field13();
}
 ::google::protobuf::int64 SpeedMessage1SubMessage::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field13)
  return field13_;
}
 void SpeedMessage1SubMessage::set_field13(::google::protobuf::int64 value) {
  set_has_field13();
  field13_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field13)
}

// optional int64 field14 = 14;
 bool SpeedMessage1SubMessage::has_field14() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field14() {
  _has_bits_[0] |= 0x00000040u;
}
 void SpeedMessage1SubMessage::clear_has_field14() {
  _has_bits_[0] &= ~0x00000040u;
}
 void SpeedMessage1SubMessage::clear_field14() {
  field14_ = GOOGLE_LONGLONG(0);
  clear_has_field14();
}
 ::google::protobuf::int64 SpeedMessage1SubMessage::field14() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field14)
  return field14_;
}
 void SpeedMessage1SubMessage::set_field14(::google::protobuf::int64 value) {
  set_has_field14();
  field14_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field14)
}

// optional int32 field16 = 16;
 bool SpeedMessage1SubMessage::has_field16() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field16() {
  _has_bits_[0] |= 0x00000080u;
}
 void SpeedMessage1SubMessage::clear_has_field16() {
  _has_bits_[0] &= ~0x00000080u;
}
 void SpeedMessage1SubMessage::clear_field16() {
  field16_ = 0;
  clear_has_field16();
}
 ::google::protobuf::int32 SpeedMessage1SubMessage::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field16)
  return field16_;
}
 void SpeedMessage1SubMessage::set_field16(::google::protobuf::int32 value) {
  set_has_field16();
  field16_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field16)
}

// optional int32 field19 = 19 [default = 2];
 bool SpeedMessage1SubMessage::has_field19() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field19() {
  _has_bits_[0] |= 0x00000100u;
}
 void SpeedMessage1SubMessage::clear_has_field19() {
  _has_bits_[0] &= ~0x00000100u;
}
 void SpeedMessage1SubMessage::clear_field19() {
  field19_ = 2;
  clear_has_field19();
}
 ::google::protobuf::int32 SpeedMessage1SubMessage::field19() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field19)
  return field19_;
}
 void SpeedMessage1SubMessage::set_field19(::google::protobuf::int32 value) {
  set_has_field19();
  field19_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field19)
}

// optional bool field20 = 20 [default = true];
 bool SpeedMessage1SubMessage::has_field20() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field20() {
  _has_bits_[0] |= 0x00000200u;
}
 void SpeedMessage1SubMessage::clear_has_field20() {
  _has_bits_[0] &= ~0x00000200u;
}
 void SpeedMessage1SubMessage::clear_field20() {
  field20_ = true;
  clear_has_field20();
}
 bool SpeedMessage1SubMessage::field20() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field20)
  return field20_;
}
 void SpeedMessage1SubMessage::set_field20(bool value) {
  set_has_field20();
  field20_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field20)
}

// optional bool field28 = 28 [default = true];
 bool SpeedMessage1SubMessage::has_field28() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field28() {
  _has_bits_[0] |= 0x00000400u;
}
 void SpeedMessage1SubMessage::clear_has_field28() {
  _has_bits_[0] &= ~0x00000400u;
}
 void SpeedMessage1SubMessage::clear_field28() {
  field28_ = true;
  clear_has_field28();
}
 bool SpeedMessage1SubMessage::field28() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field28)
  return field28_;
}
 void SpeedMessage1SubMessage::set_field28(bool value) {
  set_has_field28();
  field28_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field28)
}

// optional fixed64 field21 = 21;
 bool SpeedMessage1SubMessage::has_field21() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field21() {
  _has_bits_[0] |= 0x00000800u;
}
 void SpeedMessage1SubMessage::clear_has_field21() {
  _has_bits_[0] &= ~0x00000800u;
}
 void SpeedMessage1SubMessage::clear_field21() {
  field21_ = GOOGLE_ULONGLONG(0);
  clear_has_field21();
}
 ::google::protobuf::uint64 SpeedMessage1SubMessage::field21() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field21)
  return field21_;
}
 void SpeedMessage1SubMessage::set_field21(::google::protobuf::uint64 value) {
  set_has_field21();
  field21_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field21)
}

// optional int32 field22 = 22;
 bool SpeedMessage1SubMessage::has_field22() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field22() {
  _has_bits_[0] |= 0x00001000u;
}
 void SpeedMessage1SubMessage::clear_has_field22() {
  _has_bits_[0] &= ~0x00001000u;
}
 void SpeedMessage1SubMessage::clear_field22() {
  field22_ = 0;
  clear_has_field22();
}
 ::google::protobuf::int32 SpeedMessage1SubMessage::field22() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field22)
  return field22_;
}
 void SpeedMessage1SubMessage::set_field22(::google::protobuf::int32 value) {
  set_has_field22();
  field22_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field22)
}

// optional bool field23 = 23 [default = false];
 bool SpeedMessage1SubMessage::has_field23() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field23() {
  _has_bits_[0] |= 0x00002000u;
}
 void SpeedMessage1SubMessage::clear_has_field23() {
  _has_bits_[0] &= ~0x00002000u;
}
 void SpeedMessage1SubMessage::clear_field23() {
  field23_ = false;
  clear_has_field23();
}
 bool SpeedMessage1SubMessage::field23() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field23)
  return field23_;
}
 void SpeedMessage1SubMessage::set_field23(bool value) {
  set_has_field23();
  field23_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field23)
}

// optional bool field206 = 206 [default = false];
 bool SpeedMessage1SubMessage::has_field206() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field206() {
  _has_bits_[0] |= 0x00004000u;
}
 void SpeedMessage1SubMessage::clear_has_field206() {
  _has_bits_[0] &= ~0x00004000u;
}
 void SpeedMessage1SubMessage::clear_field206() {
  field206_ = false;
  clear_has_field206();
}
 bool SpeedMessage1SubMessage::field206() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field206)
  return field206_;
}
 void SpeedMessage1SubMessage::set_field206(bool value) {
  set_has_field206();
  field206_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field206)
}

// optional fixed32 field203 = 203;
 bool SpeedMessage1SubMessage::has_field203() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field203() {
  _has_bits_[0] |= 0x00008000u;
}
 void SpeedMessage1SubMessage::clear_has_field203() {
  _has_bits_[0] &= ~0x00008000u;
}
 void SpeedMessage1SubMessage::clear_field203() {
  field203_ = 0u;
  clear_has_field203();
}
 ::google::protobuf::uint32 SpeedMessage1SubMessage::field203() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field203)
  return field203_;
}
 void SpeedMessage1SubMessage::set_field203(::google::protobuf::uint32 value) {
  set_has_field203();
  field203_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field203)
}

// optional int32 field204 = 204;
 bool SpeedMessage1SubMessage::has_field204() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field204() {
  _has_bits_[0] |= 0x00010000u;
}
 void SpeedMessage1SubMessage::clear_has_field204() {
  _has_bits_[0] &= ~0x00010000u;
}
 void SpeedMessage1SubMessage::clear_field204() {
  field204_ = 0;
  clear_has_field204();
}
 ::google::protobuf::int32 SpeedMessage1SubMessage::field204() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field204)
  return field204_;
}
 void SpeedMessage1SubMessage::set_field204(::google::protobuf::int32 value) {
  set_has_field204();
  field204_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field204)
}

// optional string field205 = 205;
 bool SpeedMessage1SubMessage::has_field205() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field205() {
  _has_bits_[0] |= 0x00020000u;
}
 void SpeedMessage1SubMessage::clear_has_field205() {
  _has_bits_[0] &= ~0x00020000u;
}
 void SpeedMessage1SubMessage::clear_field205() {
  field205_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field205();
}
 const ::std::string& SpeedMessage1SubMessage::field205() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field205)
  return field205_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1SubMessage::set_field205(const ::std::string& value) {
  set_has_field205();
  field205_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field205)
}
 void SpeedMessage1SubMessage::set_field205(const char* value) {
  set_has_field205();
  field205_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage1SubMessage.field205)
}
 void SpeedMessage1SubMessage::set_field205(const char* value, size_t size) {
  set_has_field205();
  field205_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage1SubMessage.field205)
}
 ::std::string* SpeedMessage1SubMessage::mutable_field205() {
  set_has_field205();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage1SubMessage.field205)
  return field205_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage1SubMessage::release_field205() {
  clear_has_field205();
  return field205_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage1SubMessage::set_allocated_field205(::std::string* field205) {
  if (field205 != NULL) {
    set_has_field205();
  } else {
    clear_has_field205();
  }
  field205_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field205);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage1SubMessage.field205)
}

// optional uint64 field207 = 207;
 bool SpeedMessage1SubMessage::has_field207() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field207() {
  _has_bits_[0] |= 0x00040000u;
}
 void SpeedMessage1SubMessage::clear_has_field207() {
  _has_bits_[0] &= ~0x00040000u;
}
 void SpeedMessage1SubMessage::clear_field207() {
  field207_ = GOOGLE_ULONGLONG(0);
  clear_has_field207();
}
 ::google::protobuf::uint64 SpeedMessage1SubMessage::field207() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field207)
  return field207_;
}
 void SpeedMessage1SubMessage::set_field207(::google::protobuf::uint64 value) {
  set_has_field207();
  field207_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field207)
}

// optional uint64 field300 = 300;
 bool SpeedMessage1SubMessage::has_field300() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
 void SpeedMessage1SubMessage::set_has_field300() {
  _has_bits_[0] |= 0x00080000u;
}
 void SpeedMessage1SubMessage::clear_has_field300() {
  _has_bits_[0] &= ~0x00080000u;
}
 void SpeedMessage1SubMessage::clear_field300() {
  field300_ = GOOGLE_ULONGLONG(0);
  clear_has_field300();
}
 ::google::protobuf::uint64 SpeedMessage1SubMessage::field300() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage1SubMessage.field300)
  return field300_;
}
 void SpeedMessage1SubMessage::set_field300(::google::protobuf::uint64 value) {
  set_has_field300();
  field300_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage1SubMessage.field300)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SpeedMessage2_Group1::kField11FieldNumber;
const int SpeedMessage2_Group1::kField26FieldNumber;
const int SpeedMessage2_Group1::kField12FieldNumber;
const int SpeedMessage2_Group1::kField13FieldNumber;
const int SpeedMessage2_Group1::kField14FieldNumber;
const int SpeedMessage2_Group1::kField15FieldNumber;
const int SpeedMessage2_Group1::kField5FieldNumber;
const int SpeedMessage2_Group1::kField27FieldNumber;
const int SpeedMessage2_Group1::kField28FieldNumber;
const int SpeedMessage2_Group1::kField29FieldNumber;
const int SpeedMessage2_Group1::kField16FieldNumber;
const int SpeedMessage2_Group1::kField22FieldNumber;
const int SpeedMessage2_Group1::kField73FieldNumber;
const int SpeedMessage2_Group1::kField20FieldNumber;
const int SpeedMessage2_Group1::kField24FieldNumber;
const int SpeedMessage2_Group1::kField31FieldNumber;
#endif  // !_MSC_VER

SpeedMessage2_Group1::SpeedMessage2_Group1()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:benchmarks.SpeedMessage2.Group1)
}

void SpeedMessage2_Group1::InitAsDefaultInstance() {
  field31_ = const_cast< ::benchmarks::SpeedMessage2GroupedMessage*>(&::benchmarks::SpeedMessage2GroupedMessage::default_instance());
}

SpeedMessage2_Group1::SpeedMessage2_Group1(const SpeedMessage2_Group1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:benchmarks.SpeedMessage2.Group1)
}

void SpeedMessage2_Group1::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field11_ = 0;
  field26_ = 0;
  field12_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field13_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field15_ = GOOGLE_ULONGLONG(0);
  field5_ = 0;
  field27_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field28_ = 0;
  field29_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field16_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field20_ = 0;
  field24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field31_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpeedMessage2_Group1::~SpeedMessage2_Group1() {
  // @@protoc_insertion_point(destructor:benchmarks.SpeedMessage2.Group1)
  SharedDtor();
}

void SpeedMessage2_Group1::SharedDtor() {
  field12_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field13_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field27_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field29_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field16_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field24_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete field31_;
  }
}

void SpeedMessage2_Group1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedMessage2_Group1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpeedMessage2_Group1_descriptor_;
}

const SpeedMessage2_Group1& SpeedMessage2_Group1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_5fspeed_2eproto();
  return *default_instance_;
}

SpeedMessage2_Group1* SpeedMessage2_Group1::default_instance_ = NULL;

SpeedMessage2_Group1* SpeedMessage2_Group1::New(::google::protobuf::Arena* arena) const {
  SpeedMessage2_Group1* n = new SpeedMessage2_Group1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpeedMessage2_Group1::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpeedMessage2_Group1*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 239) {
    ZR_(field11_, field26_);
    if (has_field12()) {
      field12_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_field13()) {
      field13_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field15_ = GOOGLE_ULONGLONG(0);
    field5_ = 0;
    if (has_field27()) {
      field27_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 59136) {
    field28_ = 0;
    if (has_field29()) {
      field29_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_field16()) {
      field16_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field20_ = 0;
    if (has_field24()) {
      field24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_field31()) {
      if (field31_ != NULL) field31_->::benchmarks::SpeedMessage2GroupedMessage::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  field14_.Clear();
  field22_.Clear();
  field73_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpeedMessage2_Group1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:benchmarks.SpeedMessage2.Group1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 field5 = 5;
      case 5: {
        if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field5_)));
          set_has_field5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_field11;
        break;
      }

      // required float field11 = 11;
      case 11: {
        if (tag == 93) {
         parse_field11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field11_)));
          set_has_field11();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_field12;
        break;
      }

      // optional string field12 = 12;
      case 12: {
        if (tag == 98) {
         parse_field12:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field12()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field12().data(), this->field12().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field12");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_field13;
        break;
      }

      // optional string field13 = 13;
      case 13: {
        if (tag == 106) {
         parse_field13:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field13()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field13().data(), this->field13().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field13");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_field14;
        break;
      }

      // repeated string field14 = 14;
      case 14: {
        if (tag == 114) {
         parse_field14:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_field14()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field14(this->field14_size() - 1).data(),
            this->field14(this->field14_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field14");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_field14;
        if (input->ExpectTag(120)) goto parse_field15;
        break;
      }

      // required uint64 field15 = 15;
      case 15: {
        if (tag == 120) {
         parse_field15:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &field15_)));
          set_has_field15();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_field16;
        break;
      }

      // optional string field16 = 16;
      case 16: {
        if (tag == 130) {
         parse_field16:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field16()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field16().data(), this->field16().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field16");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_field20;
        break;
      }

      // optional int32 field20 = 20 [default = 0];
      case 20: {
        if (tag == 160) {
         parse_field20:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field20_)));
          set_has_field20();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_field22;
        break;
      }

      // repeated string field22 = 22;
      case 22: {
        if (tag == 178) {
         parse_field22:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_field22()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field22(this->field22_size() - 1).data(),
            this->field22(this->field22_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field22");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_field22;
        if (input->ExpectTag(194)) goto parse_field24;
        break;
      }

      // optional string field24 = 24;
      case 24: {
        if (tag == 194) {
         parse_field24:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field24()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field24().data(), this->field24().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field24");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(213)) goto parse_field26;
        break;
      }

      // optional float field26 = 26;
      case 26: {
        if (tag == 213) {
         parse_field26:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field26_)));
          set_has_field26();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_field27;
        break;
      }

      // optional string field27 = 27;
      case 27: {
        if (tag == 218) {
         parse_field27:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field27()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field27().data(), this->field27().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field27");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_field28;
        break;
      }

      // optional int32 field28 = 28;
      case 28: {
        if (tag == 224) {
         parse_field28:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field28_)));
          set_has_field28();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_field29;
        break;
      }

      // optional string field29 = 29;
      case 29: {
        if (tag == 234) {
         parse_field29:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field29()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field29().data(), this->field29().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.Group1.field29");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_field31;
        break;
      }

      // optional .benchmarks.SpeedMessage2GroupedMessage field31 = 31;
      case 31: {
        if (tag == 250) {
         parse_field31:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field31()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(584)) goto parse_field73;
        break;
      }

      // repeated int32 field73 = 73;
      case 73: {
        if (tag == 584) {
         parse_field73:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 584, input, this->mutable_field73())));
        } else if (tag == 586) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_field73())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(584)) goto parse_field73;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:benchmarks.SpeedMessage2.Group1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:benchmarks.SpeedMessage2.Group1)
  return false;
#undef DO_
}

void SpeedMessage2_Group1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:benchmarks.SpeedMessage2.Group1)
  // optional int32 field5 = 5;
  if (has_field5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->field5(), output);
  }

  // required float field11 = 11;
  if (has_field11()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->field11(), output);
  }

  // optional string field12 = 12;
  if (has_field12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field12().data(), this->field12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field12");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->field12(), output);
  }

  // optional string field13 = 13;
  if (has_field13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field13().data(), this->field13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field13");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->field13(), output);
  }

  // repeated string field14 = 14;
  for (int i = 0; i < this->field14_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->field14(i).data(), this->field14(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "benchmarks.SpeedMessage2.Group1.field14");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->field14(i), output);
  }

  // required uint64 field15 = 15;
  if (has_field15()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->field15(), output);
  }

  // optional string field16 = 16;
  if (has_field16()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field16().data(), this->field16().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field16");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->field16(), output);
  }

  // optional int32 field20 = 20 [default = 0];
  if (has_field20()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->field20(), output);
  }

  // repeated string field22 = 22;
  for (int i = 0; i < this->field22_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->field22(i).data(), this->field22(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "benchmarks.SpeedMessage2.Group1.field22");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->field22(i), output);
  }

  // optional string field24 = 24;
  if (has_field24()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field24().data(), this->field24().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field24");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->field24(), output);
  }

  // optional float field26 = 26;
  if (has_field26()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(26, this->field26(), output);
  }

  // optional string field27 = 27;
  if (has_field27()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field27().data(), this->field27().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field27");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->field27(), output);
  }

  // optional int32 field28 = 28;
  if (has_field28()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->field28(), output);
  }

  // optional string field29 = 29;
  if (has_field29()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field29().data(), this->field29().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field29");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->field29(), output);
  }

  // optional .benchmarks.SpeedMessage2GroupedMessage field31 = 31;
  if (has_field31()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *this->field31_, output);
  }

  // repeated int32 field73 = 73;
  for (int i = 0; i < this->field73_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      73, this->field73(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:benchmarks.SpeedMessage2.Group1)
}

::google::protobuf::uint8* SpeedMessage2_Group1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:benchmarks.SpeedMessage2.Group1)
  // optional int32 field5 = 5;
  if (has_field5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->field5(), target);
  }

  // required float field11 = 11;
  if (has_field11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->field11(), target);
  }

  // optional string field12 = 12;
  if (has_field12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field12().data(), this->field12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field12");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->field12(), target);
  }

  // optional string field13 = 13;
  if (has_field13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field13().data(), this->field13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field13");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->field13(), target);
  }

  // repeated string field14 = 14;
  for (int i = 0; i < this->field14_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field14(i).data(), this->field14(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field14");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->field14(i), target);
  }

  // required uint64 field15 = 15;
  if (has_field15()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->field15(), target);
  }

  // optional string field16 = 16;
  if (has_field16()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field16().data(), this->field16().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field16");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->field16(), target);
  }

  // optional int32 field20 = 20 [default = 0];
  if (has_field20()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->field20(), target);
  }

  // repeated string field22 = 22;
  for (int i = 0; i < this->field22_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field22(i).data(), this->field22(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field22");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(22, this->field22(i), target);
  }

  // optional string field24 = 24;
  if (has_field24()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field24().data(), this->field24().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field24");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->field24(), target);
  }

  // optional float field26 = 26;
  if (has_field26()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(26, this->field26(), target);
  }

  // optional string field27 = 27;
  if (has_field27()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field27().data(), this->field27().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field27");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->field27(), target);
  }

  // optional int32 field28 = 28;
  if (has_field28()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->field28(), target);
  }

  // optional string field29 = 29;
  if (has_field29()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field29().data(), this->field29().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.Group1.field29");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->field29(), target);
  }

  // optional .benchmarks.SpeedMessage2GroupedMessage field31 = 31;
  if (has_field31()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, *this->field31_, target);
  }

  // repeated int32 field73 = 73;
  for (int i = 0; i < this->field73_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(73, this->field73(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:benchmarks.SpeedMessage2.Group1)
  return target;
}

int SpeedMessage2_Group1::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_field11()) {
    // required float field11 = 11;
    total_size += 1 + 4;
  }

  if (has_field15()) {
    // required uint64 field15 = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->field15());
  }

  return total_size;
}
int SpeedMessage2_Group1::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000021) ^ 0x00000021) == 0) {  // All required fields are present.
    // required float field11 = 11;
    total_size += 1 + 4;

    // required uint64 field15 = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->field15());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 206) {
    // optional float field26 = 26;
    if (has_field26()) {
      total_size += 2 + 4;
    }

    // optional string field12 = 12;
    if (has_field12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field12());
    }

    // optional string field13 = 13;
    if (has_field13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field13());
    }

    // optional int32 field5 = 5;
    if (has_field5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field5());
    }

    // optional string field27 = 27;
    if (has_field27()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field27());
    }

  }
  if (_has_bits_[8 / 32] & 59136) {
    // optional int32 field28 = 28;
    if (has_field28()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field28());
    }

    // optional string field29 = 29;
    if (has_field29()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field29());
    }

    // optional string field16 = 16;
    if (has_field16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field16());
    }

    // optional int32 field20 = 20 [default = 0];
    if (has_field20()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field20());
    }

    // optional string field24 = 24;
    if (has_field24()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field24());
    }

    // optional .benchmarks.SpeedMessage2GroupedMessage field31 = 31;
    if (has_field31()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->field31_);
    }

  }
  // repeated string field14 = 14;
  total_size += 1 * this->field14_size();
  for (int i = 0; i < this->field14_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->field14(i));
  }

  // repeated string field22 = 22;
  total_size += 2 * this->field22_size();
  for (int i = 0; i < this->field22_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->field22(i));
  }

  // repeated int32 field73 = 73;
  {
    int data_size = 0;
    for (int i = 0; i < this->field73_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->field73(i));
    }
    total_size += 2 * this->field73_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedMessage2_Group1::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpeedMessage2_Group1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpeedMessage2_Group1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpeedMessage2_Group1::MergeFrom(const SpeedMessage2_Group1& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  field14_.MergeFrom(from.field14_);
  field22_.MergeFrom(from.field22_);
  field73_.MergeFrom(from.field73_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field11()) {
      set_field11(from.field11());
    }
    if (from.has_field26()) {
      set_field26(from.field26());
    }
    if (from.has_field12()) {
      set_has_field12();
      field12_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field12_);
    }
    if (from.has_field13()) {
      set_has_field13();
      field13_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field13_);
    }
    if (from.has_field15()) {
      set_field15(from.field15());
    }
    if (from.has_field5()) {
      set_field5(from.field5());
    }
    if (from.has_field27()) {
      set_has_field27();
      field27_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field27_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_field28()) {
      set_field28(from.field28());
    }
    if (from.has_field29()) {
      set_has_field29();
      field29_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field29_);
    }
    if (from.has_field16()) {
      set_has_field16();
      field16_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field16_);
    }
    if (from.has_field20()) {
      set_field20(from.field20());
    }
    if (from.has_field24()) {
      set_has_field24();
      field24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field24_);
    }
    if (from.has_field31()) {
      mutable_field31()->::benchmarks::SpeedMessage2GroupedMessage::MergeFrom(from.field31());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpeedMessage2_Group1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedMessage2_Group1::CopyFrom(const SpeedMessage2_Group1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedMessage2_Group1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  return true;
}

void SpeedMessage2_Group1::Swap(SpeedMessage2_Group1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedMessage2_Group1::InternalSwap(SpeedMessage2_Group1* other) {
  std::swap(field11_, other->field11_);
  std::swap(field26_, other->field26_);
  field12_.Swap(&other->field12_);
  field13_.Swap(&other->field13_);
  field14_.UnsafeArenaSwap(&other->field14_);
  std::swap(field15_, other->field15_);
  std::swap(field5_, other->field5_);
  field27_.Swap(&other->field27_);
  std::swap(field28_, other->field28_);
  field29_.Swap(&other->field29_);
  field16_.Swap(&other->field16_);
  field22_.UnsafeArenaSwap(&other->field22_);
  field73_.UnsafeArenaSwap(&other->field73_);
  std::swap(field20_, other->field20_);
  field24_.Swap(&other->field24_);
  std::swap(field31_, other->field31_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpeedMessage2_Group1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpeedMessage2_Group1_descriptor_;
  metadata.reflection = SpeedMessage2_Group1_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SpeedMessage2::kField1FieldNumber;
const int SpeedMessage2::kField3FieldNumber;
const int SpeedMessage2::kField4FieldNumber;
const int SpeedMessage2::kField30FieldNumber;
const int SpeedMessage2::kField75FieldNumber;
const int SpeedMessage2::kField6FieldNumber;
const int SpeedMessage2::kField2FieldNumber;
const int SpeedMessage2::kField21FieldNumber;
const int SpeedMessage2::kField71FieldNumber;
const int SpeedMessage2::kField25FieldNumber;
const int SpeedMessage2::kField109FieldNumber;
const int SpeedMessage2::kField210FieldNumber;
const int SpeedMessage2::kField211FieldNumber;
const int SpeedMessage2::kField212FieldNumber;
const int SpeedMessage2::kField213FieldNumber;
const int SpeedMessage2::kField216FieldNumber;
const int SpeedMessage2::kField217FieldNumber;
const int SpeedMessage2::kField218FieldNumber;
const int SpeedMessage2::kField220FieldNumber;
const int SpeedMessage2::kField221FieldNumber;
const int SpeedMessage2::kField222FieldNumber;
const int SpeedMessage2::kField63FieldNumber;
const int SpeedMessage2::kGroup1FieldNumber;
const int SpeedMessage2::kField128FieldNumber;
const int SpeedMessage2::kField131FieldNumber;
const int SpeedMessage2::kField127FieldNumber;
const int SpeedMessage2::kField129FieldNumber;
const int SpeedMessage2::kField130FieldNumber;
const int SpeedMessage2::kField205FieldNumber;
const int SpeedMessage2::kField206FieldNumber;
#endif  // !_MSC_VER

SpeedMessage2::SpeedMessage2()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:benchmarks.SpeedMessage2)
}

void SpeedMessage2::InitAsDefaultInstance() {
}

SpeedMessage2::SpeedMessage2(const SpeedMessage2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:benchmarks.SpeedMessage2)
}

void SpeedMessage2::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field3_ = GOOGLE_LONGLONG(0);
  field4_ = GOOGLE_LONGLONG(0);
  field30_ = GOOGLE_LONGLONG(0);
  field75_ = false;
  field6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field21_ = 0;
  field71_ = 0;
  field25_ = 0;
  field109_ = 0;
  field210_ = 0;
  field211_ = 0;
  field212_ = 0;
  field213_ = 0;
  field216_ = 0;
  field217_ = 0;
  field218_ = 0;
  field220_ = 0;
  field221_ = 0;
  field222_ = 0;
  field63_ = 0;
  field131_ = GOOGLE_LONGLONG(0);
  field129_ = 0;
  field205_ = false;
  field206_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpeedMessage2::~SpeedMessage2() {
  // @@protoc_insertion_point(destructor:benchmarks.SpeedMessage2)
  SharedDtor();
}

void SpeedMessage2::SharedDtor() {
  field1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SpeedMessage2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedMessage2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpeedMessage2_descriptor_;
}

const SpeedMessage2& SpeedMessage2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_5fspeed_2eproto();
  return *default_instance_;
}

SpeedMessage2* SpeedMessage2::default_instance_ = NULL;

SpeedMessage2* SpeedMessage2::New(::google::protobuf::Arena* arena) const {
  SpeedMessage2* n = new SpeedMessage2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpeedMessage2::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpeedMessage2*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(field3_, field30_);
    if (has_field1()) {
      field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field75_ = false;
    if (has_field6()) {
      field6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_field2()) {
      field2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    field21_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(field71_, field216_);
  }
  if (_has_bits_[16 / 32] & 4128768) {
    ZR_(field217_, field222_);
    field63_ = 0;
  }
  if (_has_bits_[24 / 32] & 889192448) {
    ZR_(field205_, field206_);
    field131_ = GOOGLE_LONGLONG(0);
    field129_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  group1_.Clear();
  field128_.Clear();
  field127_.Clear();
  field130_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpeedMessage2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:benchmarks.SpeedMessage2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string field1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field1().data(), this->field1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.field1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field2;
        break;
      }

      // optional bytes field2 = 2;
      case 2: {
        if (tag == 18) {
         parse_field2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_field2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_field3;
        break;
      }

      // optional int64 field3 = 3;
      case 3: {
        if (tag == 24) {
         parse_field3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field3_)));
          set_has_field3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_field4;
        break;
      }

      // optional int64 field4 = 4;
      case 4: {
        if (tag == 32) {
         parse_field4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field4_)));
          set_has_field4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_field6;
        break;
      }

      // optional string field6 = 6;
      case 6: {
        if (tag == 50) {
         parse_field6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field6().data(), this->field6().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.field6");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(83)) goto parse_group1;
        break;
      }

      // repeated group Group1 = 10 {
      case 10: {
        if (tag == 83) {
         parse_group1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                10, input, add_group1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(83)) goto parse_group1;
        if (input->ExpectTag(168)) goto parse_field21;
        break;
      }

      // optional int32 field21 = 21 [default = 0];
      case 21: {
        if (tag == 168) {
         parse_field21:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field21_)));
          set_has_field21();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(205)) goto parse_field25;
        break;
      }

      // optional float field25 = 25;
      case 25: {
        if (tag == 205) {
         parse_field25:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field25_)));
          set_has_field25();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_field30;
        break;
      }

      // optional int64 field30 = 30;
      case 30: {
        if (tag == 240) {
         parse_field30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field30_)));
          set_has_field30();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(504)) goto parse_field63;
        break;
      }

      // optional int32 field63 = 63;
      case 63: {
        if (tag == 504) {
         parse_field63:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field63_)));
          set_has_field63();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(568)) goto parse_field71;
        break;
      }

      // optional int32 field71 = 71;
      case 71: {
        if (tag == 568) {
         parse_field71:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field71_)));
          set_has_field71();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(600)) goto parse_field75;
        break;
      }

      // optional bool field75 = 75 [default = false];
      case 75: {
        if (tag == 600) {
         parse_field75:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field75_)));
          set_has_field75();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(872)) goto parse_field109;
        break;
      }

      // optional int32 field109 = 109 [default = 0];
      case 109: {
        if (tag == 872) {
         parse_field109:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field109_)));
          set_has_field109();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1018)) goto parse_field127;
        break;
      }

      // repeated string field127 = 127;
      case 127: {
        if (tag == 1018) {
         parse_field127:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_field127()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field127(this->field127_size() - 1).data(),
            this->field127(this->field127_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.field127");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1018)) goto parse_field127;
        if (input->ExpectTag(1026)) goto parse_field128;
        break;
      }

      // repeated string field128 = 128;
      case 128: {
        if (tag == 1026) {
         parse_field128:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_field128()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field128(this->field128_size() - 1).data(),
            this->field128(this->field128_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "benchmarks.SpeedMessage2.field128");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1026)) goto parse_field128;
        if (input->ExpectTag(1032)) goto parse_field129;
        break;
      }

      // optional int32 field129 = 129;
      case 129: {
        if (tag == 1032) {
         parse_field129:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field129_)));
          set_has_field129();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1040)) goto parse_field130;
        break;
      }

      // repeated int64 field130 = 130;
      case 130: {
        if (tag == 1040) {
         parse_field130:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 1040, input, this->mutable_field130())));
        } else if (tag == 1042) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_field130())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1040)) goto parse_field130;
        if (input->ExpectTag(1048)) goto parse_field131;
        break;
      }

      // optional int64 field131 = 131;
      case 131: {
        if (tag == 1048) {
         parse_field131:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field131_)));
          set_has_field131();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1640)) goto parse_field205;
        break;
      }

      // optional bool field205 = 205 [default = false];
      case 205: {
        if (tag == 1640) {
         parse_field205:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field205_)));
          set_has_field205();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1648)) goto parse_field206;
        break;
      }

      // optional bool field206 = 206 [default = false];
      case 206: {
        if (tag == 1648) {
         parse_field206:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field206_)));
          set_has_field206();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1680)) goto parse_field210;
        break;
      }

      // optional int32 field210 = 210 [default = 0];
      case 210: {
        if (tag == 1680) {
         parse_field210:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field210_)));
          set_has_field210();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1688)) goto parse_field211;
        break;
      }

      // optional int32 field211 = 211 [default = 0];
      case 211: {
        if (tag == 1688) {
         parse_field211:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field211_)));
          set_has_field211();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1696)) goto parse_field212;
        break;
      }

      // optional int32 field212 = 212 [default = 0];
      case 212: {
        if (tag == 1696) {
         parse_field212:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field212_)));
          set_has_field212();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1704)) goto parse_field213;
        break;
      }

      // optional int32 field213 = 213 [default = 0];
      case 213: {
        if (tag == 1704) {
         parse_field213:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field213_)));
          set_has_field213();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1728)) goto parse_field216;
        break;
      }

      // optional int32 field216 = 216 [default = 0];
      case 216: {
        if (tag == 1728) {
         parse_field216:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field216_)));
          set_has_field216();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1736)) goto parse_field217;
        break;
      }

      // optional int32 field217 = 217 [default = 0];
      case 217: {
        if (tag == 1736) {
         parse_field217:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field217_)));
          set_has_field217();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1744)) goto parse_field218;
        break;
      }

      // optional int32 field218 = 218 [default = 0];
      case 218: {
        if (tag == 1744) {
         parse_field218:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field218_)));
          set_has_field218();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1760)) goto parse_field220;
        break;
      }

      // optional int32 field220 = 220 [default = 0];
      case 220: {
        if (tag == 1760) {
         parse_field220:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field220_)));
          set_has_field220();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1768)) goto parse_field221;
        break;
      }

      // optional int32 field221 = 221 [default = 0];
      case 221: {
        if (tag == 1768) {
         parse_field221:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field221_)));
          set_has_field221();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1781)) goto parse_field222;
        break;
      }

      // optional float field222 = 222 [default = 0];
      case 222: {
        if (tag == 1781) {
         parse_field222:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field222_)));
          set_has_field222();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:benchmarks.SpeedMessage2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:benchmarks.SpeedMessage2)
  return false;
#undef DO_
}

void SpeedMessage2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:benchmarks.SpeedMessage2)
  // optional string field1 = 1;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1().data(), this->field1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.field1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field1(), output);
  }

  // optional bytes field2 = 2;
  if (has_field2()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->field2(), output);
  }

  // optional int64 field3 = 3;
  if (has_field3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->field3(), output);
  }

  // optional int64 field4 = 4;
  if (has_field4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->field4(), output);
  }

  // optional string field6 = 6;
  if (has_field6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field6().data(), this->field6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.field6");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->field6(), output);
  }

  // repeated group Group1 = 10 {
  for (unsigned int i = 0, n = this->group1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      10, this->group1(i), output);
  }

  // optional int32 field21 = 21 [default = 0];
  if (has_field21()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->field21(), output);
  }

  // optional float field25 = 25;
  if (has_field25()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->field25(), output);
  }

  // optional int64 field30 = 30;
  if (has_field30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(30, this->field30(), output);
  }

  // optional int32 field63 = 63;
  if (has_field63()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(63, this->field63(), output);
  }

  // optional int32 field71 = 71;
  if (has_field71()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(71, this->field71(), output);
  }

  // optional bool field75 = 75 [default = false];
  if (has_field75()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(75, this->field75(), output);
  }

  // optional int32 field109 = 109 [default = 0];
  if (has_field109()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(109, this->field109(), output);
  }

  // repeated string field127 = 127;
  for (int i = 0; i < this->field127_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->field127(i).data(), this->field127(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "benchmarks.SpeedMessage2.field127");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      127, this->field127(i), output);
  }

  // repeated string field128 = 128;
  for (int i = 0; i < this->field128_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->field128(i).data(), this->field128(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "benchmarks.SpeedMessage2.field128");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      128, this->field128(i), output);
  }

  // optional int32 field129 = 129;
  if (has_field129()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(129, this->field129(), output);
  }

  // repeated int64 field130 = 130;
  for (int i = 0; i < this->field130_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      130, this->field130(i), output);
  }

  // optional int64 field131 = 131;
  if (has_field131()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(131, this->field131(), output);
  }

  // optional bool field205 = 205 [default = false];
  if (has_field205()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(205, this->field205(), output);
  }

  // optional bool field206 = 206 [default = false];
  if (has_field206()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(206, this->field206(), output);
  }

  // optional int32 field210 = 210 [default = 0];
  if (has_field210()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(210, this->field210(), output);
  }

  // optional int32 field211 = 211 [default = 0];
  if (has_field211()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(211, this->field211(), output);
  }

  // optional int32 field212 = 212 [default = 0];
  if (has_field212()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(212, this->field212(), output);
  }

  // optional int32 field213 = 213 [default = 0];
  if (has_field213()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(213, this->field213(), output);
  }

  // optional int32 field216 = 216 [default = 0];
  if (has_field216()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(216, this->field216(), output);
  }

  // optional int32 field217 = 217 [default = 0];
  if (has_field217()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(217, this->field217(), output);
  }

  // optional int32 field218 = 218 [default = 0];
  if (has_field218()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(218, this->field218(), output);
  }

  // optional int32 field220 = 220 [default = 0];
  if (has_field220()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(220, this->field220(), output);
  }

  // optional int32 field221 = 221 [default = 0];
  if (has_field221()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(221, this->field221(), output);
  }

  // optional float field222 = 222 [default = 0];
  if (has_field222()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(222, this->field222(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:benchmarks.SpeedMessage2)
}

::google::protobuf::uint8* SpeedMessage2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:benchmarks.SpeedMessage2)
  // optional string field1 = 1;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1().data(), this->field1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.field1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field1(), target);
  }

  // optional bytes field2 = 2;
  if (has_field2()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->field2(), target);
  }

  // optional int64 field3 = 3;
  if (has_field3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->field3(), target);
  }

  // optional int64 field4 = 4;
  if (has_field4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->field4(), target);
  }

  // optional string field6 = 6;
  if (has_field6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field6().data(), this->field6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.field6");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->field6(), target);
  }

  // repeated group Group1 = 10 {
  for (unsigned int i = 0, n = this->group1_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        10, this->group1(i), target);
  }

  // optional int32 field21 = 21 [default = 0];
  if (has_field21()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->field21(), target);
  }

  // optional float field25 = 25;
  if (has_field25()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->field25(), target);
  }

  // optional int64 field30 = 30;
  if (has_field30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(30, this->field30(), target);
  }

  // optional int32 field63 = 63;
  if (has_field63()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(63, this->field63(), target);
  }

  // optional int32 field71 = 71;
  if (has_field71()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(71, this->field71(), target);
  }

  // optional bool field75 = 75 [default = false];
  if (has_field75()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(75, this->field75(), target);
  }

  // optional int32 field109 = 109 [default = 0];
  if (has_field109()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(109, this->field109(), target);
  }

  // repeated string field127 = 127;
  for (int i = 0; i < this->field127_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field127(i).data(), this->field127(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.field127");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(127, this->field127(i), target);
  }

  // repeated string field128 = 128;
  for (int i = 0; i < this->field128_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field128(i).data(), this->field128(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "benchmarks.SpeedMessage2.field128");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(128, this->field128(i), target);
  }

  // optional int32 field129 = 129;
  if (has_field129()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(129, this->field129(), target);
  }

  // repeated int64 field130 = 130;
  for (int i = 0; i < this->field130_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(130, this->field130(i), target);
  }

  // optional int64 field131 = 131;
  if (has_field131()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(131, this->field131(), target);
  }

  // optional bool field205 = 205 [default = false];
  if (has_field205()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(205, this->field205(), target);
  }

  // optional bool field206 = 206 [default = false];
  if (has_field206()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(206, this->field206(), target);
  }

  // optional int32 field210 = 210 [default = 0];
  if (has_field210()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(210, this->field210(), target);
  }

  // optional int32 field211 = 211 [default = 0];
  if (has_field211()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(211, this->field211(), target);
  }

  // optional int32 field212 = 212 [default = 0];
  if (has_field212()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(212, this->field212(), target);
  }

  // optional int32 field213 = 213 [default = 0];
  if (has_field213()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(213, this->field213(), target);
  }

  // optional int32 field216 = 216 [default = 0];
  if (has_field216()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(216, this->field216(), target);
  }

  // optional int32 field217 = 217 [default = 0];
  if (has_field217()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(217, this->field217(), target);
  }

  // optional int32 field218 = 218 [default = 0];
  if (has_field218()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(218, this->field218(), target);
  }

  // optional int32 field220 = 220 [default = 0];
  if (has_field220()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(220, this->field220(), target);
  }

  // optional int32 field221 = 221 [default = 0];
  if (has_field221()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(221, this->field221(), target);
  }

  // optional float field222 = 222 [default = 0];
  if (has_field222()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(222, this->field222(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:benchmarks.SpeedMessage2)
  return target;
}

int SpeedMessage2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string field1 = 1;
    if (has_field1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field1());
    }

    // optional int64 field3 = 3;
    if (has_field3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field3());
    }

    // optional int64 field4 = 4;
    if (has_field4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field4());
    }

    // optional int64 field30 = 30;
    if (has_field30()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field30());
    }

    // optional bool field75 = 75 [default = false];
    if (has_field75()) {
      total_size += 2 + 1;
    }

    // optional string field6 = 6;
    if (has_field6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field6());
    }

    // optional bytes field2 = 2;
    if (has_field2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->field2());
    }

    // optional int32 field21 = 21 [default = 0];
    if (has_field21()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field21());
    }

  }
  if (_has_bits_[8 / 32] & 65280) {
    // optional int32 field71 = 71;
    if (has_field71()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field71());
    }

    // optional float field25 = 25;
    if (has_field25()) {
      total_size += 2 + 4;
    }

    // optional int32 field109 = 109 [default = 0];
    if (has_field109()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field109());
    }

    // optional int32 field210 = 210 [default = 0];
    if (has_field210()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field210());
    }

    // optional int32 field211 = 211 [default = 0];
    if (has_field211()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field211());
    }

    // optional int32 field212 = 212 [default = 0];
    if (has_field212()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field212());
    }

    // optional int32 field213 = 213 [default = 0];
    if (has_field213()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field213());
    }

    // optional int32 field216 = 216 [default = 0];
    if (has_field216()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field216());
    }

  }
  if (_has_bits_[16 / 32] & 4128768) {
    // optional int32 field217 = 217 [default = 0];
    if (has_field217()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field217());
    }

    // optional int32 field218 = 218 [default = 0];
    if (has_field218()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field218());
    }

    // optional int32 field220 = 220 [default = 0];
    if (has_field220()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field220());
    }

    // optional int32 field221 = 221 [default = 0];
    if (has_field221()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field221());
    }

    // optional float field222 = 222 [default = 0];
    if (has_field222()) {
      total_size += 2 + 4;
    }

    // optional int32 field63 = 63;
    if (has_field63()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field63());
    }

  }
  if (_has_bits_[24 / 32] & 889192448) {
    // optional int64 field131 = 131;
    if (has_field131()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field131());
    }

    // optional int32 field129 = 129;
    if (has_field129()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field129());
    }

    // optional bool field205 = 205 [default = false];
    if (has_field205()) {
      total_size += 2 + 1;
    }

    // optional bool field206 = 206 [default = false];
    if (has_field206()) {
      total_size += 2 + 1;
    }

  }
  // repeated group Group1 = 10 {
  total_size += 2 * this->group1_size();
  for (int i = 0; i < this->group1_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->group1(i));
  }

  // repeated string field128 = 128;
  total_size += 2 * this->field128_size();
  for (int i = 0; i < this->field128_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->field128(i));
  }

  // repeated string field127 = 127;
  total_size += 2 * this->field127_size();
  for (int i = 0; i < this->field127_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->field127(i));
  }

  // repeated int64 field130 = 130;
  {
    int data_size = 0;
    for (int i = 0; i < this->field130_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->field130(i));
    }
    total_size += 2 * this->field130_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedMessage2::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpeedMessage2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpeedMessage2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpeedMessage2::MergeFrom(const SpeedMessage2& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  group1_.MergeFrom(from.group1_);
  field128_.MergeFrom(from.field128_);
  field127_.MergeFrom(from.field127_);
  field130_.MergeFrom(from.field130_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      set_has_field1();
      field1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field1_);
    }
    if (from.has_field3()) {
      set_field3(from.field3());
    }
    if (from.has_field4()) {
      set_field4(from.field4());
    }
    if (from.has_field30()) {
      set_field30(from.field30());
    }
    if (from.has_field75()) {
      set_field75(from.field75());
    }
    if (from.has_field6()) {
      set_has_field6();
      field6_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field6_);
    }
    if (from.has_field2()) {
      set_has_field2();
      field2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field2_);
    }
    if (from.has_field21()) {
      set_field21(from.field21());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_field71()) {
      set_field71(from.field71());
    }
    if (from.has_field25()) {
      set_field25(from.field25());
    }
    if (from.has_field109()) {
      set_field109(from.field109());
    }
    if (from.has_field210()) {
      set_field210(from.field210());
    }
    if (from.has_field211()) {
      set_field211(from.field211());
    }
    if (from.has_field212()) {
      set_field212(from.field212());
    }
    if (from.has_field213()) {
      set_field213(from.field213());
    }
    if (from.has_field216()) {
      set_field216(from.field216());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_field217()) {
      set_field217(from.field217());
    }
    if (from.has_field218()) {
      set_field218(from.field218());
    }
    if (from.has_field220()) {
      set_field220(from.field220());
    }
    if (from.has_field221()) {
      set_field221(from.field221());
    }
    if (from.has_field222()) {
      set_field222(from.field222());
    }
    if (from.has_field63()) {
      set_field63(from.field63());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_field131()) {
      set_field131(from.field131());
    }
    if (from.has_field129()) {
      set_field129(from.field129());
    }
    if (from.has_field205()) {
      set_field205(from.field205());
    }
    if (from.has_field206()) {
      set_field206(from.field206());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpeedMessage2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedMessage2::CopyFrom(const SpeedMessage2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedMessage2::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->group1())) return false;
  return true;
}

void SpeedMessage2::Swap(SpeedMessage2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedMessage2::InternalSwap(SpeedMessage2* other) {
  field1_.Swap(&other->field1_);
  std::swap(field3_, other->field3_);
  std::swap(field4_, other->field4_);
  std::swap(field30_, other->field30_);
  std::swap(field75_, other->field75_);
  field6_.Swap(&other->field6_);
  field2_.Swap(&other->field2_);
  std::swap(field21_, other->field21_);
  std::swap(field71_, other->field71_);
  std::swap(field25_, other->field25_);
  std::swap(field109_, other->field109_);
  std::swap(field210_, other->field210_);
  std::swap(field211_, other->field211_);
  std::swap(field212_, other->field212_);
  std::swap(field213_, other->field213_);
  std::swap(field216_, other->field216_);
  std::swap(field217_, other->field217_);
  std::swap(field218_, other->field218_);
  std::swap(field220_, other->field220_);
  std::swap(field221_, other->field221_);
  std::swap(field222_, other->field222_);
  std::swap(field63_, other->field63_);
  group1_.UnsafeArenaSwap(&other->group1_);
  field128_.UnsafeArenaSwap(&other->field128_);
  std::swap(field131_, other->field131_);
  field127_.UnsafeArenaSwap(&other->field127_);
  std::swap(field129_, other->field129_);
  field130_.UnsafeArenaSwap(&other->field130_);
  std::swap(field205_, other->field205_);
  std::swap(field206_, other->field206_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpeedMessage2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpeedMessage2_descriptor_;
  metadata.reflection = SpeedMessage2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpeedMessage2_Group1

// required float field11 = 11;
 bool SpeedMessage2_Group1::has_field11() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SpeedMessage2_Group1::set_has_field11() {
  _has_bits_[0] |= 0x00000001u;
}
 void SpeedMessage2_Group1::clear_has_field11() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SpeedMessage2_Group1::clear_field11() {
  field11_ = 0;
  clear_has_field11();
}
 float SpeedMessage2_Group1::field11() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field11)
  return field11_;
}
 void SpeedMessage2_Group1::set_field11(float value) {
  set_has_field11();
  field11_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field11)
}

// optional float field26 = 26;
 bool SpeedMessage2_Group1::has_field26() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void SpeedMessage2_Group1::set_has_field26() {
  _has_bits_[0] |= 0x00000002u;
}
 void SpeedMessage2_Group1::clear_has_field26() {
  _has_bits_[0] &= ~0x00000002u;
}
 void SpeedMessage2_Group1::clear_field26() {
  field26_ = 0;
  clear_has_field26();
}
 float SpeedMessage2_Group1::field26() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field26)
  return field26_;
}
 void SpeedMessage2_Group1::set_field26(float value) {
  set_has_field26();
  field26_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field26)
}

// optional string field12 = 12;
 bool SpeedMessage2_Group1::has_field12() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void SpeedMessage2_Group1::set_has_field12() {
  _has_bits_[0] |= 0x00000004u;
}
 void SpeedMessage2_Group1::clear_has_field12() {
  _has_bits_[0] &= ~0x00000004u;
}
 void SpeedMessage2_Group1::clear_field12() {
  field12_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field12();
}
 const ::std::string& SpeedMessage2_Group1::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field12)
  return field12_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_field12(const ::std::string& value) {
  set_has_field12();
  field12_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field12)
}
 void SpeedMessage2_Group1::set_field12(const char* value) {
  set_has_field12();
  field12_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field12)
}
 void SpeedMessage2_Group1::set_field12(const char* value, size_t size) {
  set_has_field12();
  field12_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field12)
}
 ::std::string* SpeedMessage2_Group1::mutable_field12() {
  set_has_field12();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field12)
  return field12_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2_Group1::release_field12() {
  clear_has_field12();
  return field12_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_allocated_field12(::std::string* field12) {
  if (field12 != NULL) {
    set_has_field12();
  } else {
    clear_has_field12();
  }
  field12_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field12);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.Group1.field12)
}

// optional string field13 = 13;
 bool SpeedMessage2_Group1::has_field13() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void SpeedMessage2_Group1::set_has_field13() {
  _has_bits_[0] |= 0x00000008u;
}
 void SpeedMessage2_Group1::clear_has_field13() {
  _has_bits_[0] &= ~0x00000008u;
}
 void SpeedMessage2_Group1::clear_field13() {
  field13_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field13();
}
 const ::std::string& SpeedMessage2_Group1::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field13)
  return field13_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_field13(const ::std::string& value) {
  set_has_field13();
  field13_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field13)
}
 void SpeedMessage2_Group1::set_field13(const char* value) {
  set_has_field13();
  field13_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field13)
}
 void SpeedMessage2_Group1::set_field13(const char* value, size_t size) {
  set_has_field13();
  field13_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field13)
}
 ::std::string* SpeedMessage2_Group1::mutable_field13() {
  set_has_field13();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field13)
  return field13_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2_Group1::release_field13() {
  clear_has_field13();
  return field13_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_allocated_field13(::std::string* field13) {
  if (field13 != NULL) {
    set_has_field13();
  } else {
    clear_has_field13();
  }
  field13_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field13);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.Group1.field13)
}

// repeated string field14 = 14;
 int SpeedMessage2_Group1::field14_size() const {
  return field14_.size();
}
 void SpeedMessage2_Group1::clear_field14() {
  field14_.Clear();
}
 const ::std::string& SpeedMessage2_Group1::field14(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field14)
  return field14_.Get(index);
}
 ::std::string* SpeedMessage2_Group1::mutable_field14(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field14)
  return field14_.Mutable(index);
}
 void SpeedMessage2_Group1::set_field14(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field14)
  field14_.Mutable(index)->assign(value);
}
 void SpeedMessage2_Group1::set_field14(int index, const char* value) {
  field14_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field14)
}
 void SpeedMessage2_Group1::set_field14(int index, const char* value, size_t size) {
  field14_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field14)
}
 ::std::string* SpeedMessage2_Group1::add_field14() {
  return field14_.Add();
}
 void SpeedMessage2_Group1::add_field14(const ::std::string& value) {
  field14_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage2.Group1.field14)
}
 void SpeedMessage2_Group1::add_field14(const char* value) {
  field14_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SpeedMessage2.Group1.field14)
}
 void SpeedMessage2_Group1::add_field14(const char* value, size_t size) {
  field14_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SpeedMessage2.Group1.field14)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SpeedMessage2_Group1::field14() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage2.Group1.field14)
  return field14_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SpeedMessage2_Group1::mutable_field14() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage2.Group1.field14)
  return &field14_;
}

// required uint64 field15 = 15;
 bool SpeedMessage2_Group1::has_field15() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void SpeedMessage2_Group1::set_has_field15() {
  _has_bits_[0] |= 0x00000020u;
}
 void SpeedMessage2_Group1::clear_has_field15() {
  _has_bits_[0] &= ~0x00000020u;
}
 void SpeedMessage2_Group1::clear_field15() {
  field15_ = GOOGLE_ULONGLONG(0);
  clear_has_field15();
}
 ::google::protobuf::uint64 SpeedMessage2_Group1::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field15)
  return field15_;
}
 void SpeedMessage2_Group1::set_field15(::google::protobuf::uint64 value) {
  set_has_field15();
  field15_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field15)
}

// optional int32 field5 = 5;
 bool SpeedMessage2_Group1::has_field5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void SpeedMessage2_Group1::set_has_field5() {
  _has_bits_[0] |= 0x00000040u;
}
 void SpeedMessage2_Group1::clear_has_field5() {
  _has_bits_[0] &= ~0x00000040u;
}
 void SpeedMessage2_Group1::clear_field5() {
  field5_ = 0;
  clear_has_field5();
}
 ::google::protobuf::int32 SpeedMessage2_Group1::field5() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field5)
  return field5_;
}
 void SpeedMessage2_Group1::set_field5(::google::protobuf::int32 value) {
  set_has_field5();
  field5_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field5)
}

// optional string field27 = 27;
 bool SpeedMessage2_Group1::has_field27() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void SpeedMessage2_Group1::set_has_field27() {
  _has_bits_[0] |= 0x00000080u;
}
 void SpeedMessage2_Group1::clear_has_field27() {
  _has_bits_[0] &= ~0x00000080u;
}
 void SpeedMessage2_Group1::clear_field27() {
  field27_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field27();
}
 const ::std::string& SpeedMessage2_Group1::field27() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field27)
  return field27_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_field27(const ::std::string& value) {
  set_has_field27();
  field27_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field27)
}
 void SpeedMessage2_Group1::set_field27(const char* value) {
  set_has_field27();
  field27_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field27)
}
 void SpeedMessage2_Group1::set_field27(const char* value, size_t size) {
  set_has_field27();
  field27_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field27)
}
 ::std::string* SpeedMessage2_Group1::mutable_field27() {
  set_has_field27();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field27)
  return field27_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2_Group1::release_field27() {
  clear_has_field27();
  return field27_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_allocated_field27(::std::string* field27) {
  if (field27 != NULL) {
    set_has_field27();
  } else {
    clear_has_field27();
  }
  field27_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field27);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.Group1.field27)
}

// optional int32 field28 = 28;
 bool SpeedMessage2_Group1::has_field28() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void SpeedMessage2_Group1::set_has_field28() {
  _has_bits_[0] |= 0x00000100u;
}
 void SpeedMessage2_Group1::clear_has_field28() {
  _has_bits_[0] &= ~0x00000100u;
}
 void SpeedMessage2_Group1::clear_field28() {
  field28_ = 0;
  clear_has_field28();
}
 ::google::protobuf::int32 SpeedMessage2_Group1::field28() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field28)
  return field28_;
}
 void SpeedMessage2_Group1::set_field28(::google::protobuf::int32 value) {
  set_has_field28();
  field28_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field28)
}

// optional string field29 = 29;
 bool SpeedMessage2_Group1::has_field29() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void SpeedMessage2_Group1::set_has_field29() {
  _has_bits_[0] |= 0x00000200u;
}
 void SpeedMessage2_Group1::clear_has_field29() {
  _has_bits_[0] &= ~0x00000200u;
}
 void SpeedMessage2_Group1::clear_field29() {
  field29_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field29();
}
 const ::std::string& SpeedMessage2_Group1::field29() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field29)
  return field29_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_field29(const ::std::string& value) {
  set_has_field29();
  field29_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field29)
}
 void SpeedMessage2_Group1::set_field29(const char* value) {
  set_has_field29();
  field29_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field29)
}
 void SpeedMessage2_Group1::set_field29(const char* value, size_t size) {
  set_has_field29();
  field29_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field29)
}
 ::std::string* SpeedMessage2_Group1::mutable_field29() {
  set_has_field29();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field29)
  return field29_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2_Group1::release_field29() {
  clear_has_field29();
  return field29_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_allocated_field29(::std::string* field29) {
  if (field29 != NULL) {
    set_has_field29();
  } else {
    clear_has_field29();
  }
  field29_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field29);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.Group1.field29)
}

// optional string field16 = 16;
 bool SpeedMessage2_Group1::has_field16() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void SpeedMessage2_Group1::set_has_field16() {
  _has_bits_[0] |= 0x00000400u;
}
 void SpeedMessage2_Group1::clear_has_field16() {
  _has_bits_[0] &= ~0x00000400u;
}
 void SpeedMessage2_Group1::clear_field16() {
  field16_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field16();
}
 const ::std::string& SpeedMessage2_Group1::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field16)
  return field16_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_field16(const ::std::string& value) {
  set_has_field16();
  field16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field16)
}
 void SpeedMessage2_Group1::set_field16(const char* value) {
  set_has_field16();
  field16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field16)
}
 void SpeedMessage2_Group1::set_field16(const char* value, size_t size) {
  set_has_field16();
  field16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field16)
}
 ::std::string* SpeedMessage2_Group1::mutable_field16() {
  set_has_field16();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field16)
  return field16_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2_Group1::release_field16() {
  clear_has_field16();
  return field16_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_allocated_field16(::std::string* field16) {
  if (field16 != NULL) {
    set_has_field16();
  } else {
    clear_has_field16();
  }
  field16_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field16);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.Group1.field16)
}

// repeated string field22 = 22;
 int SpeedMessage2_Group1::field22_size() const {
  return field22_.size();
}
 void SpeedMessage2_Group1::clear_field22() {
  field22_.Clear();
}
 const ::std::string& SpeedMessage2_Group1::field22(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field22)
  return field22_.Get(index);
}
 ::std::string* SpeedMessage2_Group1::mutable_field22(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field22)
  return field22_.Mutable(index);
}
 void SpeedMessage2_Group1::set_field22(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field22)
  field22_.Mutable(index)->assign(value);
}
 void SpeedMessage2_Group1::set_field22(int index, const char* value) {
  field22_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field22)
}
 void SpeedMessage2_Group1::set_field22(int index, const char* value, size_t size) {
  field22_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field22)
}
 ::std::string* SpeedMessage2_Group1::add_field22() {
  return field22_.Add();
}
 void SpeedMessage2_Group1::add_field22(const ::std::string& value) {
  field22_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage2.Group1.field22)
}
 void SpeedMessage2_Group1::add_field22(const char* value) {
  field22_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SpeedMessage2.Group1.field22)
}
 void SpeedMessage2_Group1::add_field22(const char* value, size_t size) {
  field22_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SpeedMessage2.Group1.field22)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SpeedMessage2_Group1::field22() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage2.Group1.field22)
  return field22_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SpeedMessage2_Group1::mutable_field22() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage2.Group1.field22)
  return &field22_;
}

// repeated int32 field73 = 73;
 int SpeedMessage2_Group1::field73_size() const {
  return field73_.size();
}
 void SpeedMessage2_Group1::clear_field73() {
  field73_.Clear();
}
 ::google::protobuf::int32 SpeedMessage2_Group1::field73(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field73)
  return field73_.Get(index);
}
 void SpeedMessage2_Group1::set_field73(int index, ::google::protobuf::int32 value) {
  field73_.Set(index, value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field73)
}
 void SpeedMessage2_Group1::add_field73(::google::protobuf::int32 value) {
  field73_.Add(value);
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage2.Group1.field73)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SpeedMessage2_Group1::field73() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage2.Group1.field73)
  return field73_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SpeedMessage2_Group1::mutable_field73() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage2.Group1.field73)
  return &field73_;
}

// optional int32 field20 = 20 [default = 0];
 bool SpeedMessage2_Group1::has_field20() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void SpeedMessage2_Group1::set_has_field20() {
  _has_bits_[0] |= 0x00002000u;
}
 void SpeedMessage2_Group1::clear_has_field20() {
  _has_bits_[0] &= ~0x00002000u;
}
 void SpeedMessage2_Group1::clear_field20() {
  field20_ = 0;
  clear_has_field20();
}
 ::google::protobuf::int32 SpeedMessage2_Group1::field20() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field20)
  return field20_;
}
 void SpeedMessage2_Group1::set_field20(::google::protobuf::int32 value) {
  set_has_field20();
  field20_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field20)
}

// optional string field24 = 24;
 bool SpeedMessage2_Group1::has_field24() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
 void SpeedMessage2_Group1::set_has_field24() {
  _has_bits_[0] |= 0x00004000u;
}
 void SpeedMessage2_Group1::clear_has_field24() {
  _has_bits_[0] &= ~0x00004000u;
}
 void SpeedMessage2_Group1::clear_field24() {
  field24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field24();
}
 const ::std::string& SpeedMessage2_Group1::field24() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field24)
  return field24_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_field24(const ::std::string& value) {
  set_has_field24();
  field24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.Group1.field24)
}
 void SpeedMessage2_Group1::set_field24(const char* value) {
  set_has_field24();
  field24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.Group1.field24)
}
 void SpeedMessage2_Group1::set_field24(const char* value, size_t size) {
  set_has_field24();
  field24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.Group1.field24)
}
 ::std::string* SpeedMessage2_Group1::mutable_field24() {
  set_has_field24();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field24)
  return field24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2_Group1::release_field24() {
  clear_has_field24();
  return field24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2_Group1::set_allocated_field24(::std::string* field24) {
  if (field24 != NULL) {
    set_has_field24();
  } else {
    clear_has_field24();
  }
  field24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field24);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.Group1.field24)
}

// optional .benchmarks.SpeedMessage2GroupedMessage field31 = 31;
 bool SpeedMessage2_Group1::has_field31() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
 void SpeedMessage2_Group1::set_has_field31() {
  _has_bits_[0] |= 0x00008000u;
}
 void SpeedMessage2_Group1::clear_has_field31() {
  _has_bits_[0] &= ~0x00008000u;
}
 void SpeedMessage2_Group1::clear_field31() {
  if (field31_ != NULL) field31_->::benchmarks::SpeedMessage2GroupedMessage::Clear();
  clear_has_field31();
}
 const ::benchmarks::SpeedMessage2GroupedMessage& SpeedMessage2_Group1::field31() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.Group1.field31)
  return field31_ != NULL ? *field31_ : *default_instance_->field31_;
}
 ::benchmarks::SpeedMessage2GroupedMessage* SpeedMessage2_Group1::mutable_field31() {
  set_has_field31();
  if (field31_ == NULL) {
    field31_ = new ::benchmarks::SpeedMessage2GroupedMessage;
  }
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.Group1.field31)
  return field31_;
}
 ::benchmarks::SpeedMessage2GroupedMessage* SpeedMessage2_Group1::release_field31() {
  clear_has_field31();
  ::benchmarks::SpeedMessage2GroupedMessage* temp = field31_;
  field31_ = NULL;
  return temp;
}
 void SpeedMessage2_Group1::set_allocated_field31(::benchmarks::SpeedMessage2GroupedMessage* field31) {
  delete field31_;
  field31_ = field31;
  if (field31) {
    set_has_field31();
  } else {
    clear_has_field31();
  }
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.Group1.field31)
}

// -------------------------------------------------------------------

// SpeedMessage2

// optional string field1 = 1;
 bool SpeedMessage2::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SpeedMessage2::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
 void SpeedMessage2::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SpeedMessage2::clear_field1() {
  field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field1();
}
 const ::std::string& SpeedMessage2::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field1)
  return field1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2::set_field1(const ::std::string& value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field1)
}
 void SpeedMessage2::set_field1(const char* value) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.field1)
}
 void SpeedMessage2::set_field1(const char* value, size_t size) {
  set_has_field1();
  field1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.field1)
}
 ::std::string* SpeedMessage2::mutable_field1() {
  set_has_field1();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.field1)
  return field1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2::release_field1() {
  clear_has_field1();
  return field1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2::set_allocated_field1(::std::string* field1) {
  if (field1 != NULL) {
    set_has_field1();
  } else {
    clear_has_field1();
  }
  field1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field1);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.field1)
}

// optional int64 field3 = 3;
 bool SpeedMessage2::has_field3() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void SpeedMessage2::set_has_field3() {
  _has_bits_[0] |= 0x00000002u;
}
 void SpeedMessage2::clear_has_field3() {
  _has_bits_[0] &= ~0x00000002u;
}
 void SpeedMessage2::clear_field3() {
  field3_ = GOOGLE_LONGLONG(0);
  clear_has_field3();
}
 ::google::protobuf::int64 SpeedMessage2::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field3)
  return field3_;
}
 void SpeedMessage2::set_field3(::google::protobuf::int64 value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field3)
}

// optional int64 field4 = 4;
 bool SpeedMessage2::has_field4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void SpeedMessage2::set_has_field4() {
  _has_bits_[0] |= 0x00000004u;
}
 void SpeedMessage2::clear_has_field4() {
  _has_bits_[0] &= ~0x00000004u;
}
 void SpeedMessage2::clear_field4() {
  field4_ = GOOGLE_LONGLONG(0);
  clear_has_field4();
}
 ::google::protobuf::int64 SpeedMessage2::field4() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field4)
  return field4_;
}
 void SpeedMessage2::set_field4(::google::protobuf::int64 value) {
  set_has_field4();
  field4_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field4)
}

// optional int64 field30 = 30;
 bool SpeedMessage2::has_field30() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void SpeedMessage2::set_has_field30() {
  _has_bits_[0] |= 0x00000008u;
}
 void SpeedMessage2::clear_has_field30() {
  _has_bits_[0] &= ~0x00000008u;
}
 void SpeedMessage2::clear_field30() {
  field30_ = GOOGLE_LONGLONG(0);
  clear_has_field30();
}
 ::google::protobuf::int64 SpeedMessage2::field30() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field30)
  return field30_;
}
 void SpeedMessage2::set_field30(::google::protobuf::int64 value) {
  set_has_field30();
  field30_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field30)
}

// optional bool field75 = 75 [default = false];
 bool SpeedMessage2::has_field75() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void SpeedMessage2::set_has_field75() {
  _has_bits_[0] |= 0x00000010u;
}
 void SpeedMessage2::clear_has_field75() {
  _has_bits_[0] &= ~0x00000010u;
}
 void SpeedMessage2::clear_field75() {
  field75_ = false;
  clear_has_field75();
}
 bool SpeedMessage2::field75() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field75)
  return field75_;
}
 void SpeedMessage2::set_field75(bool value) {
  set_has_field75();
  field75_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field75)
}

// optional string field6 = 6;
 bool SpeedMessage2::has_field6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void SpeedMessage2::set_has_field6() {
  _has_bits_[0] |= 0x00000020u;
}
 void SpeedMessage2::clear_has_field6() {
  _has_bits_[0] &= ~0x00000020u;
}
 void SpeedMessage2::clear_field6() {
  field6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field6();
}
 const ::std::string& SpeedMessage2::field6() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field6)
  return field6_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2::set_field6(const ::std::string& value) {
  set_has_field6();
  field6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field6)
}
 void SpeedMessage2::set_field6(const char* value) {
  set_has_field6();
  field6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.field6)
}
 void SpeedMessage2::set_field6(const char* value, size_t size) {
  set_has_field6();
  field6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.field6)
}
 ::std::string* SpeedMessage2::mutable_field6() {
  set_has_field6();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.field6)
  return field6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2::release_field6() {
  clear_has_field6();
  return field6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2::set_allocated_field6(::std::string* field6) {
  if (field6 != NULL) {
    set_has_field6();
  } else {
    clear_has_field6();
  }
  field6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field6);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.field6)
}

// optional bytes field2 = 2;
 bool SpeedMessage2::has_field2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void SpeedMessage2::set_has_field2() {
  _has_bits_[0] |= 0x00000040u;
}
 void SpeedMessage2::clear_has_field2() {
  _has_bits_[0] &= ~0x00000040u;
}
 void SpeedMessage2::clear_field2() {
  field2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field2();
}
 const ::std::string& SpeedMessage2::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field2)
  return field2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2::set_field2(const ::std::string& value) {
  set_has_field2();
  field2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field2)
}
 void SpeedMessage2::set_field2(const char* value) {
  set_has_field2();
  field2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.field2)
}
 void SpeedMessage2::set_field2(const void* value, size_t size) {
  set_has_field2();
  field2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.field2)
}
 ::std::string* SpeedMessage2::mutable_field2() {
  set_has_field2();
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.field2)
  return field2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpeedMessage2::release_field2() {
  clear_has_field2();
  return field2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpeedMessage2::set_allocated_field2(::std::string* field2) {
  if (field2 != NULL) {
    set_has_field2();
  } else {
    clear_has_field2();
  }
  field2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field2);
  // @@protoc_insertion_point(field_set_allocated:benchmarks.SpeedMessage2.field2)
}

// optional int32 field21 = 21 [default = 0];
 bool SpeedMessage2::has_field21() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void SpeedMessage2::set_has_field21() {
  _has_bits_[0] |= 0x00000080u;
}
 void SpeedMessage2::clear_has_field21() {
  _has_bits_[0] &= ~0x00000080u;
}
 void SpeedMessage2::clear_field21() {
  field21_ = 0;
  clear_has_field21();
}
 ::google::protobuf::int32 SpeedMessage2::field21() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field21)
  return field21_;
}
 void SpeedMessage2::set_field21(::google::protobuf::int32 value) {
  set_has_field21();
  field21_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field21)
}

// optional int32 field71 = 71;
 bool SpeedMessage2::has_field71() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void SpeedMessage2::set_has_field71() {
  _has_bits_[0] |= 0x00000100u;
}
 void SpeedMessage2::clear_has_field71() {
  _has_bits_[0] &= ~0x00000100u;
}
 void SpeedMessage2::clear_field71() {
  field71_ = 0;
  clear_has_field71();
}
 ::google::protobuf::int32 SpeedMessage2::field71() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field71)
  return field71_;
}
 void SpeedMessage2::set_field71(::google::protobuf::int32 value) {
  set_has_field71();
  field71_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field71)
}

// optional float field25 = 25;
 bool SpeedMessage2::has_field25() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void SpeedMessage2::set_has_field25() {
  _has_bits_[0] |= 0x00000200u;
}
 void SpeedMessage2::clear_has_field25() {
  _has_bits_[0] &= ~0x00000200u;
}
 void SpeedMessage2::clear_field25() {
  field25_ = 0;
  clear_has_field25();
}
 float SpeedMessage2::field25() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field25)
  return field25_;
}
 void SpeedMessage2::set_field25(float value) {
  set_has_field25();
  field25_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field25)
}

// optional int32 field109 = 109 [default = 0];
 bool SpeedMessage2::has_field109() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void SpeedMessage2::set_has_field109() {
  _has_bits_[0] |= 0x00000400u;
}
 void SpeedMessage2::clear_has_field109() {
  _has_bits_[0] &= ~0x00000400u;
}
 void SpeedMessage2::clear_field109() {
  field109_ = 0;
  clear_has_field109();
}
 ::google::protobuf::int32 SpeedMessage2::field109() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field109)
  return field109_;
}
 void SpeedMessage2::set_field109(::google::protobuf::int32 value) {
  set_has_field109();
  field109_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field109)
}

// optional int32 field210 = 210 [default = 0];
 bool SpeedMessage2::has_field210() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void SpeedMessage2::set_has_field210() {
  _has_bits_[0] |= 0x00000800u;
}
 void SpeedMessage2::clear_has_field210() {
  _has_bits_[0] &= ~0x00000800u;
}
 void SpeedMessage2::clear_field210() {
  field210_ = 0;
  clear_has_field210();
}
 ::google::protobuf::int32 SpeedMessage2::field210() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field210)
  return field210_;
}
 void SpeedMessage2::set_field210(::google::protobuf::int32 value) {
  set_has_field210();
  field210_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field210)
}

// optional int32 field211 = 211 [default = 0];
 bool SpeedMessage2::has_field211() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void SpeedMessage2::set_has_field211() {
  _has_bits_[0] |= 0x00001000u;
}
 void SpeedMessage2::clear_has_field211() {
  _has_bits_[0] &= ~0x00001000u;
}
 void SpeedMessage2::clear_field211() {
  field211_ = 0;
  clear_has_field211();
}
 ::google::protobuf::int32 SpeedMessage2::field211() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field211)
  return field211_;
}
 void SpeedMessage2::set_field211(::google::protobuf::int32 value) {
  set_has_field211();
  field211_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field211)
}

// optional int32 field212 = 212 [default = 0];
 bool SpeedMessage2::has_field212() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void SpeedMessage2::set_has_field212() {
  _has_bits_[0] |= 0x00002000u;
}
 void SpeedMessage2::clear_has_field212() {
  _has_bits_[0] &= ~0x00002000u;
}
 void SpeedMessage2::clear_field212() {
  field212_ = 0;
  clear_has_field212();
}
 ::google::protobuf::int32 SpeedMessage2::field212() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field212)
  return field212_;
}
 void SpeedMessage2::set_field212(::google::protobuf::int32 value) {
  set_has_field212();
  field212_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field212)
}

// optional int32 field213 = 213 [default = 0];
 bool SpeedMessage2::has_field213() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
 void SpeedMessage2::set_has_field213() {
  _has_bits_[0] |= 0x00004000u;
}
 void SpeedMessage2::clear_has_field213() {
  _has_bits_[0] &= ~0x00004000u;
}
 void SpeedMessage2::clear_field213() {
  field213_ = 0;
  clear_has_field213();
}
 ::google::protobuf::int32 SpeedMessage2::field213() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field213)
  return field213_;
}
 void SpeedMessage2::set_field213(::google::protobuf::int32 value) {
  set_has_field213();
  field213_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field213)
}

// optional int32 field216 = 216 [default = 0];
 bool SpeedMessage2::has_field216() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
 void SpeedMessage2::set_has_field216() {
  _has_bits_[0] |= 0x00008000u;
}
 void SpeedMessage2::clear_has_field216() {
  _has_bits_[0] &= ~0x00008000u;
}
 void SpeedMessage2::clear_field216() {
  field216_ = 0;
  clear_has_field216();
}
 ::google::protobuf::int32 SpeedMessage2::field216() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field216)
  return field216_;
}
 void SpeedMessage2::set_field216(::google::protobuf::int32 value) {
  set_has_field216();
  field216_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field216)
}

// optional int32 field217 = 217 [default = 0];
 bool SpeedMessage2::has_field217() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
 void SpeedMessage2::set_has_field217() {
  _has_bits_[0] |= 0x00010000u;
}
 void SpeedMessage2::clear_has_field217() {
  _has_bits_[0] &= ~0x00010000u;
}
 void SpeedMessage2::clear_field217() {
  field217_ = 0;
  clear_has_field217();
}
 ::google::protobuf::int32 SpeedMessage2::field217() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field217)
  return field217_;
}
 void SpeedMessage2::set_field217(::google::protobuf::int32 value) {
  set_has_field217();
  field217_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field217)
}

// optional int32 field218 = 218 [default = 0];
 bool SpeedMessage2::has_field218() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
 void SpeedMessage2::set_has_field218() {
  _has_bits_[0] |= 0x00020000u;
}
 void SpeedMessage2::clear_has_field218() {
  _has_bits_[0] &= ~0x00020000u;
}
 void SpeedMessage2::clear_field218() {
  field218_ = 0;
  clear_has_field218();
}
 ::google::protobuf::int32 SpeedMessage2::field218() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field218)
  return field218_;
}
 void SpeedMessage2::set_field218(::google::protobuf::int32 value) {
  set_has_field218();
  field218_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field218)
}

// optional int32 field220 = 220 [default = 0];
 bool SpeedMessage2::has_field220() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
 void SpeedMessage2::set_has_field220() {
  _has_bits_[0] |= 0x00040000u;
}
 void SpeedMessage2::clear_has_field220() {
  _has_bits_[0] &= ~0x00040000u;
}
 void SpeedMessage2::clear_field220() {
  field220_ = 0;
  clear_has_field220();
}
 ::google::protobuf::int32 SpeedMessage2::field220() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field220)
  return field220_;
}
 void SpeedMessage2::set_field220(::google::protobuf::int32 value) {
  set_has_field220();
  field220_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field220)
}

// optional int32 field221 = 221 [default = 0];
 bool SpeedMessage2::has_field221() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
 void SpeedMessage2::set_has_field221() {
  _has_bits_[0] |= 0x00080000u;
}
 void SpeedMessage2::clear_has_field221() {
  _has_bits_[0] &= ~0x00080000u;
}
 void SpeedMessage2::clear_field221() {
  field221_ = 0;
  clear_has_field221();
}
 ::google::protobuf::int32 SpeedMessage2::field221() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field221)
  return field221_;
}
 void SpeedMessage2::set_field221(::google::protobuf::int32 value) {
  set_has_field221();
  field221_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field221)
}

// optional float field222 = 222 [default = 0];
 bool SpeedMessage2::has_field222() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
 void SpeedMessage2::set_has_field222() {
  _has_bits_[0] |= 0x00100000u;
}
 void SpeedMessage2::clear_has_field222() {
  _has_bits_[0] &= ~0x00100000u;
}
 void SpeedMessage2::clear_field222() {
  field222_ = 0;
  clear_has_field222();
}
 float SpeedMessage2::field222() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field222)
  return field222_;
}
 void SpeedMessage2::set_field222(float value) {
  set_has_field222();
  field222_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field222)
}

// optional int32 field63 = 63;
 bool SpeedMessage2::has_field63() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
 void SpeedMessage2::set_has_field63() {
  _has_bits_[0] |= 0x00200000u;
}
 void SpeedMessage2::clear_has_field63() {
  _has_bits_[0] &= ~0x00200000u;
}
 void SpeedMessage2::clear_field63() {
  field63_ = 0;
  clear_has_field63();
}
 ::google::protobuf::int32 SpeedMessage2::field63() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field63)
  return field63_;
}
 void SpeedMessage2::set_field63(::google::protobuf::int32 value) {
  set_has_field63();
  field63_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field63)
}

// repeated group Group1 = 10 {
 int SpeedMessage2::group1_size() const {
  return group1_.size();
}
 void SpeedMessage2::clear_group1() {
  group1_.Clear();
}
 const ::benchmarks::SpeedMessage2_Group1& SpeedMessage2::group1(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.group1)
  return group1_.Get(index);
}
 ::benchmarks::SpeedMessage2_Group1* SpeedMessage2::mutable_group1(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.group1)
  return group1_.Mutable(index);
}
 ::benchmarks::SpeedMessage2_Group1* SpeedMessage2::add_group1() {
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage2.group1)
  return group1_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::benchmarks::SpeedMessage2_Group1 >&
SpeedMessage2::group1() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage2.group1)
  return group1_;
}
 ::google::protobuf::RepeatedPtrField< ::benchmarks::SpeedMessage2_Group1 >*
SpeedMessage2::mutable_group1() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage2.group1)
  return &group1_;
}

// repeated string field128 = 128;
 int SpeedMessage2::field128_size() const {
  return field128_.size();
}
 void SpeedMessage2::clear_field128() {
  field128_.Clear();
}
 const ::std::string& SpeedMessage2::field128(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field128)
  return field128_.Get(index);
}
 ::std::string* SpeedMessage2::mutable_field128(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.field128)
  return field128_.Mutable(index);
}
 void SpeedMessage2::set_field128(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field128)
  field128_.Mutable(index)->assign(value);
}
 void SpeedMessage2::set_field128(int index, const char* value) {
  field128_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.field128)
}
 void SpeedMessage2::set_field128(int index, const char* value, size_t size) {
  field128_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.field128)
}
 ::std::string* SpeedMessage2::add_field128() {
  return field128_.Add();
}
 void SpeedMessage2::add_field128(const ::std::string& value) {
  field128_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage2.field128)
}
 void SpeedMessage2::add_field128(const char* value) {
  field128_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SpeedMessage2.field128)
}
 void SpeedMessage2::add_field128(const char* value, size_t size) {
  field128_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SpeedMessage2.field128)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SpeedMessage2::field128() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage2.field128)
  return field128_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SpeedMessage2::mutable_field128() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage2.field128)
  return &field128_;
}

// optional int64 field131 = 131;
 bool SpeedMessage2::has_field131() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
 void SpeedMessage2::set_has_field131() {
  _has_bits_[0] |= 0x01000000u;
}
 void SpeedMessage2::clear_has_field131() {
  _has_bits_[0] &= ~0x01000000u;
}
 void SpeedMessage2::clear_field131() {
  field131_ = GOOGLE_LONGLONG(0);
  clear_has_field131();
}
 ::google::protobuf::int64 SpeedMessage2::field131() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field131)
  return field131_;
}
 void SpeedMessage2::set_field131(::google::protobuf::int64 value) {
  set_has_field131();
  field131_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field131)
}

// repeated string field127 = 127;
 int SpeedMessage2::field127_size() const {
  return field127_.size();
}
 void SpeedMessage2::clear_field127() {
  field127_.Clear();
}
 const ::std::string& SpeedMessage2::field127(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field127)
  return field127_.Get(index);
}
 ::std::string* SpeedMessage2::mutable_field127(int index) {
  // @@protoc_insertion_point(field_mutable:benchmarks.SpeedMessage2.field127)
  return field127_.Mutable(index);
}
 void SpeedMessage2::set_field127(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field127)
  field127_.Mutable(index)->assign(value);
}
 void SpeedMessage2::set_field127(int index, const char* value) {
  field127_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmarks.SpeedMessage2.field127)
}
 void SpeedMessage2::set_field127(int index, const char* value, size_t size) {
  field127_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmarks.SpeedMessage2.field127)
}
 ::std::string* SpeedMessage2::add_field127() {
  return field127_.Add();
}
 void SpeedMessage2::add_field127(const ::std::string& value) {
  field127_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage2.field127)
}
 void SpeedMessage2::add_field127(const char* value) {
  field127_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmarks.SpeedMessage2.field127)
}
 void SpeedMessage2::add_field127(const char* value, size_t size) {
  field127_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmarks.SpeedMessage2.field127)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SpeedMessage2::field127() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage2.field127)
  return field127_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SpeedMessage2::mutable_field127() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage2.field127)
  return &field127_;
}

// optional int32 field129 = 129;
 bool SpeedMessage2::has_field129() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
 void SpeedMessage2::set_has_field129() {
  _has_bits_[0] |= 0x04000000u;
}
 void SpeedMessage2::clear_has_field129() {
  _has_bits_[0] &= ~0x04000000u;
}
 void SpeedMessage2::clear_field129() {
  field129_ = 0;
  clear_has_field129();
}
 ::google::protobuf::int32 SpeedMessage2::field129() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field129)
  return field129_;
}
 void SpeedMessage2::set_field129(::google::protobuf::int32 value) {
  set_has_field129();
  field129_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field129)
}

// repeated int64 field130 = 130;
 int SpeedMessage2::field130_size() const {
  return field130_.size();
}
 void SpeedMessage2::clear_field130() {
  field130_.Clear();
}
 ::google::protobuf::int64 SpeedMessage2::field130(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field130)
  return field130_.Get(index);
}
 void SpeedMessage2::set_field130(int index, ::google::protobuf::int64 value) {
  field130_.Set(index, value);
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field130)
}
 void SpeedMessage2::add_field130(::google::protobuf::int64 value) {
  field130_.Add(value);
  // @@protoc_insertion_point(field_add:benchmarks.SpeedMessage2.field130)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SpeedMessage2::field130() const {
  // @@protoc_insertion_point(field_list:benchmarks.SpeedMessage2.field130)
  return field130_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SpeedMessage2::mutable_field130() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.SpeedMessage2.field130)
  return &field130_;
}

// optional bool field205 = 205 [default = false];
 bool SpeedMessage2::has_field205() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
 void SpeedMessage2::set_has_field205() {
  _has_bits_[0] |= 0x10000000u;
}
 void SpeedMessage2::clear_has_field205() {
  _has_bits_[0] &= ~0x10000000u;
}
 void SpeedMessage2::clear_field205() {
  field205_ = false;
  clear_has_field205();
}
 bool SpeedMessage2::field205() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field205)
  return field205_;
}
 void SpeedMessage2::set_field205(bool value) {
  set_has_field205();
  field205_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field205)
}

// optional bool field206 = 206 [default = false];
 bool SpeedMessage2::has_field206() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
 void SpeedMessage2::set_has_field206() {
  _has_bits_[0] |= 0x20000000u;
}
 void SpeedMessage2::clear_has_field206() {
  _has_bits_[0] &= ~0x20000000u;
}
 void SpeedMessage2::clear_field206() {
  field206_ = false;
  clear_has_field206();
}
 bool SpeedMessage2::field206() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2.field206)
  return field206_;
}
 void SpeedMessage2::set_field206(bool value) {
  set_has_field206();
  field206_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2.field206)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SpeedMessage2GroupedMessage::kField1FieldNumber;
const int SpeedMessage2GroupedMessage::kField2FieldNumber;
const int SpeedMessage2GroupedMessage::kField3FieldNumber;
const int SpeedMessage2GroupedMessage::kField4FieldNumber;
const int SpeedMessage2GroupedMessage::kField5FieldNumber;
const int SpeedMessage2GroupedMessage::kField6FieldNumber;
const int SpeedMessage2GroupedMessage::kField7FieldNumber;
const int SpeedMessage2GroupedMessage::kField8FieldNumber;
const int SpeedMessage2GroupedMessage::kField9FieldNumber;
const int SpeedMessage2GroupedMessage::kField10FieldNumber;
const int SpeedMessage2GroupedMessage::kField11FieldNumber;
#endif  // !_MSC_VER

SpeedMessage2GroupedMessage::SpeedMessage2GroupedMessage()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:benchmarks.SpeedMessage2GroupedMessage)
}

void SpeedMessage2GroupedMessage::InitAsDefaultInstance() {
}

SpeedMessage2GroupedMessage::SpeedMessage2GroupedMessage(const SpeedMessage2GroupedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:benchmarks.SpeedMessage2GroupedMessage)
}

void SpeedMessage2GroupedMessage::SharedCtor() {
  _cached_size_ = 0;
  field1_ = 0;
  field2_ = 0;
  field3_ = 0;
  field4_ = false;
  field5_ = false;
  field6_ = true;
  field7_ = false;
  field8_ = 0;
  field9_ = false;
  field10_ = 0;
  field11_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpeedMessage2GroupedMessage::~SpeedMessage2GroupedMessage() {
  // @@protoc_insertion_point(destructor:benchmarks.SpeedMessage2GroupedMessage)
  SharedDtor();
}

void SpeedMessage2GroupedMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SpeedMessage2GroupedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedMessage2GroupedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpeedMessage2GroupedMessage_descriptor_;
}

const SpeedMessage2GroupedMessage& SpeedMessage2GroupedMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_5fspeed_2eproto();
  return *default_instance_;
}

SpeedMessage2GroupedMessage* SpeedMessage2GroupedMessage::default_instance_ = NULL;

SpeedMessage2GroupedMessage* SpeedMessage2GroupedMessage::New(::google::protobuf::Arena* arena) const {
  SpeedMessage2GroupedMessage* n = new SpeedMessage2GroupedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpeedMessage2GroupedMessage::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpeedMessage2GroupedMessage*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(field1_, field5_);
    ZR_(field7_, field8_);
    field6_ = true;
  }
  ZR_(field9_, field10_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpeedMessage2GroupedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:benchmarks.SpeedMessage2GroupedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float field1 = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field1_)));
          set_has_field1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_field2;
        break;
      }

      // optional float field2 = 2;
      case 2: {
        if (tag == 21) {
         parse_field2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field2_)));
          set_has_field2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_field3;
        break;
      }

      // optional float field3 = 3 [default = 0];
      case 3: {
        if (tag == 29) {
         parse_field3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field3_)));
          set_has_field3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_field4;
        break;
      }

      // optional bool field4 = 4;
      case 4: {
        if (tag == 32) {
         parse_field4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field4_)));
          set_has_field4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_field5;
        break;
      }

      // optional bool field5 = 5;
      case 5: {
        if (tag == 40) {
         parse_field5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field5_)));
          set_has_field5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_field6;
        break;
      }

      // optional bool field6 = 6 [default = true];
      case 6: {
        if (tag == 48) {
         parse_field6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field6_)));
          set_has_field6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_field7;
        break;
      }

      // optional bool field7 = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_field7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field7_)));
          set_has_field7();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_field8;
        break;
      }

      // optional float field8 = 8;
      case 8: {
        if (tag == 69) {
         parse_field8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field8_)));
          set_has_field8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_field9;
        break;
      }

      // optional bool field9 = 9;
      case 9: {
        if (tag == 72) {
         parse_field9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &field9_)));
          set_has_field9();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_field10;
        break;
      }

      // optional float field10 = 10;
      case 10: {
        if (tag == 85) {
         parse_field10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &field10_)));
          set_has_field10();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_field11;
        break;
      }

      // optional int64 field11 = 11;
      case 11: {
        if (tag == 88) {
         parse_field11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field11_)));
          set_has_field11();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:benchmarks.SpeedMessage2GroupedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:benchmarks.SpeedMessage2GroupedMessage)
  return false;
#undef DO_
}

void SpeedMessage2GroupedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:benchmarks.SpeedMessage2GroupedMessage)
  // optional float field1 = 1;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->field1(), output);
  }

  // optional float field2 = 2;
  if (has_field2()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->field2(), output);
  }

  // optional float field3 = 3 [default = 0];
  if (has_field3()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->field3(), output);
  }

  // optional bool field4 = 4;
  if (has_field4()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->field4(), output);
  }

  // optional bool field5 = 5;
  if (has_field5()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->field5(), output);
  }

  // optional bool field6 = 6 [default = true];
  if (has_field6()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->field6(), output);
  }

  // optional bool field7 = 7 [default = false];
  if (has_field7()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->field7(), output);
  }

  // optional float field8 = 8;
  if (has_field8()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->field8(), output);
  }

  // optional bool field9 = 9;
  if (has_field9()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->field9(), output);
  }

  // optional float field10 = 10;
  if (has_field10()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->field10(), output);
  }

  // optional int64 field11 = 11;
  if (has_field11()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->field11(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:benchmarks.SpeedMessage2GroupedMessage)
}

::google::protobuf::uint8* SpeedMessage2GroupedMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:benchmarks.SpeedMessage2GroupedMessage)
  // optional float field1 = 1;
  if (has_field1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->field1(), target);
  }

  // optional float field2 = 2;
  if (has_field2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->field2(), target);
  }

  // optional float field3 = 3 [default = 0];
  if (has_field3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->field3(), target);
  }

  // optional bool field4 = 4;
  if (has_field4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->field4(), target);
  }

  // optional bool field5 = 5;
  if (has_field5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->field5(), target);
  }

  // optional bool field6 = 6 [default = true];
  if (has_field6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->field6(), target);
  }

  // optional bool field7 = 7 [default = false];
  if (has_field7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->field7(), target);
  }

  // optional float field8 = 8;
  if (has_field8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->field8(), target);
  }

  // optional bool field9 = 9;
  if (has_field9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->field9(), target);
  }

  // optional float field10 = 10;
  if (has_field10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->field10(), target);
  }

  // optional int64 field11 = 11;
  if (has_field11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->field11(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:benchmarks.SpeedMessage2GroupedMessage)
  return target;
}

int SpeedMessage2GroupedMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional float field1 = 1;
    if (has_field1()) {
      total_size += 1 + 4;
    }

    // optional float field2 = 2;
    if (has_field2()) {
      total_size += 1 + 4;
    }

    // optional float field3 = 3 [default = 0];
    if (has_field3()) {
      total_size += 1 + 4;
    }

    // optional bool field4 = 4;
    if (has_field4()) {
      total_size += 1 + 1;
    }

    // optional bool field5 = 5;
    if (has_field5()) {
      total_size += 1 + 1;
    }

    // optional bool field6 = 6 [default = true];
    if (has_field6()) {
      total_size += 1 + 1;
    }

    // optional bool field7 = 7 [default = false];
    if (has_field7()) {
      total_size += 1 + 1;
    }

    // optional float field8 = 8;
    if (has_field8()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 1792) {
    // optional bool field9 = 9;
    if (has_field9()) {
      total_size += 1 + 1;
    }

    // optional float field10 = 10;
    if (has_field10()) {
      total_size += 1 + 4;
    }

    // optional int64 field11 = 11;
    if (has_field11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field11());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedMessage2GroupedMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpeedMessage2GroupedMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpeedMessage2GroupedMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpeedMessage2GroupedMessage::MergeFrom(const SpeedMessage2GroupedMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      set_field1(from.field1());
    }
    if (from.has_field2()) {
      set_field2(from.field2());
    }
    if (from.has_field3()) {
      set_field3(from.field3());
    }
    if (from.has_field4()) {
      set_field4(from.field4());
    }
    if (from.has_field5()) {
      set_field5(from.field5());
    }
    if (from.has_field6()) {
      set_field6(from.field6());
    }
    if (from.has_field7()) {
      set_field7(from.field7());
    }
    if (from.has_field8()) {
      set_field8(from.field8());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_field9()) {
      set_field9(from.field9());
    }
    if (from.has_field10()) {
      set_field10(from.field10());
    }
    if (from.has_field11()) {
      set_field11(from.field11());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpeedMessage2GroupedMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedMessage2GroupedMessage::CopyFrom(const SpeedMessage2GroupedMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedMessage2GroupedMessage::IsInitialized() const {

  return true;
}

void SpeedMessage2GroupedMessage::Swap(SpeedMessage2GroupedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedMessage2GroupedMessage::InternalSwap(SpeedMessage2GroupedMessage* other) {
  std::swap(field1_, other->field1_);
  std::swap(field2_, other->field2_);
  std::swap(field3_, other->field3_);
  std::swap(field4_, other->field4_);
  std::swap(field5_, other->field5_);
  std::swap(field6_, other->field6_);
  std::swap(field7_, other->field7_);
  std::swap(field8_, other->field8_);
  std::swap(field9_, other->field9_);
  std::swap(field10_, other->field10_);
  std::swap(field11_, other->field11_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpeedMessage2GroupedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpeedMessage2GroupedMessage_descriptor_;
  metadata.reflection = SpeedMessage2GroupedMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpeedMessage2GroupedMessage

// optional float field1 = 1;
 bool SpeedMessage2GroupedMessage::has_field1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field1() {
  _has_bits_[0] |= 0x00000001u;
}
 void SpeedMessage2GroupedMessage::clear_has_field1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SpeedMessage2GroupedMessage::clear_field1() {
  field1_ = 0;
  clear_has_field1();
}
 float SpeedMessage2GroupedMessage::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field1)
  return field1_;
}
 void SpeedMessage2GroupedMessage::set_field1(float value) {
  set_has_field1();
  field1_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field1)
}

// optional float field2 = 2;
 bool SpeedMessage2GroupedMessage::has_field2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field2() {
  _has_bits_[0] |= 0x00000002u;
}
 void SpeedMessage2GroupedMessage::clear_has_field2() {
  _has_bits_[0] &= ~0x00000002u;
}
 void SpeedMessage2GroupedMessage::clear_field2() {
  field2_ = 0;
  clear_has_field2();
}
 float SpeedMessage2GroupedMessage::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field2)
  return field2_;
}
 void SpeedMessage2GroupedMessage::set_field2(float value) {
  set_has_field2();
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field2)
}

// optional float field3 = 3 [default = 0];
 bool SpeedMessage2GroupedMessage::has_field3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field3() {
  _has_bits_[0] |= 0x00000004u;
}
 void SpeedMessage2GroupedMessage::clear_has_field3() {
  _has_bits_[0] &= ~0x00000004u;
}
 void SpeedMessage2GroupedMessage::clear_field3() {
  field3_ = 0;
  clear_has_field3();
}
 float SpeedMessage2GroupedMessage::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field3)
  return field3_;
}
 void SpeedMessage2GroupedMessage::set_field3(float value) {
  set_has_field3();
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field3)
}

// optional bool field4 = 4;
 bool SpeedMessage2GroupedMessage::has_field4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field4() {
  _has_bits_[0] |= 0x00000008u;
}
 void SpeedMessage2GroupedMessage::clear_has_field4() {
  _has_bits_[0] &= ~0x00000008u;
}
 void SpeedMessage2GroupedMessage::clear_field4() {
  field4_ = false;
  clear_has_field4();
}
 bool SpeedMessage2GroupedMessage::field4() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field4)
  return field4_;
}
 void SpeedMessage2GroupedMessage::set_field4(bool value) {
  set_has_field4();
  field4_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field4)
}

// optional bool field5 = 5;
 bool SpeedMessage2GroupedMessage::has_field5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field5() {
  _has_bits_[0] |= 0x00000010u;
}
 void SpeedMessage2GroupedMessage::clear_has_field5() {
  _has_bits_[0] &= ~0x00000010u;
}
 void SpeedMessage2GroupedMessage::clear_field5() {
  field5_ = false;
  clear_has_field5();
}
 bool SpeedMessage2GroupedMessage::field5() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field5)
  return field5_;
}
 void SpeedMessage2GroupedMessage::set_field5(bool value) {
  set_has_field5();
  field5_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field5)
}

// optional bool field6 = 6 [default = true];
 bool SpeedMessage2GroupedMessage::has_field6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field6() {
  _has_bits_[0] |= 0x00000020u;
}
 void SpeedMessage2GroupedMessage::clear_has_field6() {
  _has_bits_[0] &= ~0x00000020u;
}
 void SpeedMessage2GroupedMessage::clear_field6() {
  field6_ = true;
  clear_has_field6();
}
 bool SpeedMessage2GroupedMessage::field6() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field6)
  return field6_;
}
 void SpeedMessage2GroupedMessage::set_field6(bool value) {
  set_has_field6();
  field6_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field6)
}

// optional bool field7 = 7 [default = false];
 bool SpeedMessage2GroupedMessage::has_field7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field7() {
  _has_bits_[0] |= 0x00000040u;
}
 void SpeedMessage2GroupedMessage::clear_has_field7() {
  _has_bits_[0] &= ~0x00000040u;
}
 void SpeedMessage2GroupedMessage::clear_field7() {
  field7_ = false;
  clear_has_field7();
}
 bool SpeedMessage2GroupedMessage::field7() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field7)
  return field7_;
}
 void SpeedMessage2GroupedMessage::set_field7(bool value) {
  set_has_field7();
  field7_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field7)
}

// optional float field8 = 8;
 bool SpeedMessage2GroupedMessage::has_field8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field8() {
  _has_bits_[0] |= 0x00000080u;
}
 void SpeedMessage2GroupedMessage::clear_has_field8() {
  _has_bits_[0] &= ~0x00000080u;
}
 void SpeedMessage2GroupedMessage::clear_field8() {
  field8_ = 0;
  clear_has_field8();
}
 float SpeedMessage2GroupedMessage::field8() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field8)
  return field8_;
}
 void SpeedMessage2GroupedMessage::set_field8(float value) {
  set_has_field8();
  field8_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field8)
}

// optional bool field9 = 9;
 bool SpeedMessage2GroupedMessage::has_field9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field9() {
  _has_bits_[0] |= 0x00000100u;
}
 void SpeedMessage2GroupedMessage::clear_has_field9() {
  _has_bits_[0] &= ~0x00000100u;
}
 void SpeedMessage2GroupedMessage::clear_field9() {
  field9_ = false;
  clear_has_field9();
}
 bool SpeedMessage2GroupedMessage::field9() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field9)
  return field9_;
}
 void SpeedMessage2GroupedMessage::set_field9(bool value) {
  set_has_field9();
  field9_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field9)
}

// optional float field10 = 10;
 bool SpeedMessage2GroupedMessage::has_field10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field10() {
  _has_bits_[0] |= 0x00000200u;
}
 void SpeedMessage2GroupedMessage::clear_has_field10() {
  _has_bits_[0] &= ~0x00000200u;
}
 void SpeedMessage2GroupedMessage::clear_field10() {
  field10_ = 0;
  clear_has_field10();
}
 float SpeedMessage2GroupedMessage::field10() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field10)
  return field10_;
}
 void SpeedMessage2GroupedMessage::set_field10(float value) {
  set_has_field10();
  field10_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field10)
}

// optional int64 field11 = 11;
 bool SpeedMessage2GroupedMessage::has_field11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void SpeedMessage2GroupedMessage::set_has_field11() {
  _has_bits_[0] |= 0x00000400u;
}
 void SpeedMessage2GroupedMessage::clear_has_field11() {
  _has_bits_[0] &= ~0x00000400u;
}
 void SpeedMessage2GroupedMessage::clear_field11() {
  field11_ = GOOGLE_LONGLONG(0);
  clear_has_field11();
}
 ::google::protobuf::int64 SpeedMessage2GroupedMessage::field11() const {
  // @@protoc_insertion_point(field_get:benchmarks.SpeedMessage2GroupedMessage.field11)
  return field11_;
}
 void SpeedMessage2GroupedMessage::set_field11(::google::protobuf::int64 value) {
  set_has_field11();
  field11_ = value;
  // @@protoc_insertion_point(field_set:benchmarks.SpeedMessage2GroupedMessage.field11)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace benchmarks

// @@protoc_insertion_point(global_scope)
